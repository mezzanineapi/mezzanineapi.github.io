<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/Physics/hingeconstraint.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;15,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_61c0ec937c468b49b332752e9f643e74.xhtml">Physics</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">hingeconstraint.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _physicshingeconstraint_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _physicshingeconstraint_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;hingeconstraint.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;stringtool.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="serialization_8h.xhtml" title="The interface for serialization.">serialization.h</a>&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;btBulletDynamicsCommon.h&gt;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">namespace </span>Physics</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"></span>        <span class="comment">// Hinge Constraint Functions</span><span class="comment"></span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">        /////////////////////////////////////////</span></div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a353f970fdedb9c05aee6a10288fd22d0">   56</a></span>&#160;<span class="comment"></span>        btTypedConstraint* <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a353f970fdedb9c05aee6a10288fd22d0" title="Get the Bullet constraint that this class encapsulates. ">HingeConstraint::GetConstraintBase</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>; }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"></span>        <span class="comment">// HingeConstraint Construction and Destruction</span></div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a403148e52e3d28091c451b45a9c0d2f0">   61</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a403148e52e3d28091c451b45a9c0d2f0" title="Creates a Hinge constraint that will connect two actors together by their offsets.">HingeConstraint::HingeConstraint</a>(<a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorA, <a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; PivotInA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; PivotInB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; AxisInA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; AxisInB, <span class="keywordtype">bool</span> UseReferenceFrameA)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a0dd0d94feeb3d15c650aa2fcb5352110" title="Sets the Internal actor pointers.">SetBodies</a>(ActorA,ActorB);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            btVector3 tempA(AxisInA.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            btVector3 tempB(AxisInB.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a> = <span class="keyword">new</span> btHingeConstraint(*<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#adef4626e3c28e717058d18ff80f4c104" title="First rigid body the constraint applies to.">BodyA</a>, *<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a83db6ff278bb5e7d51ebec87f3ab7279" title="Second rigid body the constraint applies to(if applicable).">BodyB</a>, PivotInA.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>(), PivotInB.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>(), tempA, tempB, bool(UseReferenceFrameA));</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a408de212758946d60fc79d2fd10c714a">   70</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a403148e52e3d28091c451b45a9c0d2f0" title="Creates a Hinge constraint that will connect two actors together by their offsets.">HingeConstraint::HingeConstraint</a>(<a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; PivotInA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; AxisInA, <span class="keywordtype">bool</span> UseReferenceFrameA)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a0dd0d94feeb3d15c650aa2fcb5352110" title="Sets the Internal actor pointers.">SetBodies</a>(ActorA);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            btVector3 tempA(AxisInA.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a> = <span class="keyword">new</span> btHingeConstraint(*<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#adef4626e3c28e717058d18ff80f4c104" title="First rigid body the constraint applies to.">BodyA</a>, PivotInA.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>(), tempA, bool(UseReferenceFrameA));</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#afa61b9a488770edd824deae88d938f82">   78</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a403148e52e3d28091c451b45a9c0d2f0" title="Creates a Hinge constraint that will connect two actors together by their offsets.">HingeConstraint::HingeConstraint</a>(<a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorA, <a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; VectorA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; VectorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; QuaternionA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; QuaternionB, <span class="keywordtype">bool</span> UseReferenceFrameA)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a0dd0d94feeb3d15c650aa2fcb5352110" title="Sets the Internal actor pointers.">SetBodies</a>(ActorA,ActorB);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            btTransform transa(QuaternionA.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>(), VectorA.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            btTransform transb(QuaternionB.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>(), VectorB.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a> = <span class="keyword">new</span> btHingeConstraint(*<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#adef4626e3c28e717058d18ff80f4c104" title="First rigid body the constraint applies to.">BodyA</a>, *<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a83db6ff278bb5e7d51ebec87f3ab7279" title="Second rigid body the constraint applies to(if applicable).">BodyB</a>, transa, transb, UseReferenceFrameA);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ac9cb130fdfa5e1493ae6639ffe4aceac">   87</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a403148e52e3d28091c451b45a9c0d2f0" title="Creates a Hinge constraint that will connect two actors together by their offsets.">HingeConstraint::HingeConstraint</a>(<a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorA, <a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TransformA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TransformB, <span class="keywordtype">bool</span> UseReferenceFrameA)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a0dd0d94feeb3d15c650aa2fcb5352110" title="Sets the Internal actor pointers.">SetBodies</a>(ActorA,ActorB);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a> = <span class="keyword">new</span> btHingeConstraint(*<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#adef4626e3c28e717058d18ff80f4c104" title="First rigid body the constraint applies to.">BodyA</a>, *<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a83db6ff278bb5e7d51ebec87f3ab7279" title="Second rigid body the constraint applies to(if applicable).">BodyB</a>, TransformA.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(), TransformB.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(), UseReferenceFrameA);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a4b97a566fd8cf28e029e859bf66d43eb">   94</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a4b97a566fd8cf28e029e859bf66d43eb" title="Class destructor.">HingeConstraint::~HingeConstraint</a>()</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span>        <span class="comment">// HingeConstraint Position and Orientation</span></div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ac6d01f853df57b1524522111a2f463af">  102</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ac6d01f853df57b1524522111a2f463af" title="Set The relative location of the hinge pivot from ActorA&#39;s Center of gravity.">HingeConstraint::SetPivotALocation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Location)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getAFrame().setOrigin(Location.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>()); }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a3a9c39b51d720c8df8c2a64b35ed8c7b">  105</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a3a9c39b51d720c8df8c2a64b35ed8c7b" title="Set The relative location of the hinge pivot from ActorB&#39;s Center of gravity.">HingeConstraint::SetPivotBLocation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Location)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getBFrame().setOrigin(Location.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>()); }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ae1948dd6a05f2385b9bdef0875e3e28a">  108</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ae1948dd6a05f2385b9bdef0875e3e28a" title="Get the location of the hinge pivot relative to ActorA&#39;s Center of gravity.">HingeConstraint::GetPivotALocation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getAFrame().getOrigin()); }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ad6dac476f6aa5954792255f8a06e1c3a">  111</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ad6dac476f6aa5954792255f8a06e1c3a" title="Get the location of the hinge pivot relative to ActorB&#39;s Center of gravity.">HingeConstraint::GetPivotBLocation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getBFrame().getOrigin()); }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a3b3910992ae4fbbd91a25ba74409a699">  114</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a3b3910992ae4fbbd91a25ba74409a699" title="Set The relative rotation of ActorA.">HingeConstraint::SetAPivotRotation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; Rotation)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getBFrame().setRotation(Rotation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>()); }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a74fba78574b1c6491ceac3efe9b736cd">  117</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a74fba78574b1c6491ceac3efe9b736cd" title="Set The relative rotation of ActorB.">HingeConstraint::SetBPivotRotation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; Rotation)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getBFrame().setRotation(Rotation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>()); }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa4b7bf76ed0c61537060af9349190fee">  120</a></span>&#160;        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa4b7bf76ed0c61537060af9349190fee" title="Get the relative rotation for ActorA.">HingeConstraint::GetAPivotRotation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getAFrame().getRotation()); }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a4eb8f96ef2f3e530b5d1d8616cf6ca43">  123</a></span>&#160;        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a4eb8f96ef2f3e530b5d1d8616cf6ca43" title="Get the relative rotation for ActorB.">HingeConstraint::GetBPivotRotation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getBFrame().getRotation()); }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a43eeb7c550edec91c948bdce4e37f17a">  126</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a43eeb7c550edec91c948bdce4e37f17a">HingeConstraint::SetPivotATransform</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TranA)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getAFrame() &lt;&lt; TranA; }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a99317d633b3fe14ccdce2a46a9da9638">  129</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a99317d633b3fe14ccdce2a46a9da9638">HingeConstraint::SetPivotBTransform</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TranB)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getBFrame() &lt;&lt; TranB; }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a79e020e03997bcd3f4b709c2393cf5d7">  132</a></span>&#160;        <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a79e020e03997bcd3f4b709c2393cf5d7">HingeConstraint::GetPivotATransform</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getAFrame()); }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a16d0dc95b0e22c81a86dda9aef9c9c18">  135</a></span>&#160;        <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a16d0dc95b0e22c81a86dda9aef9c9c18">HingeConstraint::GetPivotBTransform</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getBFrame()); }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"></span>        <span class="comment">// HingeConstraint Angular Motor</span></div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1e38da60ec9236cc1bb6b2ce1bb81766">  140</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1e38da60ec9236cc1bb6b2ce1bb81766" title="Enables(or Disables) the motor on the hinge and sets it&#39;s parameters.">HingeConstraint::EnableMotor</a>(<span class="keywordtype">bool</span> EnableMotor, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> TargetVelocity, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> MaxMotorImpulse)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;enableAngularMotor(EnableMotor, TargetVelocity, MaxMotorImpulse); }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a9378e18ac258d6d2f3442a6d8536e33f">  143</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1e38da60ec9236cc1bb6b2ce1bb81766" title="Enables(or Disables) the motor on the hinge and sets it&#39;s parameters.">HingeConstraint::EnableMotor</a>(<span class="keywordtype">bool</span> EnableMotor)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;enableMotor(EnableMotor); }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ab44f1d1626b16e2c9b600d0051aed0e8">  146</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ab44f1d1626b16e2c9b600d0051aed0e8" title="Is this motor on this hinge enabled?">HingeConstraint::GetMotorEnabled</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getEnableAngularMotor(); }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a65beca979df993fdec7a962b53f9b3b7">  149</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a65beca979df993fdec7a962b53f9b3b7" title="Sets the maximum amount of force the motor is to apply.">HingeConstraint::SetMaxMotorImpulse</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> MaxMotorImpulse)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;setMaxMotorImpulse(MaxMotorImpulse); }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a259808ce3bdaff5b35cc9018130d0c8e">  152</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a259808ce3bdaff5b35cc9018130d0c8e" title="Retrieve the maximimum value that the acceleration of the motor can be increased.">HingeConstraint::GetMaxMotorImpulse</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getMaxMotorImpulse(); }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aded1980b8e5dec4b34c85b1dbe669dd6">  155</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aded1980b8e5dec4b34c85b1dbe669dd6" title="Sets a Target Velocity, indirectly using the angle stored in a quaternion.">HingeConstraint::SetMotorTarget</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; QuatAInB, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Dt)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;setMotorTarget(QuatAInB.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>(), Dt); }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a070f7e6318c4617161252d55b65b06cf">  158</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aded1980b8e5dec4b34c85b1dbe669dd6" title="Sets a Target Velocity, indirectly using the angle stored in a quaternion.">HingeConstraint::SetMotorTarget</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> TargetAngle, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Dt)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;setMotorTarget(TargetAngle, Dt); }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a6ae6beac6296c51d7dc0b8e2b667e2a0">  161</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a6ae6beac6296c51d7dc0b8e2b667e2a0" title="Desired angular velocity of the motor.">HingeConstraint::SetMotorTargetVelocity</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> TargetVelocity)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;setMotorTargetVelocity(TargetVelocity); }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a25916226f9dd989e7dab3472e84212ce">  164</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a25916226f9dd989e7dab3472e84212ce" title="Get the Target Velocity.">HingeConstraint::GetMotorTargetVelocity</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getMotorTargetVelosity(); }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment"></span>        <span class="comment">// HingeConstraint Limits</span></div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa7f555fed2f29962913ee12b13634e5a">  169</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa7f555fed2f29962913ee12b13634e5a" title="Sets the angle limits of the constraint in radians.">HingeConstraint::SetLimit</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Low, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> High, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Softness, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> BiasFactor, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> RelaxationFactor)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;setLimit(Low, High, Softness, BiasFactor, RelaxationFactor); }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a02cfd96b40b4e957d7bf1a27314b6632">  172</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a02cfd96b40b4e957d7bf1a27314b6632" title="Return the Lower Limit of the hinge.">HingeConstraint::GetLimitLow</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getLowerLimit(); }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1fd2e1ee9244957c30b1b02f81f1a47e">  175</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1fd2e1ee9244957c30b1b02f81f1a47e" title="Return the Upper Limit of the hinge.">HingeConstraint::GetLimitHigh</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getUpperLimit(); }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a9f7ac9c5eebba4eff2064d54978bcd98">  178</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a9f7ac9c5eebba4eff2064d54978bcd98" title="Return the Softness of the hinge.">HingeConstraint::GetLimitSoftness</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getLimitSoftness(); }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a911fe87b14af4981e966dd5a8bb12092">  181</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a911fe87b14af4981e966dd5a8bb12092" title="Return the bias factor of the hinge (Not entirely certain hat this on is)">HingeConstraint::GetLimitBiasFactor</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getLimitBiasFactor(); }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a2db5dc11ce4436ae71f155bd7dce1165">  184</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a2db5dc11ce4436ae71f155bd7dce1165" title="Return the Relaxation Factor of the hinge.">HingeConstraint::GetLimitRelaxationFactor</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getLimitRelaxationFactor(); }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"></span>        <span class="comment">// HingeConstraint Details</span></div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a094cca779b94b183ee4a5884a9d0d7a2">  189</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a094cca779b94b183ee4a5884a9d0d7a2" title="Sets the axis on which this constraint acts.">HingeConstraint::SetAxis</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; AxisInA)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        {</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            btVector3 temp(AxisInA.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;setAxis(temp);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5c2ed0157d6397d892dc085ea967187a">  195</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5c2ed0157d6397d892dc085ea967187a" title="Gets the current angle of the hinge.">HingeConstraint::GetHingeAngle</a>()</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getHingeAngle();</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a9ef721f2573ee65b1df4b3c3cbccf870">  200</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#ab434efbcfdfe803d6f7cc014e7794868" title="Used to Store lists of param for return types.">Constraint::ParamList</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a9ef721f2573ee65b1df4b3c3cbccf870">HingeConstraint::ValidParamOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#ab434efbcfdfe803d6f7cc014e7794868" title="Used to Store lists of param for return types.">Constraint::ParamList</a> Results;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keywordflow">if</span>(-1==Axis||5==Axis)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                Results.push_back(Con_Stop_ERP);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                Results.push_back(<a class="code" href="namespaceMezzanine_1_1Physics.xhtml#aa640f4c4b2baf4a4039db76fd792d2c1ac7067723ec3340acdf2941f1a4f56569" title="CFM values adds some small value to the main diagonal on the constraint matrix to prevent degenerate ...">Con_CFM</a>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                Results.push_back(Con_Stop_CFM);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">return</span> Results;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a0ddaa3d2b507055bf7ddc60a4bcddd14">  212</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547" title="Used to Store lists of Int Axis for return types.">Constraint::AxisList</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a0ddaa3d2b507055bf7ddc60a4bcddd14" title="Get a sorted (low to high) list of all axis that operate linearly (that lock sliding/translation) ...">HingeConstraint::ValidLinearAxis</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547" title="Used to Store lists of Int Axis for return types.">Constraint::AxisList</a> Results;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            Results.push_back(-1);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">return</span> Results;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa4577c2cbe6a58d63db65b83a2c3a10f">  219</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547" title="Used to Store lists of Int Axis for return types.">Constraint::AxisList</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa4577c2cbe6a58d63db65b83a2c3a10f" title="Get A list sorted (low to high) of all axis that operate Angularly (that lock sliding/translation) ...">HingeConstraint::ValidAngularAxis</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547" title="Used to Store lists of Int Axis for return types.">Constraint::AxisList</a> Results;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            Results.push_back(5);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">return</span> Results;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        }</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00226"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ad96534a116721e74f2d01f76b1ca73ac">  226</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ad96534a116721e74f2d01f76b1ca73ac">HingeConstraint::HasParamBeenSet</a>(<a class="code" href="namespaceMezzanine_1_1Physics.xhtml#aa640f4c4b2baf4a4039db76fd792d2c1" title="Used by constraints for setting some parameters.">ConstraintParam</a> Param, <span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="comment">// the logic here should match the logic in the source at http://bulletphysics.com/Bullet/BulletFull/btHingeConstraint_8cpp_source.html#l00962</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="keywordflow">if</span> ( -1!=Axis &amp;&amp; 5!=Axis )</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;                { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">return</span>  ( Con_Stop_ERP==Param &amp;&amp; this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getFlags() &amp; BT_HINGE_FLAGS_ERP_STOP )   ||  <span class="comment">//if we are checking the stop_erp AND the stop_erp bit is set</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                    ( Con_Stop_CFM==Param &amp;&amp; this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getFlags() &amp; BT_HINGE_FLAGS_CFM_STOP )   ||  <span class="comment">//if we are checking the stop_cfm AND the stop_cfm bit is set</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                    ( <a class="code" href="namespaceMezzanine_1_1Physics.xhtml#aa640f4c4b2baf4a4039db76fd792d2c1ac7067723ec3340acdf2941f1a4f56569" title="CFM values adds some small value to the main diagonal on the constraint matrix to prevent degenerate ...">Con_CFM</a>==Param      &amp;&amp; this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getFlags() &amp; BT_HINGE_FLAGS_CFM_NORM )   ;   <span class="comment">//if we are checking the cfm AND the cfm bit is set</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ad1a3019c8c14c23f5f320d88c5b403b1">  236</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ad1a3019c8c14c23f5f320d88c5b403b1" title="Is this Using Reference Frame A.">HingeConstraint::GetUseReferenceFrameA</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getUseReferenceFrameA(); }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ae4de736466b89164b62344c580fc11fa">  239</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ae4de736466b89164b62344c580fc11fa" title="Change whether this is Using Reference Frame A or not.">HingeConstraint::SetUseReferenceFrameA</a>(<span class="keywordtype">bool</span> UseReferenceFrameA)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;setUseReferenceFrameA(UseReferenceFrameA); }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1fd05999ad22766ffa8c32d2dcd3d536">  242</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1fd05999ad22766ffa8c32d2dcd3d536" title="Retrieve the stored value from the physics subsystem(bullet)">HingeConstraint::GetUseFrameOffset</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;getUseFrameOffset(); }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a55e5d62e5502572f7823f105708b42fa">  245</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a55e5d62e5502572f7823f105708b42fa" title="Set the stored value for UseFrameOffset on this hinge in the physics subsystem(bullet)">HingeConstraint::SetUseFrameOffset</a>(<span class="keywordtype">bool</span> FrameOffset)</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a47896863617c9ce487370abb80bc4ff2" title="Bullet constraint that this class encapsulates.">Hinge</a>-&gt;setUseFrameOffset(FrameOffset); }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment"></span>        <span class="comment">// HingeConstraint Serialization</span></div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#add9e4f75bd30c30d00cd142447a0222d">  250</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#add9e4f75bd30c30d00cd142447a0222d" title="Convert this class to an XML::Node ready for serialization.">HingeConstraint::ProtoSerialize</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; CurrentRoot)<span class="keyword"> const</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> HingeNode = CurrentRoot.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>());          <span class="comment">// The base node all the base constraint stuff will go in</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            <span class="keywordflow">if</span> (!HingeNode)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create HingeNode&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> VerAttr = HingeNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;Version&quot;</span>);              <span class="comment">// Base Attributes</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> RefA = HingeNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;ReferenceInA&quot;</span>);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> FrameOff = HingeNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;UseFrameOffset&quot;</span>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            <span class="keywordflow">if</span>( VerAttr &amp;&amp; RefA &amp;&amp; FrameOff )</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                VerAttr.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(1);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                RefA.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ad1a3019c8c14c23f5f320d88c5b403b1" title="Is this Using Reference Frame A.">GetUseReferenceFrameA</a>());</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                FrameOff.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1fd05999ad22766ffa8c32d2dcd3d536" title="Retrieve the stored value from the physics subsystem(bullet)">GetUseFrameOffset</a>());</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create HingeNode Attributes&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>());</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> MotorNode = HingeNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;Motor&quot;</span>);                       <span class="comment">// Motor Node</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            <span class="keywordflow">if</span> (!MotorNode)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create MotorNode&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> MotEnabled = MotorNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;Enabled&quot;</span>);           <span class="comment">// Motor Attributes</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> MotImpulse = MotorNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;MaxImpulse&quot;</span>);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> MotTarget = MotorNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;TargetVelocity&quot;</span>);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            <span class="keywordflow">if</span>( MotEnabled &amp;&amp; MotImpulse &amp;&amp; MotTarget )</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            {</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                MotEnabled.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ab44f1d1626b16e2c9b600d0051aed0e8" title="Is this motor on this hinge enabled?">GetMotorEnabled</a>());</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                MotImpulse.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a259808ce3bdaff5b35cc9018130d0c8e" title="Retrieve the maximimum value that the acceleration of the motor can be increased.">GetMaxMotorImpulse</a>());</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                MotTarget.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a25916226f9dd989e7dab3472e84212ce" title="Get the Target Velocity.">GetMotorTargetVelocity</a>());</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create MotorNode Attributes&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>());</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;            }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LimitNode =  HingeNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;Limits&quot;</span>);                      <span class="comment">// Limits Node</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">if</span> (!LimitNode)</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LimitNode&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> LimLow = LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;Low&quot;</span>);                   <span class="comment">// Limits Attributes</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> LimHigh = LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;High&quot;</span>);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> LimSoft = LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;Softness&quot;</span>);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> LimBias = LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;BiasFactor&quot;</span>);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> LimRelax = LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;RelaxationFactor&quot;</span>);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="keywordflow">if</span>( LimLow &amp;&amp; LimHigh &amp;&amp; LimSoft &amp;&amp; LimBias &amp;&amp; LimRelax )</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                LimLow.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a02cfd96b40b4e957d7bf1a27314b6632" title="Return the Lower Limit of the hinge.">GetLimitLow</a>());</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                LimHigh.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1fd2e1ee9244957c30b1b02f81f1a47e" title="Return the Upper Limit of the hinge.">GetLimitHigh</a>());</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                LimSoft.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a9f7ac9c5eebba4eff2064d54978bcd98" title="Return the Softness of the hinge.">GetLimitSoftness</a>());</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                LimBias.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a911fe87b14af4981e966dd5a8bb12092" title="Return the bias factor of the hinge (Not entirely certain hat this on is)">GetLimitBiasFactor</a>());</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                LimRelax.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a2db5dc11ce4436ae71f155bd7dce1165" title="Return the Relaxation Factor of the hinge.">GetLimitRelaxationFactor</a>());</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create MotorNode Attributes&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>());</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            }</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1DualTransformConstraint.xhtml#aaca2896f7e64d80c37ad05f60b256d60" title="Convert this class to an XML::Node ready for serialization.">DualTransformConstraint::ProtoSerialize</a>(HingeNode);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa1b283a69834797c8e36c525a6e3cd13">  307</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa1b283a69834797c8e36c525a6e3cd13" title="Take the data stored in an XML and overwrite this instance of this object with it.">HingeConstraint::ProtoDeSerialize</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; OneNode)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        {</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>())==this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">HingeConstraint::SerializableName</a>() )</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                <span class="keywordflow">if</span>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Version&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>() == 1)</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                {</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> DualTranny = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;DualTransformConstraint&quot;</span>);</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;                    <span class="keywordflow">if</span>(!DualTranny)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate DualTransforn node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1DualTransformConstraint.xhtml#a42bbe8d59b2db5db2c53bb5fcdbb252d" title="Take the data stored in an XML and overwrite this instance of this object with it.">DualTransformConstraint::ProtoDeSerialize</a>(DualTranny);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> MotorNode = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;Motor&quot;</span>);</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                    <span class="keywordflow">if</span>(!MotorNode)</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate Motor node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LimitNode = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;Limits&quot;</span>);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                    <span class="keywordflow">if</span>(!LimitNode)</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate Limits node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#ae4de736466b89164b62344c580fc11fa" title="Change whether this is Using Reference Frame A or not.">SetUseReferenceFrameA</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;ReferenceInA&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4c95b188c053938505e3e770a311545c" title="Attempts to convert the value of the attribute to a float and returns the results.">AsBool</a>());</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a55e5d62e5502572f7823f105708b42fa" title="Set the stored value for UseFrameOffset on this hinge in the physics subsystem(bullet)">SetUseFrameOffset</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;UseFrameOffset&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4c95b188c053938505e3e770a311545c" title="Attempts to convert the value of the attribute to a float and returns the results.">AsBool</a>());</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a1e38da60ec9236cc1bb6b2ce1bb81766" title="Enables(or Disables) the motor on the hinge and sets it&#39;s parameters.">EnableMotor</a>(</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                        MotorNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Enabled&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4c95b188c053938505e3e770a311545c" title="Attempts to convert the value of the attribute to a float and returns the results.">AsBool</a>(),</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                        MotorNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;TargetVelocity&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>(),</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                        MotorNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;MaxImpulse&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>() );</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa7f555fed2f29962913ee12b13634e5a" title="Sets the angle limits of the constraint in radians.">SetLimit</a>(</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                        LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Low&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>(),</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                        LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;High&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>(),</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                        LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Softness&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>(),</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                        LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;BiasFactor&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>(),</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;                        LimitNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;RelaxationFactor&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>() );</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                    <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;find usable serialization version&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>());</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>(<span class="stringliteral">&quot;find correct class to deserialize, found a &quot;</span>)+OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>(),<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>());</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            }</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1">  348</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#a5d048884562c3196662077b17b8915f1" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">HingeConstraint::SerializableName</a>()</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            { <span class="keywordflow">return</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>(<span class="stringliteral">&quot;HingeConstraint&quot;</span>); }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }<span class="comment">//Physics</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment"></span><span class="comment">// Class External &lt;&lt; Operators for streaming or assignment</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;std::ostream&amp; operator &lt;&lt; (std::ostream&amp; stream, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml" title="This is a constraint to be used to restrict the movement between two objects to angular rotation on a...">Mezzanine::Physics::HingeConstraint</a>&amp; x)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;{</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a9015c5e668e14b857a27888c56934148" title="Convert any class that supports serialization or has a serializer to a string of chars in a stream...">Mezzanine::Serialize</a>(stream,x);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">return</span> stream;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;}</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;std::istream&amp; operator &gt;&gt; (std::istream&amp; stream, <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml" title="This is a constraint to be used to restrict the movement between two objects to angular rotation on a...">Mezzanine::Physics::HingeConstraint</a>&amp; x)</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    { <span class="keywordflow">return</span> <a class="code" href="namespaceMezzanine.xhtml#ad8989ea81ccd1ad6d59a11921f0239a4" title="Deserialize the next xml tag in the stream into a specific in memory class instance.">Mezzanine::DeSerialize</a>(stream, x); }</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keywordtype">void</span> operator &gt;&gt; (<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Mezzanine::XML::Node</a>&amp; OneNode, <a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml" title="This is a constraint to be used to restrict the movement between two objects to angular rotation on a...">Mezzanine::Physics::HingeConstraint</a>&amp; x)</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    { x.<a class="code" href="classMezzanine_1_1Physics_1_1HingeConstraint.xhtml#aa1b283a69834797c8e36c525a6e3cd13" title="Take the data stored in an XML and overwrite this instance of this object with it.">ProtoDeSerialize</a>(OneNode); }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 15 2013 04:00:23 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
