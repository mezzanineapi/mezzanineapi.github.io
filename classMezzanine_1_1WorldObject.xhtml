<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::WorldObject Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September14,2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1WorldObject-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::WorldObject Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the base class from which classes that are insertable into the physical world.  
 <a href="classMezzanine_1_1WorldObject.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="worldobject_8h_source.xhtml">worldobject.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::WorldObject:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1WorldObject__inherit__graph.svg" width="100%" height="530"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::WorldObject:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1WorldObject__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7718ab150d1337b52715b0db1a4a4762"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7718ab150d1337b52715b0db1a4a4762"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a7718ab150d1337b52715b0db1a4a4762">WorldObject</a> ()</td></tr>
<tr class="memdesc:a7718ab150d1337b52715b0db1a4a4762"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a7718ab150d1337b52715b0db1a4a4762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d7a43cbe188b33cb2c6e6e88aab3db9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3d7a43cbe188b33cb2c6e6e88aab3db9"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a3d7a43cbe188b33cb2c6e6e88aab3db9">~WorldObject</a> ()</td></tr>
<tr class="memdesc:a3d7a43cbe188b33cb2c6e6e88aab3db9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a3d7a43cbe188b33cb2c6e6e88aab3db9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4564b948a585aac1764ee13f2a61c110"><td class="memItemLeft" align="right" valign="top">virtual btCollisionObject *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a4564b948a585aac1764ee13f2a61c110">_GetBasePhysicsObject</a> () const </td></tr>
<tr class="memdesc:a4564b948a585aac1764ee13f2a61c110"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal physics object this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object is based on.  <a href="#a4564b948a585aac1764ee13f2a61c110">More...</a><br/></td></tr>
<tr class="separator:a4564b948a585aac1764ee13f2a61c110"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1123ace3f7730eaf1eb395b3aad714a4"><td class="memItemLeft" align="right" valign="top">virtual Ogre::SceneNode *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a1123ace3f7730eaf1eb395b3aad714a4">_GetGraphicsNode</a> () const </td></tr>
<tr class="memdesc:a1123ace3f7730eaf1eb395b3aad714a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal graphics node this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object uses for it's graphics transform.  <a href="#a1123ace3f7730eaf1eb395b3aad714a4">More...</a><br/></td></tr>
<tr class="separator:a1123ace3f7730eaf1eb395b3aad714a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac01aba8d4eff2df4e68bb15e5b086660"><td class="memItemLeft" align="right" valign="top">virtual Ogre::Entity *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ac01aba8d4eff2df4e68bb15e5b086660">_GetGraphicsObject</a> () const </td></tr>
<tr class="memdesc:ac01aba8d4eff2df4e68bb15e5b086660"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal graphics object this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object is based on.  <a href="#ac01aba8d4eff2df4e68bb15e5b086660">More...</a><br/></td></tr>
<tr class="separator:ac01aba8d4eff2df4e68bb15e5b086660"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a113ffb330d2ab49d866dfaa836de555f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a113ffb330d2ab49d866dfaa836de555f">_NotifyCollisionState</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *Col, const <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml#a65c483a4ea1e7faf02539e7e0c18af7f">Physics::Collision::CollisionState</a> &amp;State)</td></tr>
<tr class="memdesc:a113ffb330d2ab49d866dfaa836de555f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object of a collision that is occuring with it.  <a href="#a113ffb330d2ab49d866dfaa836de555f">More...</a><br/></td></tr>
<tr class="separator:a113ffb330d2ab49d866dfaa836de555f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af54c2dd470b534a51f12baae51631359"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#af54c2dd470b534a51f12baae51631359">_Update</a> ()=0</td></tr>
<tr class="memdesc:af54c2dd470b534a51f12baae51631359"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility function for altering or checking the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object every frame.  <a href="#af54c2dd470b534a51f12baae51631359">More...</a><br/></td></tr>
<tr class="separator:af54c2dd470b534a51f12baae51631359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73f51f4025bfbb1f86075de45d33d10a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a73f51f4025bfbb1f86075de45d33d10a"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a73f51f4025bfbb1f86075de45d33d10a">AddToWorld</a> ()=0</td></tr>
<tr class="memdesc:a73f51f4025bfbb1f86075de45d33d10a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object to the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a>. <br/></td></tr>
<tr class="separator:a73f51f4025bfbb1f86075de45d33d10a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ce5266a3f5a31a3528f6fdba043aa0e"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml">WorldObjectGraphicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a7ce5266a3f5a31a3528f6fdba043aa0e">GetGraphicsSettings</a> () const </td></tr>
<tr class="memdesc:a7ce5266a3f5a31a3528f6fdba043aa0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the graphics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object.  <a href="#a7ce5266a3f5a31a3528f6fdba043aa0e">More...</a><br/></td></tr>
<tr class="separator:a7ce5266a3f5a31a3528f6fdba043aa0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66d040856234ceacfbba2532047ee9cb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a66d040856234ceacfbba2532047ee9cb">GetLocation</a> () const </td></tr>
<tr class="memdesc:a66d040856234ceacfbba2532047ee9cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves the location of the object.  <a href="#a66d040856234ceacfbba2532047ee9cb">More...</a><br/></td></tr>
<tr class="separator:a66d040856234ceacfbba2532047ee9cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace3603d68df4db612c3233df0b0af512"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ace3603d68df4db612c3233df0b0af512">GetName</a> () const </td></tr>
<tr class="memdesc:ace3603d68df4db612c3233df0b0af512"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object.  <a href="#ace3603d68df4db612c3233df0b0af512">More...</a><br/></td></tr>
<tr class="separator:ace3603d68df4db612c3233df0b0af512"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad845988a6ff31d0e7cea45d6a45bd6c1"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">WorldObjectPhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ad845988a6ff31d0e7cea45d6a45bd6c1">GetPhysicsSettings</a> () const </td></tr>
<tr class="memdesc:ad845988a6ff31d0e7cea45d6a45bd6c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the physics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object.  <a href="#ad845988a6ff31d0e7cea45d6a45bd6c1">More...</a><br/></td></tr>
<tr class="separator:ad845988a6ff31d0e7cea45d6a45bd6c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfb7a99466bc0b5b5fb914983799b2b6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#acfb7a99466bc0b5b5fb914983799b2b6">GetScaling</a> () const </td></tr>
<tr class="memdesc:acfb7a99466bc0b5b5fb914983799b2b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object.  <a href="#acfb7a99466bc0b5b5fb914983799b2b6">More...</a><br/></td></tr>
<tr class="separator:acfb7a99466bc0b5b5fb914983799b2b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa860c068e93d09175f9cc187ced17e6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aaa860c068e93d09175f9cc187ced17e6">GetType</a> () const =0</td></tr>
<tr class="memdesc:aaa860c068e93d09175f9cc187ced17e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object instance.  <a href="#aaa860c068e93d09175f9cc187ced17e6">More...</a><br/></td></tr>
<tr class="separator:aaa860c068e93d09175f9cc187ced17e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46afb737d77206d8bc929afe8904bc31"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1World.xhtml">World</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a46afb737d77206d8bc929afe8904bc31">GetWorld</a> () const </td></tr>
<tr class="memdesc:a46afb737d77206d8bc929afe8904bc31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the world this object currently belongs to.  <a href="#a46afb737d77206d8bc929afe8904bc31">More...</a><br/></td></tr>
<tr class="separator:a46afb737d77206d8bc929afe8904bc31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e773e73a7a190ad56d2afedeeeb8e87"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a2e773e73a7a190ad56d2afedeeeb8e87">IsInWorld</a> () const </td></tr>
<tr class="memdesc:a2e773e73a7a190ad56d2afedeeeb8e87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this object is currently in the world.  <a href="#a2e773e73a7a190ad56d2afedeeeb8e87">More...</a><br/></td></tr>
<tr class="separator:a2e773e73a7a190ad56d2afedeeeb8e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5ebc61c589f90c990a9b4df29fd35f6"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ab5ebc61c589f90c990a9b4df29fd35f6">IsStaticOrKinematic</a> () const </td></tr>
<tr class="memdesc:ab5ebc61c589f90c990a9b4df29fd35f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object is static or kinematic.  <a href="#ab5ebc61c589f90c990a9b4df29fd35f6">More...</a><br/></td></tr>
<tr class="separator:ab5ebc61c589f90c990a9b4df29fd35f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67e3c05d50cc1ff631beecd37d87255a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a67e3c05d50cc1ff631beecd37d87255a"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a67e3c05d50cc1ff631beecd37d87255a">RemoveFromWorld</a> ()=0</td></tr>
<tr class="memdesc:a67e3c05d50cc1ff631beecd37d87255a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object from the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a>. <br/></td></tr>
<tr class="separator:a67e3c05d50cc1ff631beecd37d87255a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a453c9b26ba93d0640d95013944173fc4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a453c9b26ba93d0640d95013944173fc4">SetLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;x, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;z)</td></tr>
<tr class="memdesc:a453c9b26ba93d0640d95013944173fc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object.  <a href="#a453c9b26ba93d0640d95013944173fc4">More...</a><br/></td></tr>
<tr class="separator:a453c9b26ba93d0640d95013944173fc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a461ab18e5d01e09b15f14aa3fc8964c8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a461ab18e5d01e09b15f14aa3fc8964c8">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a461ab18e5d01e09b15f14aa3fc8964c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object.  <a href="#a461ab18e5d01e09b15f14aa3fc8964c8">More...</a><br/></td></tr>
<tr class="separator:a461ab18e5d01e09b15f14aa3fc8964c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b936fe377c4e5b6361b23c74e3a2d5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a13b936fe377c4e5b6361b23c74e3a2d5">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)</td></tr>
<tr class="memdesc:a13b936fe377c4e5b6361b23c74e3a2d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scale of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object.  <a href="#a13b936fe377c4e5b6361b23c74e3a2d5">More...</a><br/></td></tr>
<tr class="separator:a13b936fe377c4e5b6361b23c74e3a2d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:af092fc48b1bf9721435470acc069ddf0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#af092fc48b1bf9721435470acc069ddf0">SerializableName</a> ()</td></tr>
<tr class="memdesc:af092fc48b1bf9721435470acc069ddf0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#af092fc48b1bf9721435470acc069ddf0">More...</a><br/></td></tr>
<tr class="separator:af092fc48b1bf9721435470acc069ddf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a0e073941d71cbbd083a257d740b643d6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0e073941d71cbbd083a257d740b643d6"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0e073941d71cbbd083a257d740b643d6">AttachToGraphics</a> ()</td></tr>
<tr class="memdesc:a0e073941d71cbbd083a257d740b643d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the terrain visible. <br/></td></tr>
<tr class="separator:a0e073941d71cbbd083a257d740b643d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93d52c90fdd9a3ada46b2539012f1bf5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a93d52c90fdd9a3ada46b2539012f1bf5"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a93d52c90fdd9a3ada46b2539012f1bf5">DetachFromGraphics</a> ()</td></tr>
<tr class="memdesc:a93d52c90fdd9a3ada46b2539012f1bf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes the terrain invisible. <br/></td></tr>
<tr class="separator:a93d52c90fdd9a3ada46b2539012f1bf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfdac35dc7396b6bc073e4e4c0af2f70"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#adfdac35dc7396b6bc073e4e4c0af2f70">GraphicsSettingsSerializableName</a> () const =0</td></tr>
<tr class="memdesc:adfdac35dc7396b6bc073e4e4c0af2f70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized graphics settings.  <a href="#adfdac35dc7396b6bc073e4e4c0af2f70">More...</a><br/></td></tr>
<tr class="separator:adfdac35dc7396b6bc073e4e4c0af2f70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefb4d8e679e03f55428404eb5cbe65d5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#aefb4d8e679e03f55428404eb5cbe65d5">PhysicsSettingsSerializableName</a> () const =0</td></tr>
<tr class="memdesc:aefb4d8e679e03f55428404eb5cbe65d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized s settings.  <a href="#aefb4d8e679e03f55428404eb5cbe65d5">More...</a><br/></td></tr>
<tr class="separator:aefb4d8e679e03f55428404eb5cbe65d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9c92eb799e513ef81d57130727c54e1"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ae9c92eb799e513ef81d57130727c54e1">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode)</td></tr>
<tr class="memdesc:ae9c92eb799e513ef81d57130727c54e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it.  <a href="#ae9c92eb799e513ef81d57130727c54e1">More...</a><br/></td></tr>
<tr class="separator:ae9c92eb799e513ef81d57130727c54e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501b1fdacf9a8b82590edd3fa7293560"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a501b1fdacf9a8b82590edd3fa7293560">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentRoot) const </td></tr>
<tr class="memdesc:a501b1fdacf9a8b82590edd3fa7293560"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#a501b1fdacf9a8b82590edd3fa7293560">More...</a><br/></td></tr>
<tr class="separator:a501b1fdacf9a8b82590edd3fa7293560"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e7eeb271f355e1c35262f41bb1e63bc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a4e7eeb271f355e1c35262f41bb1e63bc">ThrowSerialError</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Fail) const </td></tr>
<tr class="memdesc:a4e7eeb271f355e1c35262f41bb1e63bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">A Helper function that assembles strings and throws an exception.  <a href="#a4e7eeb271f355e1c35262f41bb1e63bc">More...</a><br/></td></tr>
<tr class="separator:a4e7eeb271f355e1c35262f41bb1e63bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:acbfef535027ce0b2b5397429f4bbca19"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acbfef535027ce0b2b5397429f4bbca19"></a>
std::set&lt; <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#acbfef535027ce0b2b5397429f4bbca19">CurrentCollisions</a></td></tr>
<tr class="memdesc:acbfef535027ce0b2b5397429f4bbca19"><td class="mdescLeft">&#160;</td><td class="mdescRight">This member stores all existing collision events referencing this actor. <br/></td></tr>
<tr class="separator:acbfef535027ce0b2b5397429f4bbca19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9682da6de09a649bf5c7cef150124f5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af9682da6de09a649bf5c7cef150124f5"></a>
Ogre::SceneNode *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#af9682da6de09a649bf5c7cef150124f5">GraphicsNode</a></td></tr>
<tr class="memdesc:af9682da6de09a649bf5c7cef150124f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the Ogre::SceneNode using this. <br/></td></tr>
<tr class="separator:af9682da6de09a649bf5c7cef150124f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a050053b525931b996a4b1759e7087ecf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a050053b525931b996a4b1759e7087ecf"></a>
Ogre::Entity *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf">GraphicsObject</a></td></tr>
<tr class="memdesc:a050053b525931b996a4b1759e7087ecf"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the Ogre::Entity using this. <br/></td></tr>
<tr class="separator:a050053b525931b996a4b1759e7087ecf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8bd91e343ead1b486ae8348e1580369"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac8bd91e343ead1b486ae8348e1580369"></a>
<a class="el" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml">WorldObjectGraphicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#ac8bd91e343ead1b486ae8348e1580369">GraphicsSettings</a></td></tr>
<tr class="memdesc:ac8bd91e343ead1b486ae8348e1580369"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates graphics specific configuration for this actor. <br/></td></tr>
<tr class="separator:ac8bd91e343ead1b486ae8348e1580369"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ab67d5cc00b2d75aad716f2284a9721"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3ab67d5cc00b2d75aad716f2284a9721"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a3ab67d5cc00b2d75aad716f2284a9721">Name</a></td></tr>
<tr class="memdesc:a3ab67d5cc00b2d75aad716f2284a9721"><td class="mdescLeft">&#160;</td><td class="mdescRight">The name of the terrain. <br/></td></tr>
<tr class="separator:a3ab67d5cc00b2d75aad716f2284a9721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67172d52caf38a4c99309ce20de6779e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1World.xhtml">World</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a67172d52caf38a4c99309ce20de6779e">ParentWorld</a></td></tr>
<tr class="memdesc:a67172d52caf38a4c99309ce20de6779e"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is the world this object belongs to and will be inserted in/removed from.  <a href="#a67172d52caf38a4c99309ce20de6779e">More...</a><br/></td></tr>
<tr class="separator:a67172d52caf38a4c99309ce20de6779e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2403ba494a9835daddfbc68b118991bc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2403ba494a9835daddfbc68b118991bc"></a>
btCollisionObject *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a2403ba494a9835daddfbc68b118991bc">PhysicsObject</a></td></tr>
<tr class="memdesc:a2403ba494a9835daddfbc68b118991bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the btCollisionObject using this. <br/></td></tr>
<tr class="separator:a2403ba494a9835daddfbc68b118991bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e9e31cc264f05d3fb2591cbf5883384"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0e9e31cc264f05d3fb2591cbf5883384"></a>
<a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">WorldObjectPhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a0e9e31cc264f05d3fb2591cbf5883384">PhysicsSettings</a></td></tr>
<tr class="memdesc:a0e9e31cc264f05d3fb2591cbf5883384"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates physics specific configuration for this actor. <br/></td></tr>
<tr class="separator:a0e9e31cc264f05d3fb2591cbf5883384"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82cf249f457edb1e3786c1d716961e0e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a82cf249f457edb1e3786c1d716961e0e"></a>
btCollisionShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObject.xhtml#a82cf249f457edb1e3786c1d716961e0e">PhysicsShape</a></td></tr>
<tr class="memdesc:a82cf249f457edb1e3786c1d716961e0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class encapsulates the functionality of the btCollisionShape using this. <br/></td></tr>
<tr class="separator:a82cf249f457edb1e3786c1d716961e0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a1cacd07efb11226da49a7c80569b18e8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1cacd07efb11226da49a7c80569b18e8"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>WorldNode</b></td></tr>
<tr class="separator:a1cacd07efb11226da49a7c80569b18e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad45d2e498e36f986473547343e4b149e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad45d2e498e36f986473547343e4b149e"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>WorldObjectGraphicsSettings</b></td></tr>
<tr class="separator:ad45d2e498e36f986473547343e4b149e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e0ab16f1e7b0d4d1c848b974f5d4662"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e0ab16f1e7b0d4d1c848b974f5d4662"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>WorldObjectPhysicsSettings</b></td></tr>
<tr class="separator:a5e0ab16f1e7b0d4d1c848b974f5d4662"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is the base class from which classes that are insertable into the physical world. </p>
<p>In short a <a class="el" href="classMezzanine_1_1WorldObject.xhtml" title="This is the base class from which classes that are insertable into the physical world.">WorldObject</a> is an object that has a physical representation and may also have a graphical representation and can be added and removed from the world. In almost all occasions these objects can also collide with other objects. </p>

<p>Definition at line <a class="el" href="worldobject_8h_source.xhtml#l00088">88</a> of file <a class="el" href="worldobject_8h_source.xhtml">worldobject.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a4564b948a585aac1764ee13f2a61c110"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">btCollisionObject * Mezzanine::WorldObject::_GetBasePhysicsObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal physics object this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object is based on. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the internal Bullet object. </dd></dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00178">178</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1123ace3f7730eaf1eb395b3aad714a4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Ogre::SceneNode * Mezzanine::WorldObject::_GetGraphicsNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal graphics node this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object uses for it's graphics transform. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the internal graphics node. </dd></dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00188">188</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac01aba8d4eff2df4e68bb15e5b086660"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Ogre::Entity * Mezzanine::WorldObject::_GetGraphicsObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the internal graphics object this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object is based on. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the internal graphics object. </dd></dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a113ffb330d2ab49d866dfaa836de555f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldObject::_NotifyCollisionState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *&#160;</td>
          <td class="paramname"><em>Col</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml#a65c483a4ea1e7faf02539e7e0c18af7f">Physics::Collision::CollisionState</a> &amp;&#160;</td>
          <td class="paramname"><em>State</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Notifies this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object of a collision that is occuring with it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Col</td><td>A pointer to the collision pertaining to this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </td></tr>
    <tr><td class="paramname">State</td><td>The state of the collision pertaining to this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a0290af701cc57b7bf2d8085e04841faf">Mezzanine::ActorRigid</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00165">165</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af54c2dd470b534a51f12baae51631359"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::WorldObject::_Update </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Utility function for altering or checking the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object every frame. </p>

<p>Implemented in <a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a1f255e52f48a9fec2cfe2f91664fb350">Mezzanine::ActorSoft</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a8f5a36a6981f1249dbabab318531afd0">Mezzanine::ActorBase</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#aa852e811bf900d209be137901f7e536c">Mezzanine::AreaEffect</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a714d836a18ddb4de65bec5afdfdbb81c">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="a7ce5266a3f5a31a3528f6fdba043aa0e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml">WorldObjectGraphicsSettings</a> * Mezzanine::WorldObject::GetGraphicsSettings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the graphics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the graphics settings class in use by this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </dd></dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00152">152</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a66d040856234ceacfbba2532047ee9cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::WorldObject::GetLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Retrieves the location of the object. </p>
<p>This function will retrieve the location of the object within the world. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Mezzanine::Vector3</a> containing the location. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#aefbebff39e4d21859f5fddb434f6165c">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorSoft.xhtml#a0192b3889eaf2786352d75ca03fcae4a">Mezzanine::ActorSoft</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a37d04f8e6d6e8451348ee60fd083968b">Mezzanine::AreaEffect</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ace3603d68df4db612c3233df0b0af512"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp; Mezzanine::WorldObject::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name of this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#acb52c6e1718acb9f17e34bf4b6203304">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1ActorSoft.xhtml#aa37860ec9b4d12111c74df7bd14fc58d">Mezzanine::ActorSoft</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ae0205e57786da97300357d7ac1afd180">Mezzanine::AreaEffect</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00132">132</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad845988a6ff31d0e7cea45d6a45bd6c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">WorldObjectPhysicsSettings</a> * Mezzanine::WorldObject::GetPhysicsSettings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the physics settings class associated with this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the physics settings class in use by this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a6ed901638c88e4b9e09605152e11d56e">Mezzanine::ActorRigid</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00157">157</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acfb7a99466bc0b5b5fb914983799b2b6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::WorldObject::GetScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the scaling being applied on all axes of this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a309577416e71ab3b290c575e9877ca4b">Mezzanine::NonStaticWorldObject</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#adc4af3aa8a43d2e08d716990153fb89d">Mezzanine::AreaEffect</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00123">123</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaa860c068e93d09175f9cc187ced17e6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a> Mezzanine::WorldObject::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object instance. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the type of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object instance </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1FieldOfForce.xhtml#ad6247ff9543681daa74a9297c1c7653e">Mezzanine::FieldOfForce</a>, <a class="el" href="classMezzanine_1_1GravityWell.xhtml#a7890d007afb7021a811d711e3b2ed950">Mezzanine::GravityWell</a>, <a class="el" href="classMezzanine_1_1GravityField.xhtml#a9b48f173312a02cd98ac19a8c444c10e">Mezzanine::GravityField</a>, <a class="el" href="classMezzanine_1_1ActorSoft.xhtml#adddd9e4dafbe78aa9fb55ab92a42dc42">Mezzanine::ActorSoft</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a2f3df5433f02057d7a9deeb5e6666287">Mezzanine::AreaEffect</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a83f7356d743f1b59ea58aac6d7570901">Mezzanine::ActorBase</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#afc18444d5f13990a3458455c217f58cd">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="a46afb737d77206d8bc929afe8904bc31"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1World.xhtml">World</a> * Mezzanine::WorldObject::GetWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the world this object currently belongs to. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the world that owns this object. </dd></dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00147">147</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adfdac35dc7396b6bc073e4e4c0af2f70"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::WorldObject::GraphicsSettingsSerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized graphics settings. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing name of the serialized graphics settings. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a641a2f221c0a3fba0f0ffc646d634b31">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ae93ea4e6554abb1afc919322c6c7e352">Mezzanine::AreaEffect</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a636a0dbf78907d565d4cabd994442637">Mezzanine::ActorBase</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#a935069f346c516e07f3aa7a89388dea0">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="a2e773e73a7a190ad56d2afedeeeb8e87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::WorldObject::IsInWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not this object is currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a bool indicating if this object has been added to the world. </dd></dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00142">142</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab5ebc61c589f90c990a9b4df29fd35f6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::WorldObject::IsStaticOrKinematic </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object is static or kinematic. </p>
<p>Checks of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object is static or kinematic, returns true if it is either. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object is static or kinematic. </dd></dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00137">137</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aefb4d8e679e03f55428404eb5cbe65d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::WorldObject::PhysicsSettingsSerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag that implementations of this class will use to save the serialized s settings. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing name of the serialized graphics settings. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a1e1decda1e208587eeafa90e3f185c01">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#adb8b3c92f78a8b070be9fa22f87e9f9d">Mezzanine::AreaEffect</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a7a18ac81a996e2d68057223ebbc7959c">Mezzanine::ActorBase</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#ac91177e6d50052f97997a4dfef975a59">Mezzanine::ActorRigid</a>.</p>

</div>
</div>
<a class="anchor" id="ae9c92eb799e513ef81d57130727c54e1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldObject::ProtoDeSerialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OneNode</td><td>and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> containing the data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>A precondition of using this is that all of the actors intended for use must already be Deserialized. </dd></dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a22a3e08b2286172420df1a9a212197a9">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a435d1779e751b8f2b218bd89649e5686">Mezzanine::AreaEffect</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#af806d86e70e7fc8d456ac6b9f7df6ef4">Mezzanine::ActorBase</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#abec93275a1d839ade34a142b090aea31">Mezzanine::ActorRigid</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00233">233</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a501b1fdacf9a8b82590edd3fa7293560"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldObject::ProtoSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>CurrentRoot</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">CurrentRoot</td><td>The point in the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> hierarchy that all this vectorw should be appended to. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#abf2b7d4eeca577b001556cb105414e06">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a8d1999cb7d634d83c6345cb29ad0796b">Mezzanine::AreaEffect</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#aeae57839dea651eff0517ddad42b7922">Mezzanine::ActorBase</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#ade9a85694db00bca2167fa95350086cc">Mezzanine::ActorRigid</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00199">199</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af092fc48b1bf9721435470acc069ddf0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::WorldObject::SerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing "Point2PointConstraint" </dd></dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00282">282</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a453c9b26ba93d0640d95013944173fc4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldObject::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </p>
<p>Calling this function prior to adding it to the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> will have no effect. <br/>
 In most situations you won't want to use this function, and instead produce movement through physics functions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Location on the X vector. </td></tr>
    <tr><td class="paramname">y</td><td>Location on the Y vector. </td></tr>
    <tr><td class="paramname">z</td><td>Location on the Z vector. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a461ab18e5d01e09b15f14aa3fc8964c8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldObject::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Manually sets the location of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </p>
<p>Calling this function prior to adding it to the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> will have no effect. <br/>
 In most situations you won't want to use this function, and instead produce movement through physics functions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>The <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the location. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#ab80106c2fec881169184eff5165e73b6">Mezzanine::NonStaticWorldObject</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#a4dd22757bc627242de169e31a1717139">Mezzanine::AreaEffect</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00102">102</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a13b936fe377c4e5b6361b23c74e3a2d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldObject::SetScaling </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Scale</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the scale of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </p>
<p>This function will alter the scaling/size of the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object with the given vector3. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Scale</td><td>The vector3 by which to apply the scale. Will scale each axis' accordingly. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a03fec7fb4abcd6747695d139d00c7662">Mezzanine::NonStaticWorldObject</a>, and <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#ae0448d98c3689ae407734bbcd85a08cb">Mezzanine::AreaEffect</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00117">117</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4e7eeb271f355e1c35262f41bb1e63bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldObject::ThrowSerialError </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Fail</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A Helper function that assembles strings and throws an exception. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Fail</td><td>The item that failed. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classMezzanine_1_1NonStaticWorldObject.xhtml#a1e1300809a35fe8263928ce890e1f91a">Mezzanine::NonStaticWorldObject</a>, <a class="el" href="classMezzanine_1_1AreaEffect.xhtml#acb6f2cb173aa78725d82d5d33af5b866">Mezzanine::AreaEffect</a>, <a class="el" href="classMezzanine_1_1ActorBase.xhtml#a24d196b9fc55048fb183a7920b5bbd3e">Mezzanine::ActorBase</a>, and <a class="el" href="classMezzanine_1_1ActorRigid.xhtml#ad640944179df98fbaf5ecf5e2ed5ba2c">Mezzanine::ActorRigid</a>.</p>

<p>Definition at line <a class="el" href="worldobject_8cpp_source.xhtml#l00196">196</a> of file <a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a67172d52caf38a4c99309ce20de6779e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1World.xhtml">World</a>* Mezzanine::WorldObject::ParentWorld</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is the world this object belongs to and will be inserted in/removed from. </p>

<p>Definition at line <a class="el" href="worldobject_8h_source.xhtml#l00102">102</a> of file <a class="el" href="worldobject_8h_source.xhtml">worldobject.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="worldobject_8h_source.xhtml">worldobject.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="worldobject_8cpp_source.xhtml">worldobject.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 14 2013 00:19:10 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
