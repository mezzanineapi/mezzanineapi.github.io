<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/actorsoft.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;16,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">actorsoft.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _actorsoft_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _actorsoft_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &lt;Ogre.h&gt;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">//#include &quot;btBulletDynamicsCommon.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;BulletSoftBody/btSoftRigidDynamicsWorld.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;BulletSoftBody/btSoftBodyHelpers.h&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;BulletSoftBody/btSoftBodyInternals.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">//#include &quot;BulletCollision/CollisionShapes/btShapeHull.h&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">//#include &quot;BulletCollision/Gimpact/btGImpactShape.h&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;Internal/meshtools.h.cpp&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &quot;entresol.h&quot;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &quot;Physics/physicsmanager.h&quot;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#include &quot;scenemanager.h&quot;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#include &quot;actorsoft.h&quot;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{<span class="comment"></span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    ///////////////////////////////////</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"></span>    <span class="comment">// ActorSoft class functions</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a3ab7c4cb45c0308a1b398069095d81b2">   62</a></span>&#160;    <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a3ab7c4cb45c0308a1b398069095d81b2" title="Constructor.">ActorSoft::ActorSoft</a> (<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> mass, <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> name, <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> file, <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> group)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        : <a class="code" href="classMezzanine_1_1ActorBase.xhtml" title="This is the base class from which all the actors inherit.">ActorBase</a> ()</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab0ee1ceadedb3d92295cce649749cb7a" title="Creates a soft object for the actor.">CreateSoftObject</a>(mass);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#ac8bd91e343ead1b486ae8348e1580369" title="This class encapsulates graphics specific configuration for this actor.">GraphicsSettings</a> = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1WorldObjectGraphicsSettings.xhtml" title="This is a helper class for configuring graphics settings of a World Object.">WorldObjectGraphicsSettings</a>(<span class="keyword">this</span>,<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab7ea9b20786fbd7505f836135c890434" title="This class encapsulates physics specific configuration for this actor.">PhysicsSettings</a> = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1ActorSoftPhysicsSettings.xhtml" title="This is a helper class for configuring physics settings of an ActorSoft.">ActorSoftPhysicsSettings</a>(<span class="keyword">this</span>,<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab7ea9b20786fbd7505f836135c890434" title="This class encapsulates physics specific configuration for this actor.">PhysicsSettings</a> = <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab7ea9b20786fbd7505f836135c890434" title="This class encapsulates physics specific configuration for this actor.">PhysicsSettings</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4701cb3e90164c828247a43ff098f69b">   71</a></span>&#160;    <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4701cb3e90164c828247a43ff098f69b" title="Destructor.">ActorSoft::~ActorSoft</a> ()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab0ee1ceadedb3d92295cce649749cb7a">   76</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab0ee1ceadedb3d92295cce649749cb7a" title="Creates a soft object for the actor.">ActorSoft::CreateSoftObject</a> (<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> mass)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="comment">//this-&gt;GraphicsObject-&gt;getMesh()-&gt;getSubMesh(0)-&gt;useSharedVertices = false;</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        Internal::MeshInfo CurMesh;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        Internal::MeshTools::GetMeshVerticies(<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>,CurMesh);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        Internal::MeshTools::GetMeshIndicies(<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>,CurMesh);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        Internal::MeshTools::GetMeshNormals(<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>,CurMesh);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        Internal::MeshTools::GetMeshTextures(<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>,CurMesh);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        Internal::MeshTools::GetOtherMeshInfo(<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>,CurMesh);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a> = btSoftBodyHelpers::CreateFromTriMesh(<a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Entresol::GetSingletonPtr</a>()-&gt;GetPhysicsManager()-&gt;_GetPhysicsWorldPointer()-&gt;getWorldInfo(), &amp;CurMesh.Verticies[0].x, &amp;CurMesh.Indicies[0], CurMesh.ICount/3);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <a class="code" href="classMezzanine_1_1WorldObject.xhtml#a2403ba494a9835daddfbc68b118991bc" title="This class encapsulates the functionality of the btCollisionObject using this.">PhysicsObject</a>=<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <a class="code" href="classMezzanine_1_1WorldObject.xhtml#a2403ba494a9835daddfbc68b118991bc" title="This class encapsulates the functionality of the btCollisionObject using this.">PhysicsObject</a>-&gt;setUserPointer( (<a class="code" href="classMezzanine_1_1WorldObject.xhtml" title="This is the base class from which classes that are insertable into the physical world.">WorldObject</a>*)<span class="keyword">this</span> );</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <a class="code" href="classMezzanine_1_1WorldObject.xhtml#a82cf249f457edb1e3786c1d716961e0e" title="This class encapsulates the functionality of the btCollisionShape using this.">PhysicsShape</a> = <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;getCollisionShape();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;setTotalMass(mass, <span class="keyword">true</span>);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_cfg.collisions = <span class="comment">/*btSoftBody::fCollision::CL_SS +*/</span> btSoftBody::fCollision::CL_RS;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_cfg.piterations = 5;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;randomizeConstraints();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;generateBendingConstraints(2);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;generateClusters(20);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a52ef123f82ac082991da5a517f77adf8" title="Creates and configures a manual object for rendering.">CreateManualMesh</a>(CurMesh);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a> = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a5934c98e4d29964346597baf2c4d01da" title="This gets the SceneManager from the manager list.">GetSceneManager</a>()-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3156d3ec1b514e295368bfa4b94d4adc" title="Gets the internal Ogre Scene Manager pointer.">GetGraphicsWorldPointer</a>()-&gt;createEntity(CurMesh.Name, CurMesh.Name + <span class="stringliteral">&quot;M&quot;</span>, CurMesh.Group);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        Ogre::Any OgreRef( (<a class="code" href="classMezzanine_1_1WorldObject.xhtml" title="This is the base class from which classes that are insertable into the physical world.">WorldObject</a>*)<span class="keyword">this</span> );</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>-&gt;setUserAny(OgreRef);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_clusters[0]-&gt;m_collide = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a52ef123f82ac082991da5a517f77adf8">  106</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a52ef123f82ac082991da5a517f77adf8" title="Creates and configures a manual object for rendering.">ActorSoft::CreateManualMesh</a> (Internal::MeshInfo &amp;TheMesh)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        Ogre::ManualObject* ManualEntity = <span class="keyword">new</span> Ogre::ManualObject(TheMesh.Name);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        ManualEntity-&gt;setDynamic(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        ManualEntity-&gt;estimateVertexCount(TheMesh.VCount);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        ManualEntity-&gt;estimateIndexCount(TheMesh.ICount);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        ManualEntity-&gt;begin(TheMesh.Material, TheMesh.RendOp, TheMesh.Group);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> x=0 ; x &lt; TheMesh.VCount ; x++ )</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            ManualEntity-&gt;position(TheMesh.Verticies[x]);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            ManualEntity-&gt;normal(TheMesh.Normals[x]);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            ManualEntity-&gt;textureCoord(TheMesh.Textures[x]);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> y=0 ; y &lt; TheMesh.ICount ; y++ )</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            ManualEntity-&gt;index(TheMesh.Indicies[y]);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        ManualEntity-&gt;end();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        ManualEntity-&gt;convertToMesh(TheMesh.Name + <span class="stringliteral">&quot;M&quot;</span>, TheMesh.Group);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keyword">delete</span> ManualEntity;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#af2e618dd176d910834f146c62efe8f19">  129</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#af2e618dd176d910834f146c62efe8f19" title="Makes the actor visable.">ActorSoft::AttachToGraphics</a> ()</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="comment">/*Vector3 tempv;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment">        Quaternion tempq;</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">        btTransform temp = this-&gt;PhysicsSoftBody-&gt;m_clusters[0]-&gt;m_framexform;</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">        tempv.ExtractBulletVector3(temp.getOrigin());</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">        tempq.ExtractBulletQuaternion(temp.getRotation());</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">        this-&gt;GraphicsNode-&gt;setPosition(tempv.GetOgreVector3());</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">        this-&gt;GraphicsNode-&gt;setOrientation(tempq.GetOgreQuaternion());</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">        this-&gt;GraphicsNode-&gt;attachObject(this-&gt;GraphicsObject);*/</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <a class="code" href="classMezzanine_1_1WorldObject.xhtml#a0e073941d71cbbd083a257d740b643d6" title="Makes the terrain visible.">ActorBase::AttachToGraphics</a>();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a3ec90b87480ba28553656eb10552f6d6">  142</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a3ec90b87480ba28553656eb10552f6d6" title="Makes the actor invisable.">ActorSoft::DetachFromGraphics</a> ()</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#af9682da6de09a649bf5c7cef150124f5" title="This class encapsulates the functionality of the Ogre::SceneNode using this.">GraphicsNode</a>-&gt;detachObject(this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a65115824bacb62ad58a68cf3d7fc8840">  147</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a65115824bacb62ad58a68cf3d7fc8840" title="Sets the location of the physics body.">ActorSoft::SetBulletLocation</a> (<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Location)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_clusters[0]-&gt;m_framexform.setOrigin(Location.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="comment">//ActorBase::SetBulletLocation(Location);</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a7d6f49acc1bf286fd46fb33a8c2798e4">  153</a></span>&#160;    <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a7d6f49acc1bf286fd46fb33a8c2798e4" title="Retrieves the location of the physics body.">ActorSoft::GetBulletLocation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> temp(this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_clusters[0]-&gt;m_framexform.getOrigin());</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">return</span> temp;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="comment">//return ActorBase::GetBulletLocation();</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#abe282473ccb1f02c273be6efd620d83c">  160</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#abe282473ccb1f02c273be6efd620d83c" title="Sets the orientation of the physics body.">ActorSoft::SetBulletOrientation</a> (<a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> Rotation)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_clusters[0]-&gt;m_framexform.setRotation(Rotation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>(<span class="keyword">true</span>));</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">//ActorBase::SetBulletOrientation(Rotation);</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">    ///////////////////////////////////////</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"></span>    <span class="comment">// Public Functions</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aa37860ec9b4d12111c74df7bd14fc58d">  169</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aa37860ec9b4d12111c74df7bd14fc58d" title="Retrieves the name of the object.">ActorSoft::GetName</a> ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a050053b525931b996a4b1759e7087ecf" title="This class encapsulates the functionality of the Ogre::Entity using this.">GraphicsObject</a>-&gt;getName();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a9d2960eee35ecfefe76fce2dde3ea18e">  174</a></span>&#160;    <a class="code" href="classMezzanine_1_1ActorSoftPhysicsSettings.xhtml" title="This is a helper class for configuring physics settings of an ActorSoft.">ActorSoftPhysicsSettings</a>* <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a9d2960eee35ecfefe76fce2dde3ea18e" title="Gets the physics settings class associated with this actor.">ActorSoft::GetPhysicsSettings</a>()</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab7ea9b20786fbd7505f836135c890434" title="This class encapsulates physics specific configuration for this actor.">PhysicsSettings</a>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab76bcb0d227374ef5d69878783c7f89b">  179</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab76bcb0d227374ef5d69878783c7f89b" title="Sets the scale of the actor.">ActorSoft::SetActorScaling</a>(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> scaling)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#af9682da6de09a649bf5c7cef150124f5" title="This class encapsulates the functionality of the Ogre::SceneNode using this.">GraphicsNode</a>-&gt;setScale(scaling.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>());</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#a82cf249f457edb1e3786c1d716961e0e" title="This class encapsulates the functionality of the btCollisionShape using this.">PhysicsShape</a>-&gt;setLocalScaling(scaling.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a45178fcaf06a81e75d7d81b8fc90fc9e">  185</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a45178fcaf06a81e75d7d81b8fc90fc9e" title="Sets the starting location of the actor.">ActorSoft::SetInitLocation</a>(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Location)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a65115824bacb62ad58a68cf3d7fc8840" title="Sets the location of the physics body.">SetBulletLocation</a>(Location);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="comment">//ActorBase::SetBulletLocation(Location);</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;translate(Location.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_initialWorldTransform.setOrigin(Location.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="comment">//this-&gt;GraphicsNode-&gt;setPosition(Location.GetOgreVector3());</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a8ee3cce8eb7578cdeb2af771f16ab240">  194</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a8ee3cce8eb7578cdeb2af771f16ab240" title="Sets the starting orientation of the actor.">ActorSoft::SetInitOrientation</a>(<a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> Orientation)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#abe282473ccb1f02c273be6efd620d83c" title="Sets the orientation of the physics body.">SetBulletOrientation</a>(Orientation);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_initialWorldTransform.setRotation(Orientation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>());</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aad9c559bae769ac44d437a0612934bc2">  200</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aad9c559bae769ac44d437a0612934bc2" title="Manually sets the location of the actor.">ActorSoft::SetLocation</a> (<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> x, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> y, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> z)</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    {</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> temp(x,y,z);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aad9c559bae769ac44d437a0612934bc2" title="Manually sets the location of the actor.">SetLocation</a>(temp);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a9c96f61e8a39fc6b35eb35c03b8e0e42">  206</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aad9c559bae769ac44d437a0612934bc2" title="Manually sets the location of the actor.">ActorSoft::SetLocation</a> (<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Place)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a65115824bacb62ad58a68cf3d7fc8840" title="Sets the location of the physics body.">SetBulletLocation</a>(Place);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="comment">//this-&gt;SetOgreLocation(Place);</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    }</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a0192b3889eaf2786352d75ca03fcae4a">  212</a></span>&#160;    <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a0192b3889eaf2786352d75ca03fcae4a" title="Retrieves the location of the object.">ActorSoft::GetLocation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a7d6f49acc1bf286fd46fb33a8c2798e4" title="Retrieves the location of the physics body.">GetBulletLocation</a>();</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div>
<div class="line"><a name="l00217"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aa203dd4d6bde54f4551673e2690f20b8">  217</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aa203dd4d6bde54f4551673e2690f20b8" title="Sets the orientation of the actor.">ActorSoft::SetOrientation</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> x, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> y, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> z, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> w)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> temp(x,y,z,w);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aa203dd4d6bde54f4551673e2690f20b8" title="Sets the orientation of the actor.">SetOrientation</a>(temp);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a3490444768316d69b5560d3500550a4f">  223</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#aa203dd4d6bde54f4551673e2690f20b8" title="Sets the orientation of the actor.">ActorSoft::SetOrientation</a>(<a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> Rotation)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#abe282473ccb1f02c273be6efd620d83c" title="Sets the orientation of the physics body.">SetBulletOrientation</a>(Rotation);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="comment">//this-&gt;SetOgreOrientation(Rotation);</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div>
<div class="line"><a name="l00229"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#adddd9e4dafbe78aa9fb55ab92a42dc42">  229</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718" title="Used by various classes to help identify what class an object is.">WorldAndSceneObjectType</a> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#adddd9e4dafbe78aa9fb55ab92a42dc42" title="Gets the type of the World Object instance. ">ActorSoft::GetType</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">return</span> Mezzanine::WSO_ActorSoft;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ad314e449aea1ac0b641816f68a861159">  234</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ad314e449aea1ac0b641816f68a861159" title="Adds the World Object to the World. ">ActorSoft::AddToWorld</a>()</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a855183e9fde6d575aaee94ba1d812b05" title="This gets the PhysicsManager from the manager list.">GetPhysicsManager</a>()-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aba6878139fdacad9535a9223fdb0e911" title="This returns a pointer to the bullet physics world. This is for internal use only.">_GetPhysicsWorldPointer</a>()-&gt;addSoftBody(this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>,<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab7ea9b20786fbd7505f836135c890434" title="This class encapsulates physics specific configuration for this actor.">PhysicsSettings</a>-&gt;<a class="code" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a7a3daebdb7d7a40116b1869c59441d2c" title="Gets the actors collision group.">GetCollisionGroup</a>(),<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab7ea9b20786fbd7505f836135c890434" title="This class encapsulates physics specific configuration for this actor.">PhysicsSettings</a>-&gt;<a class="code" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#ad1c74e07047aeebe5fa60504a03a20b9" title="Gets the actors collision mask.">GetCollisionMask</a>());</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#af2e618dd176d910834f146c62efe8f19" title="Makes the actor visable.">AttachToGraphics</a>();</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ac1c30677a8be15080ba7bbdbf7ce696e">  240</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ac1c30677a8be15080ba7bbdbf7ce696e" title="Removes the World Object from the World. ">ActorSoft::RemoveFromWorld</a>()</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a855183e9fde6d575aaee94ba1d812b05" title="This gets the PhysicsManager from the manager list.">GetPhysicsManager</a>()-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aba6878139fdacad9535a9223fdb0e911" title="This returns a pointer to the bullet physics world. This is for internal use only.">_GetPhysicsWorldPointer</a>()-&gt;removeSoftBody(this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a3ec90b87480ba28553656eb10552f6d6" title="Makes the actor invisable.">DetachFromGraphics</a>();</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <a class="code" href="classMezzanine_1_1AttachableParent.xhtml#ae4c567231013730e4259fb164e8e1f0d" title="Detaches all attachables currently attached.">DetachAllChildren</a>();</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    }</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a1f255e52f48a9fec2cfe2f91664fb350">  247</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a1f255e52f48a9fec2cfe2f91664fb350" title="Utility function for altering or checking the World Object every frame. ">ActorSoft::_Update</a>()</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="comment">/*Ogre::VertexData* vertexData = entity-&gt;getMesh()-&gt;getSubMesh(0)-&gt;vertexData;</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">        const Ogre::VertexElement* posElem = vertexData-&gt;vertexDeclaration-&gt;findElementBySemantic(Ogre::VES_POSITION);</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">        Ogre::HardwareVertexBufferSharedPtr vBuffer = vertexData-&gt;vertexBufferBinding-&gt;getBuffer(posElem-&gt;getSource());</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">        unsigned char* vertex = static_cast&lt;unsigned char*&gt;(vBuffer-&gt;lock(Ogre::HardwareBuffer::HBL_NORMAL));</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment">        float* pReal = NULL;</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment">        for (size_t j = 0; j &lt; vertexData-&gt;vertexCount; j++ )</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">            posElem-&gt;baseVertexPointerToElement(vertex, &amp;pReal);</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">            *pReal++ = this-&gt;PhysicsSoftBody-&gt;m_nodes[j].m_x.x();</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">            *pReal++ = this-&gt;PhysicsSoftBody-&gt;m_nodes[j].m_x.y();</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment">            *pReal++ = this-&gt;PhysicsSoftBody-&gt;m_nodes[j].m_x.z();</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">            vertex += vBuffer-&gt;getVertexSize();</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">        vBuffer-&gt;unlock();// */</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="comment">//btVector3 position = this-&gt;PhysicsSoftBody-&gt;getWorldTransform().getOrigin();</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="comment">//btQuaternion rotation = this-&gt;PhysicsSoftBody-&gt;getWorldTransform().getRotation();</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        btVector3 position = this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_clusters[0]-&gt;m_framexform.getOrigin();</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        btQuaternion rotation = this-&gt;<a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>-&gt;m_clusters[0]-&gt;m_framexform.getRotation();</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#af9682da6de09a649bf5c7cef150124f5" title="This class encapsulates the functionality of the Ogre::SceneNode using this.">GraphicsNode</a>-&gt;setPosition(position.x(), position.y(), position.z());</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1WorldObject.xhtml#af9682da6de09a649bf5c7cef150124f5" title="This class encapsulates the functionality of the Ogre::SceneNode using this.">GraphicsNode</a>-&gt;setOrientation(rotation.w(), rotation.x(), rotation.y(), rotation.z());</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab0ddf931ccde766dc5e040077f1a3ec4">  274</a></span>&#160;    btSoftBody* <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#ab0ddf931ccde766dc5e040077f1a3ec4" title="Get the Physics data raw from the physic subsystem.">ActorSoft::GetBulletObject</a>()</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1ActorSoft.xhtml#a4eb4bcfe665df0c4741f5c17ff268c88" title="Used to simulate the functionality of a btSoftBody for use with the physics subsystem.">PhysicsSoftBody</a>;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;}</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Sep 16 2013 06:21:41 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
