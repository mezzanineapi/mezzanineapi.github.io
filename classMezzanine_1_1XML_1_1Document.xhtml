<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::XML::Document Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September14,2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1XML.xhtml">XML</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml">Document</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classMezzanine_1_1XML_1_1Document-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::XML::Document Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The root node of any xml hierarchy is a <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml">Document</a>.  
 <a href="classMezzanine_1_1XML_1_1Document.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="document_8h_source.xhtml">document.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::XML::Document:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1XML_1_1Document__inherit__graph.svg" width="208" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::XML::Document:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1XML_1_1Document__coll__graph.svg" width="208" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abd396c2c3a8cc3879125c995e266a6b1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abd396c2c3a8cc3879125c995e266a6b1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#abd396c2c3a8cc3879125c995e266a6b1">Document</a> ()</td></tr>
<tr class="memdesc:abd396c2c3a8cc3879125c995e266a6b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty document with just a root <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>. <br/></td></tr>
<tr class="separator:abd396c2c3a8cc3879125c995e266a6b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eb1799d321dcd7a5d6ff9076f2723fd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4eb1799d321dcd7a5d6ff9076f2723fd"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a4eb1799d321dcd7a5d6ff9076f2723fd">~Document</a> ()</td></tr>
<tr class="memdesc:a4eb1799d321dcd7a5d6ff9076f2723fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tears down a document, and incidentally invalidates all <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> handles to this document. <br/></td></tr>
<tr class="separator:a4eb1799d321dcd7a5d6ff9076f2723fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac1611207ee9ef11a80bc1796020cf4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#aac1611207ee9ef11a80bc1796020cf4d">DocumentElement</a> () const </td></tr>
<tr class="memdesc:aac1611207ee9ef11a80bc1796020cf4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get document element.  <a href="#aac1611207ee9ef11a80bc1796020cf4d">More...</a><br/></td></tr>
<tr class="separator:aac1611207ee9ef11a80bc1796020cf4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb9abd5b77651735b1380f6bd5934837"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#afb9abd5b77651735b1380f6bd5934837">Load</a> (<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Resource::DataStream</a> &amp;stream, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>)</td></tr>
<tr class="memdesc:afb9abd5b77651735b1380f6bd5934837"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load a document from a data stream.  <a href="#afb9abd5b77651735b1380f6bd5934837">More...</a><br/></td></tr>
<tr class="separator:afb9abd5b77651735b1380f6bd5934837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a319fa46ad3580c3643bb1678e51c1721"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a319fa46ad3580c3643bb1678e51c1721">Load</a> (std::basic_istream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;stream, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>)</td></tr>
<tr class="memdesc:a319fa46ad3580c3643bb1678e51c1721"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> from a stream.  <a href="#a319fa46ad3580c3643bb1678e51c1721">More...</a><br/></td></tr>
<tr class="separator:a319fa46ad3580c3643bb1678e51c1721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef1bc969024acf12bcf722e46f9f9527"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#aef1bc969024acf12bcf722e46f9f9527">Load</a> (std::basic_istream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;stream, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>)</td></tr>
<tr class="memdesc:aef1bc969024acf12bcf722e46f9f9527"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> from a wide stream.  <a href="#aef1bc969024acf12bcf722e46f9f9527">More...</a><br/></td></tr>
<tr class="separator:aef1bc969024acf12bcf722e46f9f9527"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a160b482e13a3eedd89e377c1aca17fa7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a160b482e13a3eedd89e377c1aca17fa7">Load</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *contents, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>)</td></tr>
<tr class="memdesc:a160b482e13a3eedd89e377c1aca17fa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> from a C-style string.  <a href="#a160b482e13a3eedd89e377c1aca17fa7">More...</a><br/></td></tr>
<tr class="separator:a160b482e13a3eedd89e377c1aca17fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98977b675efa58d56c224f6256800127"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a98977b675efa58d56c224f6256800127">LoadBuffer</a> (const void *contents, size_t size, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>)</td></tr>
<tr class="memdesc:a98977b675efa58d56c224f6256800127"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from buffer. Copies/converts the buffer, so it may be deleted or changed after the function returns.  <a href="#a98977b675efa58d56c224f6256800127">More...</a><br/></td></tr>
<tr class="separator:a98977b675efa58d56c224f6256800127"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8be0ede460622c63de94b734bc258ab6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a8be0ede460622c63de94b734bc258ab6">LoadBufferInplace</a> (void *contents, size_t size, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>)</td></tr>
<tr class="memdesc:a8be0ede460622c63de94b734bc258ab6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data).  <a href="#a8be0ede460622c63de94b734bc258ab6">More...</a><br/></td></tr>
<tr class="separator:a8be0ede460622c63de94b734bc258ab6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30fdca5c7cacb1cceff28e03f5b27850"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a30fdca5c7cacb1cceff28e03f5b27850">LoadBufferInplaceOwn</a> (void *contents, size_t size, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>)</td></tr>
<tr class="memdesc:a30fdca5c7cacb1cceff28e03f5b27850"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data).  <a href="#a30fdca5c7cacb1cceff28e03f5b27850">More...</a><br/></td></tr>
<tr class="separator:a30fdca5c7cacb1cceff28e03f5b27850"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89365dd7aa1cd2e25ebd72ceae8cad90"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a89365dd7aa1cd2e25ebd72ceae8cad90">LoadFile</a> (const char *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aeb0e436aeafde484a33a362e507dfe64">Path</a>, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>)</td></tr>
<tr class="memdesc:a89365dd7aa1cd2e25ebd72ceae8cad90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from file.  <a href="#a89365dd7aa1cd2e25ebd72ceae8cad90">More...</a><br/></td></tr>
<tr class="separator:a89365dd7aa1cd2e25ebd72ceae8cad90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66fe56a796539d5eb3576d058072c2eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a66fe56a796539d5eb3576d058072c2eb">LoadFile</a> (const wchar_t *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aeb0e436aeafde484a33a362e507dfe64">Path</a>, unsigned int options=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>)</td></tr>
<tr class="memdesc:a66fe56a796539d5eb3576d058072c2eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load document from file.  <a href="#a66fe56a796539d5eb3576d058072c2eb">More...</a><br/></td></tr>
<tr class="separator:a66fe56a796539d5eb3576d058072c2eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dd37aaa59b59a89c34f927e8aaa76ed"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8dd37aaa59b59a89c34f927e8aaa76ed"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a8dd37aaa59b59a89c34f927e8aaa76ed">Reset</a> ()</td></tr>
<tr class="memdesc:a8dd37aaa59b59a89c34f927e8aaa76ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all nodes, leaving the empty document. <br/></td></tr>
<tr class="separator:a8dd37aaa59b59a89c34f927e8aaa76ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace372361f107a7422b97fe26b1002074"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#ace372361f107a7422b97fe26b1002074">Reset</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml">Document</a> &amp;proto)</td></tr>
<tr class="memdesc:ace372361f107a7422b97fe26b1002074"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all nodes, then copies the entire contents of the specified document.  <a href="#ace372361f107a7422b97fe26b1002074">More...</a><br/></td></tr>
<tr class="separator:ace372361f107a7422b97fe26b1002074"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a877e44869d67a6ea736c82bb8adbc0ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a877e44869d67a6ea736c82bb8adbc0ad">Save</a> (<a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Resource::DataStream</a> &amp;stream, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>) const </td></tr>
<tr class="memdesc:a877e44869d67a6ea736c82bb8adbc0ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to a stream.  <a href="#a877e44869d67a6ea736c82bb8adbc0ad">More...</a><br/></td></tr>
<tr class="separator:a877e44869d67a6ea736c82bb8adbc0ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebf22bbc54f2e69bcf19c7f2f9978ade"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#aebf22bbc54f2e69bcf19c7f2f9978ade">Save</a> (<a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml">Writer</a> &amp;WriterInstance, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>) const </td></tr>
<tr class="memdesc:aebf22bbc54f2e69bcf19c7f2f9978ade"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to WriterInstance.  <a href="#aebf22bbc54f2e69bcf19c7f2f9978ade">More...</a><br/></td></tr>
<tr class="separator:aebf22bbc54f2e69bcf19c7f2f9978ade"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a884b9b13900807915db66a7caf7e42d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a884b9b13900807915db66a7caf7e42d4">Save</a> (std::basic_ostream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;stream, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>) const </td></tr>
<tr class="memdesc:a884b9b13900807915db66a7caf7e42d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to a stream of characters.  <a href="#a884b9b13900807915db66a7caf7e42d4">More...</a><br/></td></tr>
<tr class="separator:a884b9b13900807915db66a7caf7e42d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a086b685984950c88316c549acbf77ec9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a086b685984950c88316c549acbf77ec9">Save</a> (std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;stream, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>) const </td></tr>
<tr class="memdesc:a086b685984950c88316c549acbf77ec9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to a stream of wide characters.  <a href="#a086b685984950c88316c549acbf77ec9">More...</a><br/></td></tr>
<tr class="separator:a086b685984950c88316c549acbf77ec9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42feffdea66cc25d48fbc81eff21268e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#a42feffdea66cc25d48fbc81eff21268e">SaveFile</a> (const char *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aeb0e436aeafde484a33a362e507dfe64">Path</a>, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>) const </td></tr>
<tr class="memdesc:a42feffdea66cc25d48fbc81eff21268e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> to file.  <a href="#a42feffdea66cc25d48fbc81eff21268e">More...</a><br/></td></tr>
<tr class="separator:a42feffdea66cc25d48fbc81eff21268e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2d3b702a673110ec67ec7740f8b467b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml#ac2d3b702a673110ec67ec7740f8b467b">SaveFile</a> (const wchar_t *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aeb0e436aeafde484a33a362e507dfe64">Path</a>, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>) const </td></tr>
<tr class="memdesc:ac2d3b702a673110ec67ec7740f8b467b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> to file.  <a href="#ac2d3b702a673110ec67ec7740f8b467b">More...</a><br/></td></tr>
<tr class="separator:ac2d3b702a673110ec67ec7740f8b467b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1XML_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1XML_1_1Node')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Mezzanine::XML::Node</a></td></tr>
<tr class="memitem:a7e5f944993c8ee46091f6d0bf032af79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7e5f944993c8ee46091f6d0bf032af79"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7e5f944993c8ee46091f6d0bf032af79">Node</a> ()</td></tr>
<tr class="memdesc:a7e5f944993c8ee46091f6d0bf032af79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. Constructs an empty node. <br/></td></tr>
<tr class="separator:a7e5f944993c8ee46091f6d0bf032af79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02d36ecbae471a7059e0bc931ad0ebf inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa02d36ecbae471a7059e0bc931ad0ebf">Node</a> (NodeStruct *p)</td></tr>
<tr class="memdesc:aa02d36ecbae471a7059e0bc931ad0ebf inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs node from internal pointer.  <a href="#aa02d36ecbae471a7059e0bc931ad0ebf">More...</a><br/></td></tr>
<tr class="separator:aa02d36ecbae471a7059e0bc931ad0ebf inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a578775e024451fcad9858dde33c07ae8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a578775e024451fcad9858dde33c07ae8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a578775e024451fcad9858dde33c07ae8">~Node</a> ()</td></tr>
<tr class="memdesc:a578775e024451fcad9858dde33c07ae8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual deconstructor. <br/></td></tr>
<tr class="separator:a578775e024451fcad9858dde33c07ae8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20ea63a61ca1a7df2e00e074178bd9a4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4">AppendAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:a20ea63a61ca1a7df2e00e074178bd9a4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it at the end of this Nodes attributes.  <a href="#a20ea63a61ca1a7df2e00e074178bd9a4">More...</a><br/></td></tr>
<tr class="separator:a20ea63a61ca1a7df2e00e074178bd9a4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e82bbe2dbf46f1a88ece73f243e030c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4e82bbe2dbf46f1a88ece73f243e030c">AppendAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:a4e82bbe2dbf46f1a88ece73f243e030c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it at the end of this Nodes attributes.  <a href="#a4e82bbe2dbf46f1a88ece73f243e030c">More...</a><br/></td></tr>
<tr class="separator:a4e82bbe2dbf46f1a88ece73f243e030c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65772e1f13ac21655e3ffbe8ffe4aaa1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1">AppendChild</a> (<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a79dc84831ed2506631fb4adeb899564a">NodeType</a> <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a0337fae875c80702cc9a1540e84b07a8">Type</a>=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a79dc84831ed2506631fb4adeb899564aa0460269885b6d435d76d62374780232c">NodeElement</a>)</td></tr>
<tr class="memdesc:a65772e1f13ac21655e3ffbe8ffe4aaa1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and makes it a child of this one.  <a href="#a65772e1f13ac21655e3ffbe8ffe4aaa1">More...</a><br/></td></tr>
<tr class="separator:a65772e1f13ac21655e3ffbe8ffe4aaa1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ffb126e0c5cd05046b6e139d14db7a3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a1ffb126e0c5cd05046b6e139d14db7a3">AppendChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:a1ffb126e0c5cd05046b6e139d14db7a3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name.  <a href="#a1ffb126e0c5cd05046b6e139d14db7a3">More...</a><br/></td></tr>
<tr class="separator:a1ffb126e0c5cd05046b6e139d14db7a3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27d343774e365c9fe719765e71c1eb91 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a27d343774e365c9fe719765e71c1eb91">AppendChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:a27d343774e365c9fe719765e71c1eb91 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name.  <a href="#a27d343774e365c9fe719765e71c1eb91">More...</a><br/></td></tr>
<tr class="separator:a27d343774e365c9fe719765e71c1eb91 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aff8fe6b9a3458e34932c86d5b832fd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a6aff8fe6b9a3458e34932c86d5b832fd">AppendCopy</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;proto)</td></tr>
<tr class="memdesc:a6aff8fe6b9a3458e34932c86d5b832fd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts the copy at the end of this Nodes attributes.  <a href="#a6aff8fe6b9a3458e34932c86d5b832fd">More...</a><br/></td></tr>
<tr class="separator:a6aff8fe6b9a3458e34932c86d5b832fd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3032c72206f8a568d32bde4a3e76614a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3032c72206f8a568d32bde4a3e76614a">AppendCopy</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;proto)</td></tr>
<tr class="memdesc:a3032c72206f8a568d32bde4a3e76614a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and puts the copy at the end of the list of this Nodes Childrem.  <a href="#a3032c72206f8a568d32bde4a3e76614a">More...</a><br/></td></tr>
<tr class="separator:a3032c72206f8a568d32bde4a3e76614a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a352f6ae4404113b7ebaa3e7e766d3eda inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1ObjectRange.xhtml">ObjectRange</a>&lt; <a class="el" href="classMezzanine_1_1XML_1_1AttributeIterator.xhtml">AttributeIterator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a352f6ae4404113b7ebaa3e7e766d3eda">attributes</a> () const </td></tr>
<tr class="memdesc:a352f6ae4404113b7ebaa3e7e766d3eda inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">A range of iterators for just the attributes of this node.  <a href="#a352f6ae4404113b7ebaa3e7e766d3eda">More...</a><br/></td></tr>
<tr class="separator:a352f6ae4404113b7ebaa3e7e766d3eda inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73b0f3df319f02e7fe7e2f71cdbef111 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a25bf6994d599bfa0e3f25b7215b78d4f">attribute_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a73b0f3df319f02e7fe7e2f71cdbef111">attributes_begin</a> () const </td></tr>
<tr class="memdesc:a73b0f3df319f02e7fe7e2f71cdbef111 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> iterator that references the first <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> on this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a73b0f3df319f02e7fe7e2f71cdbef111">More...</a><br/></td></tr>
<tr class="separator:a73b0f3df319f02e7fe7e2f71cdbef111 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a617646c65216350a24dec35ac6784aa8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a25bf6994d599bfa0e3f25b7215b78d4f">attribute_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a617646c65216350a24dec35ac6784aa8">attributes_end</a> () const </td></tr>
<tr class="memdesc:a617646c65216350a24dec35ac6784aa8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> iterator that references the one past the last <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> on this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a617646c65216350a24dec35ac6784aa8">More...</a><br/></td></tr>
<tr class="separator:a617646c65216350a24dec35ac6784aa8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ec690c89564f34967b5563fc335ffa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#afe6bd18eaf3ccafadaf851b0247019f3">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac0ec690c89564f34967b5563fc335ffa">begin</a> () const </td></tr>
<tr class="memdesc:ac0ec690c89564f34967b5563fc335ffa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a Child node iterator that references the first child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#ac0ec690c89564f34967b5563fc335ffa">More...</a><br/></td></tr>
<tr class="separator:ac0ec690c89564f34967b5563fc335ffa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c770f21644c937e1e5ca1fd9966651b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a8c770f21644c937e1e5ca1fd9966651b">Empty</a> () const </td></tr>
<tr class="memdesc:a8c770f21644c937e1e5ca1fd9966651b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is this storing anything at all?  <a href="#a8c770f21644c937e1e5ca1fd9966651b">More...</a><br/></td></tr>
<tr class="separator:a8c770f21644c937e1e5ca1fd9966651b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabffeb501cfdd732dc2ce6b1bda6c56f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#afe6bd18eaf3ccafadaf851b0247019f3">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aabffeb501cfdd732dc2ce6b1bda6c56f">end</a> () const </td></tr>
<tr class="memdesc:aabffeb501cfdd732dc2ce6b1bda6c56f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a Child node iterator that references one past the last child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#aabffeb501cfdd732dc2ce6b1bda6c56f">More...</a><br/></td></tr>
<tr class="separator:aabffeb501cfdd732dc2ce6b1bda6c56f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fccd8710362bf3f7e2b25e78f860ffd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplParams" colspan="2">template&lt;typename Predicate &gt; </td></tr>
<tr class="memitem:a9fccd8710362bf3f7e2b25e78f860ffd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a9fccd8710362bf3f7e2b25e78f860ffd">FindAttribute</a> (Predicate pred) const </td></tr>
<tr class="memdesc:a9fccd8710362bf3f7e2b25e78f860ffd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> using a function to check each <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> individually.  <a href="#a9fccd8710362bf3f7e2b25e78f860ffd">More...</a><br/></td></tr>
<tr class="separator:a9fccd8710362bf3f7e2b25e78f860ffd inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52f9857da9b3b939895c8915286fd9ad inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplParams" colspan="2">template&lt;typename Predicate &gt; </td></tr>
<tr class="memitem:a52f9857da9b3b939895c8915286fd9ad inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a52f9857da9b3b939895c8915286fd9ad">FindChild</a> (Predicate pred) const </td></tr>
<tr class="memdesc:a52f9857da9b3b939895c8915286fd9ad inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for an child ( only direct children ) <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> using a function to check each <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> individually.  <a href="#a52f9857da9b3b939895c8915286fd9ad">More...</a><br/></td></tr>
<tr class="separator:a52f9857da9b3b939895c8915286fd9ad inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a494ed0b7df6b44854631a2197c204a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3a494ed0b7df6b44854631a2197c204a">FindChildbyAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *AttrName, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *AttrValue) const </td></tr>
<tr class="memdesc:a3a494ed0b7df6b44854631a2197c204a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> by an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> it has.  <a href="#a3a494ed0b7df6b44854631a2197c204a">More...</a><br/></td></tr>
<tr class="separator:a3a494ed0b7df6b44854631a2197c204a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a780a47da7a082e3a52a3e9292ef0a0ca inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a780a47da7a082e3a52a3e9292ef0a0ca">FindChildbyAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *AttrName, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *AttrValue) const </td></tr>
<tr class="memdesc:a780a47da7a082e3a52a3e9292ef0a0ca inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> by an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> it has.  <a href="#a780a47da7a082e3a52a3e9292ef0a0ca">More...</a><br/></td></tr>
<tr class="separator:a780a47da7a082e3a52a3e9292ef0a0ca inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b6592942502b7cc6b5eb19baef24b85 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplParams" colspan="2">template&lt;typename Predicate &gt; </td></tr>
<tr class="memitem:a5b6592942502b7cc6b5eb19baef24b85 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a5b6592942502b7cc6b5eb19baef24b85">FindNode</a> (Predicate pred) const </td></tr>
<tr class="memdesc:a5b6592942502b7cc6b5eb19baef24b85 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for any <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> descended from this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> using a function to check each <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> individually.  <a href="#a5b6592942502b7cc6b5eb19baef24b85">More...</a><br/></td></tr>
<tr class="separator:a5b6592942502b7cc6b5eb19baef24b85 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa33661cf0b7ac69d67ed80ee74ff387c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1XPathNodeSet.xhtml">XPathNodeSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa33661cf0b7ac69d67ed80ee74ff387c">FindNodes</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *query, <a class="el" href="classMezzanine_1_1XML_1_1XPathVariableSet.xhtml">XPathVariableSet</a> *variables=0) const </td></tr>
<tr class="memdesc:aa33661cf0b7ac69d67ed80ee74ff387c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select a group of nodes by evaluating an XPath query.  <a href="#aa33661cf0b7ac69d67ed80ee74ff387c">More...</a><br/></td></tr>
<tr class="separator:aa33661cf0b7ac69d67ed80ee74ff387c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46852831dfcf1e5d1e51dd2bb89fea29 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1XPathNodeSet.xhtml">XPathNodeSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a46852831dfcf1e5d1e51dd2bb89fea29">FindNodes</a> (const <a class="el" href="classMezzanine_1_1XML_1_1XPathQuery.xhtml">XPathQuery</a> &amp;query) const </td></tr>
<tr class="memdesc:a46852831dfcf1e5d1e51dd2bb89fea29 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select a group of nodes by evaluating an XPath query.  <a href="#a46852831dfcf1e5d1e51dd2bb89fea29">More...</a><br/></td></tr>
<tr class="separator:a46852831dfcf1e5d1e51dd2bb89fea29 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c6c47f340158d638354e181218da8cc inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1XPathNode.xhtml">XPathNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a1c6c47f340158d638354e181218da8cc">FindSingleNode</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *query, <a class="el" href="classMezzanine_1_1XML_1_1XPathVariableSet.xhtml">XPathVariableSet</a> *variables=0) const </td></tr>
<tr class="memdesc:a1c6c47f340158d638354e181218da8cc inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select single node by evaluating an XPath query. Returns first node from the resulting node set.  <a href="#a1c6c47f340158d638354e181218da8cc">More...</a><br/></td></tr>
<tr class="separator:a1c6c47f340158d638354e181218da8cc inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bb49c4427a987fb53548462ed69d0c1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1XPathNode.xhtml">XPathNode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4bb49c4427a987fb53548462ed69d0c1">FindSingleNode</a> (const <a class="el" href="classMezzanine_1_1XML_1_1XPathQuery.xhtml">XPathQuery</a> &amp;query) const </td></tr>
<tr class="memdesc:a4bb49c4427a987fb53548462ed69d0c1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Select single node by evaluating an XPath query. Returns first node from the resulting node set.  <a href="#a4bb49c4427a987fb53548462ed69d0c1">More...</a><br/></td></tr>
<tr class="separator:a4bb49c4427a987fb53548462ed69d0c1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a446781c040be454e12282ff91d28cb20 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a446781c040be454e12282ff91d28cb20">FirstElementByPath</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aeb0e436aeafde484a33a362e507dfe64">Path</a>, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> delimiter= '/') const </td></tr>
<tr class="memdesc:a446781c040be454e12282ff91d28cb20 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for a node by Path consisting of node names and . or .. elements.  <a href="#a446781c040be454e12282ff91d28cb20">More...</a><br/></td></tr>
<tr class="separator:a446781c040be454e12282ff91d28cb20 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7257f2f9f8e08461260afae0d5062aa7 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7">GetAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>) const </td></tr>
<tr class="memdesc:a7257f2f9f8e08461260afae0d5062aa7 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to get an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> on this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> with a given name.  <a href="#a7257f2f9f8e08461260afae0d5062aa7">More...</a><br/></td></tr>
<tr class="separator:a7257f2f9f8e08461260afae0d5062aa7 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c5b7b5376c9444d3d1d0bfeb47e4dc4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4">GetChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>) const </td></tr>
<tr class="memdesc:a9c5b7b5376c9444d3d1d0bfeb47e4dc4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to get a child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> with a given name.  <a href="#a9c5b7b5376c9444d3d1d0bfeb47e4dc4">More...</a><br/></td></tr>
<tr class="separator:a9c5b7b5376c9444d3d1d0bfeb47e4dc4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4719f451256da4ee457fa4cf696aba3c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4719f451256da4ee457fa4cf696aba3c">GetChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>) const </td></tr>
<tr class="memdesc:a4719f451256da4ee457fa4cf696aba3c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to get a child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> with a given name.  <a href="#a4719f451256da4ee457fa4cf696aba3c">More...</a><br/></td></tr>
<tr class="separator:a4719f451256da4ee457fa4cf696aba3c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a410940d2f40341ccba4a52ec6e4bf2f3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1ObjectRange.xhtml">ObjectRange</a>&lt; <a class="el" href="classMezzanine_1_1XML_1_1NodeIterator.xhtml">NodeIterator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a410940d2f40341ccba4a52ec6e4bf2f3">GetChildren</a> () const </td></tr>
<tr class="memdesc:a410940d2f40341ccba4a52ec6e4bf2f3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an iterator range for this node's children nodes.  <a href="#a410940d2f40341ccba4a52ec6e4bf2f3">More...</a><br/></td></tr>
<tr class="separator:a410940d2f40341ccba4a52ec6e4bf2f3 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af13a05f3a63f7849145183b62e2b77d5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1ObjectRange.xhtml">ObjectRange</a>&lt; <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#af13a05f3a63f7849145183b62e2b77d5">GetChildren</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>) const </td></tr>
<tr class="memdesc:af13a05f3a63f7849145183b62e2b77d5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an iterator range for this a subset of this node's children nodes.  <a href="#af13a05f3a63f7849145183b62e2b77d5">More...</a><br/></td></tr>
<tr class="separator:af13a05f3a63f7849145183b62e2b77d5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8c695aaf787512c7efff2ba49fa23ce inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac8c695aaf787512c7efff2ba49fa23ce">GetChildValue</a> () const </td></tr>
<tr class="memdesc:ac8c695aaf787512c7efff2ba49fa23ce inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieve the value of this(or a child's) Nodes PCDATA child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#ac8c695aaf787512c7efff2ba49fa23ce">More...</a><br/></td></tr>
<tr class="separator:ac8c695aaf787512c7efff2ba49fa23ce inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa07385715c59f2547bd0a67c1111eb98 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa07385715c59f2547bd0a67c1111eb98">GetChildValue</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>) const </td></tr>
<tr class="memdesc:aa07385715c59f2547bd0a67c1111eb98 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the PCDATA of a given child. The same a calling "GetChild(Name).ChildValue()".  <a href="#aa07385715c59f2547bd0a67c1111eb98">More...</a><br/></td></tr>
<tr class="separator:aa07385715c59f2547bd0a67c1111eb98 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a380e93db12d1b50caff852e86f1c3e84 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a380e93db12d1b50caff852e86f1c3e84">GetFirstAttribute</a> () const </td></tr>
<tr class="memdesc:a380e93db12d1b50caff852e86f1c3e84 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the First <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> in this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a380e93db12d1b50caff852e86f1c3e84">More...</a><br/></td></tr>
<tr class="separator:a380e93db12d1b50caff852e86f1c3e84 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fd3f099201e3e6001bdf2afea598a8a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a">GetFirstChild</a> () const </td></tr>
<tr class="memdesc:a4fd3f099201e3e6001bdf2afea598a8a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a4fd3f099201e3e6001bdf2afea598a8a">More...</a><br/></td></tr>
<tr class="separator:a4fd3f099201e3e6001bdf2afea598a8a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85c34a02ae07edea04a6371f173c9e51 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a85c34a02ae07edea04a6371f173c9e51">GetLastAttribute</a> () const </td></tr>
<tr class="memdesc:a85c34a02ae07edea04a6371f173c9e51 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Last <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> in this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a85c34a02ae07edea04a6371f173c9e51">More...</a><br/></td></tr>
<tr class="separator:a85c34a02ae07edea04a6371f173c9e51 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae26ccc6da396c9adf3309c781f81fed5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ae26ccc6da396c9adf3309c781f81fed5">GetLastChild</a> () const </td></tr>
<tr class="memdesc:ae26ccc6da396c9adf3309c781f81fed5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the last child <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#ae26ccc6da396c9adf3309c781f81fed5">More...</a><br/></td></tr>
<tr class="separator:ae26ccc6da396c9adf3309c781f81fed5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9afd9eed67cd16754edaf6264021b21b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a9afd9eed67cd16754edaf6264021b21b">GetNextSibling</a> () const </td></tr>
<tr class="memdesc:a9afd9eed67cd16754edaf6264021b21b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to retrieve the next sibling of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#a9afd9eed67cd16754edaf6264021b21b">More...</a><br/></td></tr>
<tr class="separator:a9afd9eed67cd16754edaf6264021b21b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe5426c7ead3ce5fbb68cd2ae6a0abe1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#afe5426c7ead3ce5fbb68cd2ae6a0abe1">GetNextSibling</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>) const </td></tr>
<tr class="memdesc:afe5426c7ead3ce5fbb68cd2ae6a0abe1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a9afd9eed67cd16754edaf6264021b21b">GetNextSibling</a> except that the return will be a null <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> or have a matching name.  <a href="#afe5426c7ead3ce5fbb68cd2ae6a0abe1">More...</a><br/></td></tr>
<tr class="separator:afe5426c7ead3ce5fbb68cd2ae6a0abe1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add9d49e423ff030e92112b6fdfa2a980 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#add9d49e423ff030e92112b6fdfa2a980">GetParent</a> () const </td></tr>
<tr class="memdesc:add9d49e423ff030e92112b6fdfa2a980 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to retrieve the parent of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#add9d49e423ff030e92112b6fdfa2a980">More...</a><br/></td></tr>
<tr class="separator:add9d49e423ff030e92112b6fdfa2a980 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afce3d7436e0da9b53e5b3168035e3daa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#afce3d7436e0da9b53e5b3168035e3daa">GetPreviousSibling</a> () const </td></tr>
<tr class="memdesc:afce3d7436e0da9b53e5b3168035e3daa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to retrieve the prvious sibling of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#afce3d7436e0da9b53e5b3168035e3daa">More...</a><br/></td></tr>
<tr class="separator:afce3d7436e0da9b53e5b3168035e3daa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ddc523e67eafb78bd46abe06df05bbe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a0ddc523e67eafb78bd46abe06df05bbe">GetPreviousSibling</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>) const </td></tr>
<tr class="memdesc:a0ddc523e67eafb78bd46abe06df05bbe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Like <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#afce3d7436e0da9b53e5b3168035e3daa">GetPreviousSibling</a> except that the return will be a null <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> or have a matching name.  <a href="#a0ddc523e67eafb78bd46abe06df05bbe">More...</a><br/></td></tr>
<tr class="separator:a0ddc523e67eafb78bd46abe06df05bbe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae54eb76a1905fa6e4950ffc1e5ecb98a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ae54eb76a1905fa6e4950ffc1e5ecb98a">GetRoot</a> () const </td></tr>
<tr class="memdesc:ae54eb76a1905fa6e4950ffc1e5ecb98a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to retrieve the root <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, or the most base <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> containing this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#ae54eb76a1905fa6e4950ffc1e5ecb98a">More...</a><br/></td></tr>
<tr class="separator:ae54eb76a1905fa6e4950ffc1e5ecb98a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83ec68f0aee4040bc5e9c8051692a242 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1NodeText.xhtml">NodeText</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a83ec68f0aee4040bc5e9c8051692a242">GetText</a> () const </td></tr>
<tr class="memdesc:a83ec68f0aee4040bc5e9c8051692a242 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get text object for the current node.  <a href="#a83ec68f0aee4040bc5e9c8051692a242">More...</a><br/></td></tr>
<tr class="separator:a83ec68f0aee4040bc5e9c8051692a242 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a5321c66997f7aee85b73257856638c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7a5321c66997f7aee85b73257856638c">HashValue</a> () const </td></tr>
<tr class="memdesc:a7a5321c66997f7aee85b73257856638c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get hash Value (unique for handles to the same object)  <a href="#a7a5321c66997f7aee85b73257856638c">More...</a><br/></td></tr>
<tr class="separator:a7a5321c66997f7aee85b73257856638c inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c349d37f551a26522a357378f7cbd5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac5c349d37f551a26522a357378f7cbd5">InsertAttributeAfter</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;attr)</td></tr>
<tr class="memdesc:ac5c349d37f551a26522a357378f7cbd5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it into the list of this Nodes attributes.  <a href="#ac5c349d37f551a26522a357378f7cbd5">More...</a><br/></td></tr>
<tr class="separator:ac5c349d37f551a26522a357378f7cbd5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc20a1161f0a398b39605d63a41a0b3a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#acc20a1161f0a398b39605d63a41a0b3a">InsertAttributeBefore</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;attr)</td></tr>
<tr class="memdesc:acc20a1161f0a398b39605d63a41a0b3a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it into the list of this Nodes attributes.  <a href="#acc20a1161f0a398b39605d63a41a0b3a">More...</a><br/></td></tr>
<tr class="separator:acc20a1161f0a398b39605d63a41a0b3a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7963271c2ad283a37cbb750370daf4c9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7963271c2ad283a37cbb750370daf4c9">InsertChildAfter</a> (<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a79dc84831ed2506631fb4adeb899564a">NodeType</a> <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a0337fae875c80702cc9a1540e84b07a8">Type</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a7963271c2ad283a37cbb750370daf4c9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and makes it a child of this one, and puts at the middle of the Child Nodes.  <a href="#a7963271c2ad283a37cbb750370daf4c9">More...</a><br/></td></tr>
<tr class="separator:a7963271c2ad283a37cbb750370daf4c9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcdbb99c3840311035690489db1ed991 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#abcdbb99c3840311035690489db1ed991">InsertChildAfter</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:abcdbb99c3840311035690489db1ed991 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name at the middle of the children.  <a href="#abcdbb99c3840311035690489db1ed991">More...</a><br/></td></tr>
<tr class="separator:abcdbb99c3840311035690489db1ed991 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d880d9761fa75e9582f22355693a1f6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3d880d9761fa75e9582f22355693a1f6">InsertChildBefore</a> (<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a79dc84831ed2506631fb4adeb899564a">NodeType</a> <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a0337fae875c80702cc9a1540e84b07a8">Type</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a3d880d9761fa75e9582f22355693a1f6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and makes it a child of this one, and puts at the middle of the Child Nodes.  <a href="#a3d880d9761fa75e9582f22355693a1f6">More...</a><br/></td></tr>
<tr class="separator:a3d880d9761fa75e9582f22355693a1f6 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a586aebf39d7be7fe6ea7cc5507d80da1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a586aebf39d7be7fe6ea7cc5507d80da1">InsertChildBefore</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a586aebf39d7be7fe6ea7cc5507d80da1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name at the middle of the children.  <a href="#a586aebf39d7be7fe6ea7cc5507d80da1">More...</a><br/></td></tr>
<tr class="separator:a586aebf39d7be7fe6ea7cc5507d80da1 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8730a6fa8ef0368db283aac132822626 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a8730a6fa8ef0368db283aac132822626">InsertCopyAfter</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;proto, const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;attr)</td></tr>
<tr class="memdesc:a8730a6fa8ef0368db283aac132822626 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts the copy into the list of this Nodes attributes.  <a href="#a8730a6fa8ef0368db283aac132822626">More...</a><br/></td></tr>
<tr class="separator:a8730a6fa8ef0368db283aac132822626 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fe228b595fbbefcaee39809a617ff77 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7fe228b595fbbefcaee39809a617ff77">InsertCopyAfter</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;proto, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a7fe228b595fbbefcaee39809a617ff77 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and puts the copy in the middle the list of this Nodes Childrem.  <a href="#a7fe228b595fbbefcaee39809a617ff77">More...</a><br/></td></tr>
<tr class="separator:a7fe228b595fbbefcaee39809a617ff77 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56a30613af2c3deab2796df3b78a0200 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a56a30613af2c3deab2796df3b78a0200">InsertCopyBefore</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;proto, const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;attr)</td></tr>
<tr class="memdesc:a56a30613af2c3deab2796df3b78a0200 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts the copy into the list of this Nodes attributes.  <a href="#a56a30613af2c3deab2796df3b78a0200">More...</a><br/></td></tr>
<tr class="separator:a56a30613af2c3deab2796df3b78a0200 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71aae61a20841d1b673481e3a1e269b0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a71aae61a20841d1b673481e3a1e269b0">InsertCopyBefore</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;proto, const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a71aae61a20841d1b673481e3a1e269b0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and puts the copy in the middle the list of this Nodes Childrem.  <a href="#a71aae61a20841d1b673481e3a1e269b0">More...</a><br/></td></tr>
<tr class="separator:a71aae61a20841d1b673481e3a1e269b0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b03af0af9e917a74bdb8d35baef59cc inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">NodeStruct *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a0b03af0af9e917a74bdb8d35baef59cc">InternalObject</a> () const </td></tr>
<tr class="memdesc:a0b03af0af9e917a74bdb8d35baef59cc inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get internal pointer.  <a href="#a0b03af0af9e917a74bdb8d35baef59cc">More...</a><br/></td></tr>
<tr class="separator:a0b03af0af9e917a74bdb8d35baef59cc inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1b2f6b9c5b1380c524e6a77011aeda4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a> () const </td></tr>
<tr class="memdesc:ac1b2f6b9c5b1380c524e6a77011aeda4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">ptrdiff_tGet the name of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>.  <a href="#ac1b2f6b9c5b1380c524e6a77011aeda4">More...</a><br/></td></tr>
<tr class="separator:ac1b2f6b9c5b1380c524e6a77011aeda4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae16acf3b0983337c04445dc8a6fa873a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">ptrdiff_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ae16acf3b0983337c04445dc8a6fa873a">OffSetDebug</a> () const </td></tr>
<tr class="memdesc:ae16acf3b0983337c04445dc8a6fa873a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get node Offset in parsed file/string (in char_t units) for debugging purposes.  <a href="#ae16acf3b0983337c04445dc8a6fa873a">More...</a><br/></td></tr>
<tr class="separator:ae16acf3b0983337c04445dc8a6fa873a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a759c8f45b96f77246fddf014074ba0fe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a759c8f45b96f77246fddf014074ba0fe">operator unspecified_bool_type</a> () const </td></tr>
<tr class="memdesc:a759c8f45b96f77246fddf014074ba0fe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to convert this to a boolean value in a safe way.  <a href="#a759c8f45b96f77246fddf014074ba0fe">More...</a><br/></td></tr>
<tr class="separator:a759c8f45b96f77246fddf014074ba0fe inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05f2d6d35b7409ad64b70c83eb89a97e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a05f2d6d35b7409ad64b70c83eb89a97e">operator!</a> () const </td></tr>
<tr class="memdesc:a05f2d6d35b7409ad64b70c83eb89a97e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to convert this node the opposite of it's normal boolean value.  <a href="#a05f2d6d35b7409ad64b70c83eb89a97e">More...</a><br/></td></tr>
<tr class="separator:a05f2d6d35b7409ad64b70c83eb89a97e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ec27dcc7b459ff3e02666c1c6e4367 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a39ec27dcc7b459ff3e02666c1c6e4367">operator!=</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:a39ec27dcc7b459ff3e02666c1c6e4367 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check inequality.  <a href="#a39ec27dcc7b459ff3e02666c1c6e4367">More...</a><br/></td></tr>
<tr class="separator:a39ec27dcc7b459ff3e02666c1c6e4367 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5acc6ab94e5b1d1cf164a7aa4868f0fa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a5acc6ab94e5b1d1cf164a7aa4868f0fa">operator&lt;</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:a5acc6ab94e5b1d1cf164a7aa4868f0fa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check for lessthanness.  <a href="#a5acc6ab94e5b1d1cf164a7aa4868f0fa">More...</a><br/></td></tr>
<tr class="separator:a5acc6ab94e5b1d1cf164a7aa4868f0fa inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa92c72a2e12fb3ff965d3b020797f726 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa92c72a2e12fb3ff965d3b020797f726">operator&lt;=</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:aa92c72a2e12fb3ff965d3b020797f726 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check for inequality and lessthanness.  <a href="#aa92c72a2e12fb3ff965d3b020797f726">More...</a><br/></td></tr>
<tr class="separator:aa92c72a2e12fb3ff965d3b020797f726 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46cdf36ce02c0d59eecf427f5c3c3ed8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a46cdf36ce02c0d59eecf427f5c3c3ed8">operator==</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:a46cdf36ce02c0d59eecf427f5c3c3ed8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check equality.  <a href="#a46cdf36ce02c0d59eecf427f5c3c3ed8">More...</a><br/></td></tr>
<tr class="separator:a46cdf36ce02c0d59eecf427f5c3c3ed8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a386c8a3f740dde6b5dd49d1d045f0f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a9a386c8a3f740dde6b5dd49d1d045f0f">operator&gt;</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:a9a386c8a3f740dde6b5dd49d1d045f0f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check for greaterthanness.  <a href="#a9a386c8a3f740dde6b5dd49d1d045f0f">More...</a><br/></td></tr>
<tr class="separator:a9a386c8a3f740dde6b5dd49d1d045f0f inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f25d351cd6babf71e25186f77290069 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a6f25d351cd6babf71e25186f77290069">operator&gt;=</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;r) const </td></tr>
<tr class="memdesc:a6f25d351cd6babf71e25186f77290069 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the internal values to check for inequality and greaterthanness.  <a href="#a6f25d351cd6babf71e25186f77290069">More...</a><br/></td></tr>
<tr class="separator:a6f25d351cd6babf71e25186f77290069 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb0e436aeafde484a33a362e507dfe64 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aeb0e436aeafde484a33a362e507dfe64">Path</a> (<a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> delimiter= '/') const </td></tr>
<tr class="memdesc:aeb0e436aeafde484a33a362e507dfe64 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the absolute path to this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>.  <a href="#aeb0e436aeafde484a33a362e507dfe64">More...</a><br/></td></tr>
<tr class="separator:aeb0e436aeafde484a33a362e507dfe64 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a700646d6a97d8361cbf73653fcaf3212 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a700646d6a97d8361cbf73653fcaf3212">PrependAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:a700646d6a97d8361cbf73653fcaf3212 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts it at the begining of this Nodes attributes.  <a href="#a700646d6a97d8361cbf73653fcaf3212">More...</a><br/></td></tr>
<tr class="separator:a700646d6a97d8361cbf73653fcaf3212 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c6b463b195439bcf3cbdd80e4f271c0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a2c6b463b195439bcf3cbdd80e4f271c0">PrependChild</a> (<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a79dc84831ed2506631fb4adeb899564a">NodeType</a> <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a0337fae875c80702cc9a1540e84b07a8">Type</a>=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a79dc84831ed2506631fb4adeb899564aa0460269885b6d435d76d62374780232c">NodeElement</a>)</td></tr>
<tr class="memdesc:a2c6b463b195439bcf3cbdd80e4f271c0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and makes it a child of this one, and puts at the beginning of the Child Nodes.  <a href="#a2c6b463b195439bcf3cbdd80e4f271c0">More...</a><br/></td></tr>
<tr class="separator:a2c6b463b195439bcf3cbdd80e4f271c0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f2e7ebeea0e5c4b9cbab38dbdc1df79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a6f2e7ebeea0e5c4b9cbab38dbdc1df79">PrependChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:a6f2e7ebeea0e5c4b9cbab38dbdc1df79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name at the beginning of the children.  <a href="#a6f2e7ebeea0e5c4b9cbab38dbdc1df79">More...</a><br/></td></tr>
<tr class="separator:a6f2e7ebeea0e5c4b9cbab38dbdc1df79 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4d1112151cf7d7e8397b8ad2b3dd2c5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ab4d1112151cf7d7e8397b8ad2b3dd2c5">PrependChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:ab4d1112151cf7d7e8397b8ad2b3dd2c5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an element <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> as a child of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, with the given name at the beginning of the children.  <a href="#ab4d1112151cf7d7e8397b8ad2b3dd2c5">More...</a><br/></td></tr>
<tr class="separator:ab4d1112151cf7d7e8397b8ad2b3dd2c5 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3204a256181933deef123dcac4a549ea inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a3204a256181933deef123dcac4a549ea">PrependCopy</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;proto)</td></tr>
<tr class="memdesc:a3204a256181933deef123dcac4a549ea inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies an <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> and puts the copy at the beginning of this Nodes attributes.  <a href="#a3204a256181933deef123dcac4a549ea">More...</a><br/></td></tr>
<tr class="separator:a3204a256181933deef123dcac4a549ea inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a742ce843b690ac6c98a7bc8801f0d1e9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a742ce843b690ac6c98a7bc8801f0d1e9">PrependCopy</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;proto)</td></tr>
<tr class="memdesc:a742ce843b690ac6c98a7bc8801f0d1e9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and puts the copy at the start of the list of this Nodes Childrem.  <a href="#a742ce843b690ac6c98a7bc8801f0d1e9">More...</a><br/></td></tr>
<tr class="separator:a742ce843b690ac6c98a7bc8801f0d1e9 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef52a586c2e21dce71397f3400c61b72 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aef52a586c2e21dce71397f3400c61b72">Print</a> (<a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml">Writer</a> &amp;WriterInstance, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>, unsigned int Depth=0) const </td></tr>
<tr class="memdesc:aef52a586c2e21dce71397f3400c61b72 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document using a <a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml" title="Interface for node printing (see Node::Print)">Writer</a>.  <a href="#aef52a586c2e21dce71397f3400c61b72">More...</a><br/></td></tr>
<tr class="separator:aef52a586c2e21dce71397f3400c61b72 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dfaf561bbda108c99242237424d573d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a2dfaf561bbda108c99242237424d573d">Print</a> (std::basic_ostream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;os, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>, <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a> DocumentEncoding=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a>, unsigned int Depth=0) const </td></tr>
<tr class="memdesc:a2dfaf561bbda108c99242237424d573d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document using a Output Stream.  <a href="#a2dfaf561bbda108c99242237424d573d">More...</a><br/></td></tr>
<tr class="separator:a2dfaf561bbda108c99242237424d573d inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefc8888bd63decfb4cb571823367fe7a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aefc8888bd63decfb4cb571823367fe7a">Print</a> (std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;os, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *indent=&quot;\t&quot;, unsigned int flags=<a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a>, unsigned int Depth=0) const </td></tr>
<tr class="memdesc:aefc8888bd63decfb4cb571823367fe7a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document using a Output Stream.  <a href="#aefc8888bd63decfb4cb571823367fe7a">More...</a><br/></td></tr>
<tr class="separator:aefc8888bd63decfb4cb571823367fe7a inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfa54ac3a7e75081fceee879f5d6a573 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#abfa54ac3a7e75081fceee879f5d6a573">RemoveAttribute</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml">Attribute</a> &amp;a)</td></tr>
<tr class="memdesc:abfa54ac3a7e75081fceee879f5d6a573 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove specified <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a>.  <a href="#abfa54ac3a7e75081fceee879f5d6a573">More...</a><br/></td></tr>
<tr class="separator:abfa54ac3a7e75081fceee879f5d6a573 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93bd84e1ad8a030be1484a08a777289e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a93bd84e1ad8a030be1484a08a777289e">RemoveAttribute</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:a93bd84e1ad8a030be1484a08a777289e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> as specified by name.  <a href="#a93bd84e1ad8a030be1484a08a777289e">More...</a><br/></td></tr>
<tr class="separator:a93bd84e1ad8a030be1484a08a777289e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fb291fef7d56df2d6e0e0fc9a28e78b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a7fb291fef7d56df2d6e0e0fc9a28e78b">RemoveChild</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;n)</td></tr>
<tr class="memdesc:a7fb291fef7d56df2d6e0e0fc9a28e78b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove specified child element.  <a href="#a7fb291fef7d56df2d6e0e0fc9a28e78b">More...</a><br/></td></tr>
<tr class="separator:a7fb291fef7d56df2d6e0e0fc9a28e78b inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac679160f35df888455b8b72640e9d5e0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac679160f35df888455b8b72640e9d5e0">RemoveChild</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4">Name</a>)</td></tr>
<tr class="memdesc:ac679160f35df888455b8b72640e9d5e0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove child element as specified by name.  <a href="#ac679160f35df888455b8b72640e9d5e0">More...</a><br/></td></tr>
<tr class="separator:ac679160f35df888455b8b72640e9d5e0 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8a54e421843e865e7171d48f78be969 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ae8a54e421843e865e7171d48f78be969">SetName</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *rhs)</td></tr>
<tr class="memdesc:ae8a54e421843e865e7171d48f78be969 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the name of .  <a href="#ae8a54e421843e865e7171d48f78be969">More...</a><br/></td></tr>
<tr class="separator:ae8a54e421843e865e7171d48f78be969 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e1c7c943cb272c5bd2308598e29968e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a5e1c7c943cb272c5bd2308598e29968e">SetName</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;rhs)</td></tr>
<tr class="memdesc:a5e1c7c943cb272c5bd2308598e29968e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the name of this object.  <a href="#a5e1c7c943cb272c5bd2308598e29968e">More...</a><br/></td></tr>
<tr class="separator:a5e1c7c943cb272c5bd2308598e29968e inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8bad1055873931e97cd12b044e838b4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aa8bad1055873931e97cd12b044e838b4">SetValue</a> (const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *rhs)</td></tr>
<tr class="memdesc:aa8bad1055873931e97cd12b044e838b4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the value of this.  <a href="#aa8bad1055873931e97cd12b044e838b4">More...</a><br/></td></tr>
<tr class="separator:aa8bad1055873931e97cd12b044e838b4 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60c011dca7c524ff915d1aa8a048a577 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a60c011dca7c524ff915d1aa8a048a577">Traverse</a> (<a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml">TreeWalker</a> &amp;walker)</td></tr>
<tr class="memdesc:a60c011dca7c524ff915d1aa8a048a577 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Perform sophisticated (or whatever) algorithms on this and all descendant Nodes in the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tree.  <a href="#a60c011dca7c524ff915d1aa8a048a577">More...</a><br/></td></tr>
<tr class="separator:a60c011dca7c524ff915d1aa8a048a577 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0337fae875c80702cc9a1540e84b07a8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a79dc84831ed2506631fb4adeb899564a">NodeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a0337fae875c80702cc9a1540e84b07a8">Type</a> () const </td></tr>
<tr class="memdesc:a0337fae875c80702cc9a1540e84b07a8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Identify what kind of <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> this is.  <a href="#a0337fae875c80702cc9a1540e84b07a8">More...</a><br/></td></tr>
<tr class="separator:a0337fae875c80702cc9a1540e84b07a8 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a7b598d8cfe9ceed1e23ec6832d6685 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a8a7b598d8cfe9ceed1e23ec6832d6685">Value</a> () const </td></tr>
<tr class="memdesc:a8a7b598d8cfe9ceed1e23ec6832d6685 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Value of this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>.  <a href="#a8a7b598d8cfe9ceed1e23ec6832d6685">More...</a><br/></td></tr>
<tr class="separator:a8a7b598d8cfe9ceed1e23ec6832d6685 inherit pub_methods_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1XML_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1XML_1_1Node')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Mezzanine::XML::Node</a></td></tr>
<tr class="memitem:a25bf6994d599bfa0e3f25b7215b78d4f inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a25bf6994d599bfa0e3f25b7215b78d4f"></a>
typedef <a class="el" href="classMezzanine_1_1XML_1_1AttributeIterator.xhtml">AttributeIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a25bf6994d599bfa0e3f25b7215b78d4f">attribute_iterator</a></td></tr>
<tr class="memdesc:a25bf6994d599bfa0e3f25b7215b78d4f inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">An iterator for <a class="el" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Attribute</a> members on this <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>. <br/></td></tr>
<tr class="separator:a25bf6994d599bfa0e3f25b7215b78d4f inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe6bd18eaf3ccafadaf851b0247019f3 inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afe6bd18eaf3ccafadaf851b0247019f3"></a>
typedef <a class="el" href="classMezzanine_1_1XML_1_1NodeIterator.xhtml">NodeIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#afe6bd18eaf3ccafadaf851b0247019f3">iterator</a></td></tr>
<tr class="memdesc:afe6bd18eaf3ccafadaf851b0247019f3 inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">An iterator for child Nodes that will be easier for members of the std namespace to work with. <br/></td></tr>
<tr class="separator:afe6bd18eaf3ccafadaf851b0247019f3 inherit pub_types_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classMezzanine_1_1XML_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classMezzanine_1_1XML_1_1Node')"><img src="closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Mezzanine::XML::Node</a></td></tr>
<tr class="memitem:ab27e92b7cbb929588c815d054861664d inherit pro_types_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ab27e92b7cbb929588c815d054861664d">unspecified_bool_type</a> )(<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> ***)</td></tr>
<tr class="memdesc:ab27e92b7cbb929588c815d054861664d inherit pro_types_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used to prevent casting to numerical types acccidentally.  <a href="#ab27e92b7cbb929588c815d054861664d">More...</a><br/></td></tr>
<tr class="separator:ab27e92b7cbb929588c815d054861664d inherit pro_types_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1XML_1_1Node"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1XML_1_1Node')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Mezzanine::XML::Node</a></td></tr>
<tr class="memitem:a276b332ae667f3d7a5125e64e3a31a5b inherit pro_attribs_classMezzanine_1_1XML_1_1Node"><td class="memItemLeft" align="right" valign="top">NodeStruct *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a276b332ae667f3d7a5125e64e3a31a5b">NodeData</a></td></tr>
<tr class="memdesc:a276b332ae667f3d7a5125e64e3a31a5b inherit pro_attribs_classMezzanine_1_1XML_1_1Node"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores pointers to the <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> data and some metadata.  <a href="#a276b332ae667f3d7a5125e64e3a31a5b">More...</a><br/></td></tr>
<tr class="separator:a276b332ae667f3d7a5125e64e3a31a5b inherit pro_attribs_classMezzanine_1_1XML_1_1Node"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The root node of any xml hierarchy is a <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml">Document</a>. </p>
<p>This has all the same features as a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> and include a few features for saving, loading, streaming and to a limited degree managing the document declaration. </p>

<p>Definition at line <a class="el" href="document_8h_source.xhtml#l00083">83</a> of file <a class="el" href="document_8h_source.xhtml">document.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aac1611207ee9ef11a80bc1796020cf4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> Mezzanine::XML::Document::DocumentElement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get document element. </p>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> that is the root element of the xml <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document.">Document</a> </dd></dl>

</div>
</div>
<a class="anchor" id="afb9abd5b77651735b1380f6bd5934837"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::Load </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Resource::DataStream</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load a document from a data stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The stream to load from. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it provides </dd></dl>

</div>
</div>
<a class="anchor" id="a319fa46ad3580c3643bb1678e51c1721"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::Load </td>
          <td>(</td>
          <td class="paramtype">std::basic_istream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> from a stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>An std::istream which has xml text in it. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="aef1bc969024acf12bcf722e46f9f9527"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::Load </td>
          <td>(</td>
          <td class="paramtype">std::basic_istream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> from a wide stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>An std::basic_istream which has xml wide character text in it. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="a160b482e13a3eedd89e377c1aca17fa7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::Load </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>contents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> from a C-style string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contents</td><td>A pointer to the Null terminated array of Characters. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>The only Load method available in the 'Safe' scripting languages. </dd></dl>

</div>
</div>
<a class="anchor" id="a98977b675efa58d56c224f6256800127"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadBuffer </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>contents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from buffer. Copies/converts the buffer, so it may be deleted or changed after the function returns. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contents</td><td>A pointer to buffer containing the xml document to be parsed, that will remain unchanged. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the buffer. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>All buffer loading Methods of the <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document.">XML::Document</a> are made available to all scripting languages libraries. </dd></dl>

</div>
</div>
<a class="anchor" id="a8be0ede460622c63de94b734bc258ab6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadBufferInplace </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>contents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data). </p>
<p>You should ensure that buffer data will persist throughout the documents lifetime, and free the buffer memory manually once document is destroyed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contents</td><td>A pointer to buffer containing the xml document to be parsed, that must remain for the lifecycle of the <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document.">XML::Document</a>. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the buffer. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>All buffer loading Methods of the <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document.">XML::Document</a> are made available to all scripting languages libraries. </dd></dl>

</div>
</div>
<a class="anchor" id="a30fdca5c7cacb1cceff28e03f5b27850"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadBufferInplaceOwn </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>contents</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from buffer, using the buffer for in-place parsing (the buffer is modified and used for storage of document data). </p>
<p>You should allocate the buffer with pugixml allocation function; <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document.">XML::Document</a> will free the buffer when it is no longer needed (you can not use it anymore). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">contents</td><td>A pointer to buffer containing the xml document to be parsed. </td></tr>
    <tr><td class="paramname">size</td><td>The size of the buffer. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>All buffer loading Methods of the <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document.">XML::Document</a> are made available to all scripting languages libraries. </dd></dl>

</div>
</div>
<a class="anchor" id="a89365dd7aa1cd2e25ebd72ceae8cad90"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Path</td><td>An c-style char array that contains the path and filename of the xml document to load. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="a66fe56a796539d5eb3576d058072c2eb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml">ParseResult</a> Mezzanine::XML::Document::LoadFile </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *&#160;</td>
          <td class="paramname"><em>Path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a01d29dc9a004027ae57e863313c23c21">ParseDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load document from file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Path</td><td>An c-style wide char array that contains the path and filename of the xml document to load. </td></tr>
    <tr><td class="paramname">options</td><td>A bitset of parse options that should be set using the Parse variables. This Defaults to ParseDefault. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structMezzanine_1_1XML_1_1ParseResult.xhtml" title="Troubleshooting data intended to help troublshoot XML parsing errors.">ParseResult</a> that stores the the outcome of attempting to load the document. </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="ace372361f107a7422b97fe26b1002074"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::XML::Document::Reset </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml">Document</a> &amp;&#160;</td>
          <td class="paramname"><em>proto</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes all nodes, then copies the entire contents of the specified document. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">proto</td><td>The <a class="el" href="classMezzanine_1_1XML_1_1Document.xhtml" title="The root node of any xml hierarchy is a Document.">Document</a> to copy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a877e44869d67a6ea736c82bb8adbc0ad"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::XML::Document::Save </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Resource_1_1DataStream.xhtml">Resource::DataStream</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to a stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The stream to save this document to. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc" title="The default set of formatting flags. Only FormatRaw is enabled.">XML::FormatDefault</a>. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="aebf22bbc54f2e69bcf19c7f2f9978ade"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::XML::Document::Save </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml">Writer</a> &amp;&#160;</td>
          <td class="paramname"><em>WriterInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to WriterInstance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">WriterInstance</td><td>The <a class="el" href="classMezzanine_1_1XML_1_1Writer.xhtml" title="Interface for node printing (see Node::Print)">Writer</a> that will be used to output the xml text. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc" title="The default set of formatting flags. Only FormatRaw is enabled.">XML::FormatDefault</a>. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="a884b9b13900807915db66a7caf7e42d4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::XML::Document::Save </td>
          <td>(</td>
          <td class="paramtype">std::basic_ostream&lt; char, std::char_traits&lt; char &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to a stream of characters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The output stream of wide characters to send the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc" title="The default set of formatting flags. Only FormatRaw is enabled.">XML::FormatDefault</a>. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>The Type of encoding to use when saving the document. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="a086b685984950c88316c549acbf77ec9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::XML::Document::Save </td>
          <td>(</td>
          <td class="paramtype">std::basic_ostream&lt; wchar_t, std::char_traits&lt; wchar_t &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to a stream of wide characters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>The output stream of wide characters to send the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> document to. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc" title="The default set of formatting flags. Only FormatRaw is enabled.">XML::FormatDefault</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="a42feffdea66cc25d48fbc81eff21268e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::XML::Document::SaveFile </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> to file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Path</td><td>A c-style array of chars that contain the filename (and any path) of the file to be output. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc" title="The default set of formatting flags. Only FormatRaw is enabled.">XML::FormatDefault</a>. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>False if the target file could not be opened for writing </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<a class="anchor" id="ac2d3b702a673110ec67ec7740f8b467b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::XML::Document::SaveFile </td>
          <td>(</td>
          <td class="paramtype">const wchar_t *&#160;</td>
          <td class="paramname"><em>Path</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>indent</em> = <code>&quot;\t&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>flags</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc">FormatDefault</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057">Encoding</a>&#160;</td>
          <td class="paramname"><em>DocumentEncoding</em> = <code><a class="el" href="namespaceMezzanine_1_1XML.xhtml#a77aa299731a2a63d9bab92cf6f03b057aae3f2f76c60cf95820362667965d1990">EncodingAuto</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> to file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Path</td><td>A c-style array of wide chars that contain the filename (and any path) of the file to be output. </td></tr>
    <tr><td class="paramname">indent</td><td>The Character(s) used to represent a tab in the output, this defaults to one tab character. </td></tr>
    <tr><td class="paramname">flags</td><td>The output format flags, this is a bitfield that defaults to <a class="el" href="namespaceMezzanine_1_1XML.xhtml#a9a9b9245ea32348c78817d002ecd61fc" title="The default set of formatting flags. Only FormatRaw is enabled.">XML::FormatDefault</a>. </td></tr>
    <tr><td class="paramname">DocumentEncoding</td><td>What kind of text is in the stream, this defaults to Encoding::EncodingAuto. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>False if the target file could not be opened for writing </dd></dl>
<dl class="section note"><dt>Note</dt><dd>Not available in the 'Safe' scripting languages because of the file access it could provide. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/XML/<a class="el" href="document_8h_source.xhtml">document.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 14 2013 01:15:25 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
