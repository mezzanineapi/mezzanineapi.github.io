<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Camera Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September 2, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Camera.xhtml">Camera</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1Camera-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Camera Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the camera class.  
 <a href="classMezzanine_1_1Camera.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="camera_8h_source.xhtml">camera.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Camera:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Camera__inherit__graph.svg" width="208" height="195"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Camera:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Camera__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a643bf90630796bca5353967664d5f6e3"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3">ProjectionType</a> { <a class="el" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3a5bf29bb9ff44080ae6cbfa3e2aeb467c">Orthographic</a> = 0, 
<a class="el" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3a616794ef1e113f63b1b9bf6896c61eba">Perspective</a> = 1
 }</td></tr>
<tr class="memdesc:a643bf90630796bca5353967664d5f6e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Values for storing how perspective should be interpretted.  <a href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3">More...</a><br/></td></tr>
<tr class="separator:a643bf90630796bca5353967664d5f6e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a172e91734ebe0cb5d8332ef00606526e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a172e91734ebe0cb5d8332ef00606526e">Camera</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, <a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a> *Manager)</td></tr>
<tr class="memdesc:a172e91734ebe0cb5d8332ef00606526e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> Constructor.  <a href="#a172e91734ebe0cb5d8332ef00606526e">More...</a><br/></td></tr>
<tr class="separator:a172e91734ebe0cb5d8332ef00606526e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa20f07494ece246945eb3cb05f549f82"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#aa20f07494ece246945eb3cb05f549f82">Camera</a> (Ogre::Camera *<a class="el" href="classMezzanine_1_1Camera.xhtml">Camera</a>, <a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a> *Manager)</td></tr>
<tr class="memdesc:aa20f07494ece246945eb3cb05f549f82"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespaceOgre.xhtml">Ogre</a> Cam Constructor.  <a href="#aa20f07494ece246945eb3cb05f549f82">More...</a><br/></td></tr>
<tr class="separator:aa20f07494ece246945eb3cb05f549f82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab25144933c625492a059e57401387c40"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#ab25144933c625492a059e57401387c40">~Camera</a> ()</td></tr>
<tr class="memdesc:ab25144933c625492a059e57401387c40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor.  <a href="#ab25144933c625492a059e57401387c40">More...</a><br/></td></tr>
<tr class="separator:ab25144933c625492a059e57401387c40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab104d907a3f12d7ff470dce48e9690d0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#ab104d907a3f12d7ff470dce48e9690d0">GetCameraManager</a> () const </td></tr>
<tr class="memdesc:ab104d907a3f12d7ff470dce48e9690d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the manager this camera belongs to.  <a href="#ab104d907a3f12d7ff470dce48e9690d0">More...</a><br/></td></tr>
<tr class="separator:ab104d907a3f12d7ff470dce48e9690d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fce77c8b2a0901dc1d22541b98b9437"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Ray.xhtml">Ray</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a4fce77c8b2a0901dc1d22541b98b9437">GetCameraToViewportRay</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;ScreenX, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;ScreenY) const </td></tr>
<tr class="memdesc:a4fce77c8b2a0901dc1d22541b98b9437"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a <a class="el" href="classMezzanine_1_1Ray.xhtml" title="This is used to indicate a line with one end.">Ray</a> from the camera to the viewport.  <a href="#a4fce77c8b2a0901dc1d22541b98b9437">More...</a><br/></td></tr>
<tr class="separator:a4fce77c8b2a0901dc1d22541b98b9437"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef2f7b71aedee46bacc1341c02a813a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3">Camera::ProjectionType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#aef2f7b71aedee46bacc1341c02a813a2">GetCameraType</a> () const </td></tr>
<tr class="memdesc:aef2f7b71aedee46bacc1341c02a813a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the type of projection used by the camera.  <a href="#aef2f7b71aedee46bacc1341c02a813a2">More...</a><br/></td></tr>
<tr class="separator:aef2f7b71aedee46bacc1341c02a813a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b23b180e30225bc6e1b90a2d270771e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a1b23b180e30225bc6e1b90a2d270771e">GetDirection</a> () const </td></tr>
<tr class="memdesc:a1b23b180e30225bc6e1b90a2d270771e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the direction the camera is currently facing.  <a href="#a1b23b180e30225bc6e1b90a2d270771e">More...</a><br/></td></tr>
<tr class="separator:a1b23b180e30225bc6e1b90a2d270771e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7a94974ef5ff6caff66da3a9f71b579"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#af7a94974ef5ff6caff66da3a9f71b579">GetFixedYawAxis</a> () const </td></tr>
<tr class="memdesc:af7a94974ef5ff6caff66da3a9f71b579"><td class="mdescLeft">&#160;</td><td class="mdescRight">If fixed yaw is enabled, on which axis is yawing disabled.  <a href="#af7a94974ef5ff6caff66da3a9f71b579">More...</a><br/></td></tr>
<tr class="separator:af7a94974ef5ff6caff66da3a9f71b579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb87a19855c4cd5361861e1e400d5481"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#afb87a19855c4cd5361861e1e400d5481">GetLocation</a> () const </td></tr>
<tr class="memdesc:afb87a19855c4cd5361861e1e400d5481"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the relative location of the camera.  <a href="#afb87a19855c4cd5361861e1e400d5481">More...</a><br/></td></tr>
<tr class="separator:afb87a19855c4cd5361861e1e400d5481"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf6e3c2e642753023acd91f6d1413455"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#abf6e3c2e642753023acd91f6d1413455">GetName</a> () const </td></tr>
<tr class="memdesc:abf6e3c2e642753023acd91f6d1413455"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the camera's set name.  <a href="#abf6e3c2e642753023acd91f6d1413455">More...</a><br/></td></tr>
<tr class="separator:abf6e3c2e642753023acd91f6d1413455"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7985618c8f908a6cc93069ccb51bb47"><td class="memItemLeft" align="right" valign="top">Ogre::Camera *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#ac7985618c8f908a6cc93069ccb51bb47">GetOgreCamera</a> () const </td></tr>
<tr class="memdesc:ac7985618c8f908a6cc93069ccb51bb47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the internal camera this camera is based on.  <a href="#ac7985618c8f908a6cc93069ccb51bb47">More...</a><br/></td></tr>
<tr class="separator:ac7985618c8f908a6cc93069ccb51bb47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af693fe97c4f281940a33dc8087a80fcb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#af693fe97c4f281940a33dc8087a80fcb">GetOrientation</a> () const </td></tr>
<tr class="memdesc:af693fe97c4f281940a33dc8087a80fcb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the direction the camera is facing.  <a href="#af693fe97c4f281940a33dc8087a80fcb">More...</a><br/></td></tr>
<tr class="separator:af693fe97c4f281940a33dc8087a80fcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a026f364d2eb9a13d216cd9d6c600db17"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a026f364d2eb9a13d216cd9d6c600db17">GetScaling</a> () const </td></tr>
<tr class="memdesc:a026f364d2eb9a13d216cd9d6c600db17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object.  <a href="#a026f364d2eb9a13d216cd9d6c600db17">More...</a><br/></td></tr>
<tr class="separator:a026f364d2eb9a13d216cd9d6c600db17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c00772101a06add4b3dde9e3bc9f8aa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a1c00772101a06add4b3dde9e3bc9f8aa">GetType</a> () const </td></tr>
<tr class="memdesc:a1c00772101a06add4b3dde9e3bc9f8aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> or Scene object this attachable is.  <a href="#a1c00772101a06add4b3dde9e3bc9f8aa">More...</a><br/></td></tr>
<tr class="separator:a1c00772101a06add4b3dde9e3bc9f8aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fc6ebb66171d0c6fc407deca5c7a003"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a3fc6ebb66171d0c6fc407deca5c7a003">GetViewport</a> () const </td></tr>
<tr class="memdesc:a3fc6ebb66171d0c6fc407deca5c7a003"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Viewport this camera is attached to, if any.  <a href="#a3fc6ebb66171d0c6fc407deca5c7a003">More...</a><br/></td></tr>
<tr class="separator:a3fc6ebb66171d0c6fc407deca5c7a003"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfe5be54632aeedb9656c850f3f03ae5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#adfe5be54632aeedb9656c850f3f03ae5">IsFixedYawEnabled</a> () const </td></tr>
<tr class="memdesc:adfe5be54632aeedb9656c850f3f03ae5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is fixed yaw enabled.  <a href="#adfe5be54632aeedb9656c850f3f03ae5">More...</a><br/></td></tr>
<tr class="separator:adfe5be54632aeedb9656c850f3f03ae5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8343f2d2fb174937aef2894ebf8a5e29"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a8343f2d2fb174937aef2894ebf8a5e29">LookAt</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;TargetLoc)</td></tr>
<tr class="memdesc:a8343f2d2fb174937aef2894ebf8a5e29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the direction the camera faces.  <a href="#a8343f2d2fb174937aef2894ebf8a5e29">More...</a><br/></td></tr>
<tr class="separator:a8343f2d2fb174937aef2894ebf8a5e29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdc17999a097218df445370123d41239"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#afdc17999a097218df445370123d41239">Move</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;ToMove)</td></tr>
<tr class="memdesc:afdc17999a097218df445370123d41239"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the camera without factoring orientation.  <a href="#afdc17999a097218df445370123d41239">More...</a><br/></td></tr>
<tr class="separator:afdc17999a097218df445370123d41239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8f450698006baf6e8fca2a864d59533"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#ac8f450698006baf6e8fca2a864d59533">MoveRelative</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;ToMove)</td></tr>
<tr class="memdesc:ac8f450698006baf6e8fca2a864d59533"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the camera while factoring orientation.  <a href="#ac8f450698006baf6e8fca2a864d59533">More...</a><br/></td></tr>
<tr class="separator:ac8f450698006baf6e8fca2a864d59533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab619a29b83487e8f86c8adb443689078"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#ab619a29b83487e8f86c8adb443689078">SetAspectRatio</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Ratio)</td></tr>
<tr class="memdesc:ab619a29b83487e8f86c8adb443689078"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the aspect ratio of the cameras veiw.  <a href="#ab619a29b83487e8f86c8adb443689078">More...</a><br/></td></tr>
<tr class="separator:ab619a29b83487e8f86c8adb443689078"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a860c5efaa583795ff2f31e3670739e58"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a860c5efaa583795ff2f31e3670739e58">SetCameraType</a> (const <a class="el" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3">ProjectionType</a> &amp;Type)</td></tr>
<tr class="memdesc:a860c5efaa583795ff2f31e3670739e58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the type of projection to be used with this camera.  <a href="#a860c5efaa583795ff2f31e3670739e58">More...</a><br/></td></tr>
<tr class="separator:a860c5efaa583795ff2f31e3670739e58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3adfffaec91715cbf120bbbbc50f82db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a3adfffaec91715cbf120bbbbc50f82db">SetDirection</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Direction)</td></tr>
<tr class="memdesc:a3adfffaec91715cbf120bbbbc50f82db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Direction for the camera.  <a href="#a3adfffaec91715cbf120bbbbc50f82db">More...</a><br/></td></tr>
<tr class="separator:a3adfffaec91715cbf120bbbbc50f82db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af24424a1670ae6b10e9a61fbaf9fd23a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#af24424a1670ae6b10e9a61fbaf9fd23a">SetFarClipDistance</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;FarDist)</td></tr>
<tr class="memdesc:af24424a1670ae6b10e9a61fbaf9fd23a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the long range clip distance.  <a href="#af24424a1670ae6b10e9a61fbaf9fd23a">More...</a><br/></td></tr>
<tr class="separator:af24424a1670ae6b10e9a61fbaf9fd23a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ffb9eca37630a8d26669aab8668bce3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a2ffb9eca37630a8d26669aab8668bce3">SetFixedYawAxis</a> (bool UseFixed, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Axis)</td></tr>
<tr class="memdesc:a2ffb9eca37630a8d26669aab8668bce3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether to lock rotation around the Y axis.  <a href="#a2ffb9eca37630a8d26669aab8668bce3">More...</a><br/></td></tr>
<tr class="separator:a2ffb9eca37630a8d26669aab8668bce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd19c7667593b8ea0bff576ae3a451ba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#abd19c7667593b8ea0bff576ae3a451ba">SetFixedYawAxis</a> (bool UseFixed)</td></tr>
<tr class="memdesc:abd19c7667593b8ea0bff576ae3a451ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether to lock rotation around the Y axis.  <a href="#abd19c7667593b8ea0bff576ae3a451ba">More...</a><br/></td></tr>
<tr class="separator:abd19c7667593b8ea0bff576ae3a451ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae62b56649606677f9922eeea658bdd2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#ae62b56649606677f9922eeea658bdd2f">SetLocalLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:ae62b56649606677f9922eeea658bdd2f"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#ae62b56649606677f9922eeea658bdd2f">More...</a><br/></td></tr>
<tr class="separator:ae62b56649606677f9922eeea658bdd2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8857075c6bc9e4d40075652778aa14c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a8857075c6bc9e4d40075652778aa14c2">SetLocalOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation)</td></tr>
<tr class="memdesc:a8857075c6bc9e4d40075652778aa14c2"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a8857075c6bc9e4d40075652778aa14c2">More...</a><br/></td></tr>
<tr class="separator:a8857075c6bc9e4d40075652778aa14c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdc236c2c875035c8a11473350d0d17a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#afdc236c2c875035c8a11473350d0d17a">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:afdc236c2c875035c8a11473350d0d17a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location of a camera.  <a href="#afdc236c2c875035c8a11473350d0d17a">More...</a><br/></td></tr>
<tr class="separator:afdc236c2c875035c8a11473350d0d17a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a638201c94b28ca0acc406b11f166e751"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a638201c94b28ca0acc406b11f166e751">SetNearClipDistance</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;NearDist)</td></tr>
<tr class="memdesc:a638201c94b28ca0acc406b11f166e751"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the short range clip distance.  <a href="#a638201c94b28ca0acc406b11f166e751">More...</a><br/></td></tr>
<tr class="separator:a638201c94b28ca0acc406b11f166e751"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af502b9c47b1acce46e1482ce049320eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#af502b9c47b1acce46e1482ce049320eb">SetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation)</td></tr>
<tr class="memdesc:af502b9c47b1acce46e1482ce049320eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of the camera.  <a href="#af502b9c47b1acce46e1482ce049320eb">More...</a><br/></td></tr>
<tr class="separator:af502b9c47b1acce46e1482ce049320eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2beffe698c8952407f94683adea2fa24"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a2beffe698c8952407f94683adea2fa24">SetOrthoWindow</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Width, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Height)</td></tr>
<tr class="memdesc:a2beffe698c8952407f94683adea2fa24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the size of the Orthographic projection window.  <a href="#a2beffe698c8952407f94683adea2fa24">More...</a><br/></td></tr>
<tr class="separator:a2beffe698c8952407f94683adea2fa24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e99427ba89306e3c7e6a0d5ccb23482"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a7e99427ba89306e3c7e6a0d5ccb23482">SetOrthoWindowHeight</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Height)</td></tr>
<tr class="memdesc:a7e99427ba89306e3c7e6a0d5ccb23482"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the size of the Orthographic projection window.  <a href="#a7e99427ba89306e3c7e6a0d5ccb23482">More...</a><br/></td></tr>
<tr class="separator:a7e99427ba89306e3c7e6a0d5ccb23482"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58279b526f2a386bfa0327a9084d24e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a58279b526f2a386bfa0327a9084d24e4">SetOrthoWindowWidth</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Width)</td></tr>
<tr class="memdesc:a58279b526f2a386bfa0327a9084d24e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the size of the Orthographic projection window.  <a href="#a58279b526f2a386bfa0327a9084d24e4">More...</a><br/></td></tr>
<tr class="separator:a58279b526f2a386bfa0327a9084d24e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad49a68805d03d18d7ca42c9fbc54db2b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#ad49a68805d03d18d7ca42c9fbc54db2b">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)</td></tr>
<tr class="memdesc:ad49a68805d03d18d7ca42c9fbc54db2b"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#ad49a68805d03d18d7ca42c9fbc54db2b">More...</a><br/></td></tr>
<tr class="separator:ad49a68805d03d18d7ca42c9fbc54db2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableChild"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableChild')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">Mezzanine::AttachableChild</a></td></tr>
<tr class="memitem:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa1baf517c478f03c0116ccf6df62f750"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#aa1baf517c478f03c0116ccf6df62f750">AttachableChild</a> ()</td></tr>
<tr class="memdesc:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7413197e41b31ae33df5ff02317548c0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7413197e41b31ae33df5ff02317548c0"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a7413197e41b31ae33df5ff02317548c0">~AttachableChild</a> ()</td></tr>
<tr class="memdesc:a7413197e41b31ae33df5ff02317548c0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a7413197e41b31ae33df5ff02317548c0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#ad34350de631e502a8bc3d4ce25fff4f6">_RecalculateGlobalTransform</a> (bool FromParent=false)</td></tr>
<tr class="memdesc:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates objects global transform from parent.  <a href="#ad34350de631e502a8bc3d4ce25fff4f6">More...</a><br/></td></tr>
<tr class="separator:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a500d824fc29de69ac05ffcdbdaf67e9e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a500d824fc29de69ac05ffcdbdaf67e9e">_RecalculateLocalTransform</a> ()</td></tr>
<tr class="memdesc:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates this objects local transform based on it's current global position. <br/></td></tr>
<tr class="separator:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a59bbbc115c028f87db652f32d252ee61">GetLocalLocation</a> () const </td></tr>
<tr class="memdesc:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Location of this object in local space.  <a href="#a59bbbc115c028f87db652f32d252ee61">More...</a><br/></td></tr>
<tr class="separator:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a81104f92420f9558b39144cce4eb7cd0">GetLocalOrientation</a> () const </td></tr>
<tr class="memdesc:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the orientation of this object in local space.  <a href="#a81104f92420f9558b39144cce4eb7cd0">More...</a><br/></td></tr>
<tr class="separator:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16e42db1e1a69f5ca41d412fcc3a5aeb inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml">AttachableParent</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a16e42db1e1a69f5ca41d412fcc3a5aeb">GetParent</a> () const </td></tr>
<tr class="memdesc:a16e42db1e1a69f5ca41d412fcc3a5aeb inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the parent of this child.  <a href="#a16e42db1e1a69f5ca41d412fcc3a5aeb">More...</a><br/></td></tr>
<tr class="separator:a16e42db1e1a69f5ca41d412fcc3a5aeb inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a72bee4c7d028162ececabf6010f9015d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a72bee4c7d028162ececabf6010f9015d">AttachableBase</a> ()</td></tr>
<tr class="memdesc:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaae9b3fa22b54bafefe5f994ed6eae93 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaae9b3fa22b54bafefe5f994ed6eae93"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#aaae9b3fa22b54bafefe5f994ed6eae93">~AttachableBase</a> ()</td></tr>
<tr class="memdesc:aaae9b3fa22b54bafefe5f994ed6eae93 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:aaae9b3fa22b54bafefe5f994ed6eae93 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a33eb528b2e924ef70a9bab7fd79c70d0">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in global space to the same point in local space.  <a href="#a33eb528b2e924ef70a9bab7fd79c70d0">More...</a><br/></td></tr>
<tr class="separator:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a39338b566a38828b8c9b1ddf3e2c865e">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in global space to the same rotation in local space.  <a href="#a39338b566a38828b8c9b1ddf3e2c865e">More...</a><br/></td></tr>
<tr class="separator:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#ab8a5b6e1379ff5cedb5758c4aafe61ed">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in local space to the same point in global space.  <a href="#ab8a5b6e1379ff5cedb5758c4aafe61ed">More...</a><br/></td></tr>
<tr class="separator:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a709ad287377d07a576ebaca995392e15">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in local space to the same rotation in global space.  <a href="#a709ad287377d07a576ebaca995392e15">More...</a><br/></td></tr>
<tr class="separator:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a992cc6bb14cd49e4030118dbb4b8e1ed"><td class="memItemLeft" align="right" valign="top">Ogre::Camera *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed">Cam</a></td></tr>
<tr class="memdesc:a992cc6bb14cd49e4030118dbb4b8e1ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is the <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> used by the graphics Subsystem, that this class wraps.  <a href="#a992cc6bb14cd49e4030118dbb4b8e1ed">More...</a><br/></td></tr>
<tr class="separator:a992cc6bb14cd49e4030118dbb4b8e1ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaad20a839ea4b299903bfd0356436064"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#aaad20a839ea4b299903bfd0356436064">CameraVP</a></td></tr>
<tr class="memdesc:aaad20a839ea4b299903bfd0356436064"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is a pointer to the Viewport this camera is attached to, if any.  <a href="#aaad20a839ea4b299903bfd0356436064">More...</a><br/></td></tr>
<tr class="separator:aaad20a839ea4b299903bfd0356436064"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8491540c829acc1bebbed24c9de0dfaf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#a8491540c829acc1bebbed24c9de0dfaf">CamManager</a></td></tr>
<tr class="memdesc:a8491540c829acc1bebbed24c9de0dfaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is the <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> manager that this camera is attached to.  <a href="#a8491540c829acc1bebbed24c9de0dfaf">More...</a><br/></td></tr>
<tr class="separator:a8491540c829acc1bebbed24c9de0dfaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableChild"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableChild')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">Mezzanine::AttachableChild</a></td></tr>
<tr class="memitem:a6940c66cc4725deb27024ddd6c5459b8 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6940c66cc4725deb27024ddd6c5459b8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>GlobalTransformDirty</b></td></tr>
<tr class="separator:a6940c66cc4725deb27024ddd6c5459b8 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a142c9f848101dec654f8eeca88e689b5 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a142c9f848101dec654f8eeca88e689b5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>LocalTransformDirty</b></td></tr>
<tr class="separator:a142c9f848101dec654f8eeca88e689b5 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc604405ff0ac70699a0286b5e4869b9 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc604405ff0ac70699a0286b5e4869b9"></a>
<a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><b>LocalXform</b></td></tr>
<tr class="separator:adc604405ff0ac70699a0286b5e4869b9 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdd3042178a3bdc83c483b55498ae76e inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acdd3042178a3bdc83c483b55498ae76e"></a>
<a class="el" href="classMezzanine_1_1AttachableParent.xhtml">AttachableParent</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Parent</b></td></tr>
<tr class="separator:acdd3042178a3bdc83c483b55498ae76e inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:ab1042d571c1a40f0ab79e33206ab9761 inherit pro_attribs_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab1042d571c1a40f0ab79e33206ab9761"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Updating</b></td></tr>
<tr class="separator:ab1042d571c1a40f0ab79e33206ab9761 inherit pro_attribs_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:afae5bf9a900e8c5bc70c9332785e8465"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afae5bf9a900e8c5bc70c9332785e8465"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>CameraManager</b></td></tr>
<tr class="separator:afae5bf9a900e8c5bc70c9332785e8465"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a411d41f45f19c256d4fd1033dd0b47e9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a411d41f45f19c256d4fd1033dd0b47e9"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>Graphics::Viewport</b></td></tr>
<tr class="separator:a411d41f45f19c256d4fd1033dd0b47e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac29d523547291c3fe92a2685f8c8d0ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Camera.xhtml#ac29d523547291c3fe92a2685f8c8d0ba">operator&gt;&gt;</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode, <a class="el" href="classMezzanine_1_1Camera.xhtml">Camera</a> &amp;Ev)</td></tr>
<tr class="separator:ac29d523547291c3fe92a2685f8c8d0ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:a0d62e3708056e62911d6ec7c6beb3a97 inherit pro_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a0d62e3708056e62911d6ec7c6beb3a97">GetUpdating</a> (<a class="el" href="classMezzanine_1_1AttachableBase.xhtml">AttachableBase</a> *AB) const </td></tr>
<tr class="memdesc:a0d62e3708056e62911d6ec7c6beb3a97 inherit pro_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the update status of another attachable.  <a href="#a0d62e3708056e62911d6ec7c6beb3a97">More...</a><br/></td></tr>
<tr class="separator:a0d62e3708056e62911d6ec7c6beb3a97 inherit pro_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is the camera class. </p>
<p>This class contains all the functionality needed to manipulate an individual camera that has been created. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000006">Todo:</a></b></dt><dd>Fix all the extra occurences of the word <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> in Function names on the camera. </dd></dl>

<p>Definition at line <a class="el" href="camera_8h_source.xhtml#l00104">104</a> of file <a class="el" href="camera_8h_source.xhtml">camera.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a643bf90630796bca5353967664d5f6e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3">Mezzanine::Camera::ProjectionType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Values for storing how perspective should be interpretted. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><em><a class="anchor" id="a643bf90630796bca5353967664d5f6e3a5bf29bb9ff44080ae6cbfa3e2aeb467c"></a>Orthographic</em>&nbsp;</td><td class="fielddoc">
<p>Not at all, objects at any distance are the same size. </p>
</td></tr>
<tr><td class="fieldname"><em><a class="anchor" id="a643bf90630796bca5353967664d5f6e3a616794ef1e113f63b1b9bf6896c61eba"></a>Perspective</em>&nbsp;</td><td class="fielddoc">
<p>Normal perspective. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="camera_8h_source.xhtml#l00108">108</a> of file <a class="el" href="camera_8h_source.xhtml">camera.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a172e91734ebe0cb5d8332ef00606526e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Camera::Camera </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a> *&#160;</td>
          <td class="paramname"><em>Manager</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Basic <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> Constructor. </p>
<p>This is the basic constructor for the <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> class. </p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00062">62</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa20f07494ece246945eb3cb05f549f82"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Camera::Camera </td>
          <td>(</td>
          <td class="paramtype">Ogre::Camera *&#160;</td>
          <td class="paramname"><em>Camera</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a> *&#160;</td>
          <td class="paramname"><em>Manager</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="namespaceOgre.xhtml">Ogre</a> Cam Constructor. </p>
<p>This is for internal use only and shouldn't be called manually. </p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab25144933c625492a059e57401387c40"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Camera::~Camera </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Class Destructor. </p>
<p>The Class Destructor. </p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ab104d907a3f12d7ff470dce48e9690d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a> * Mezzanine::Camera::GetCameraManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the manager this camera belongs to. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a> that created this camera. </dd></dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00253">253</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4fce77c8b2a0901dc1d22541b98b9437"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Ray.xhtml">Ray</a> Mezzanine::Camera::GetCameraToViewportRay </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>ScreenX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>ScreenY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a <a class="el" href="classMezzanine_1_1Ray.xhtml" title="This is used to indicate a line with one end.">Ray</a> from the camera to the viewport. </p>
<p>This will cast a ray from the camera to the viewport and return it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ScreenX</td><td>A Real representing the relative location on screen, on the x axis(0.0-1.0). </td></tr>
    <tr><td class="paramname">ScreenY</td><td>A Real representing the relative location on screen, on the y axis(0.0-1.0). </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00244">244</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aef2f7b71aedee46bacc1341c02a813a2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3">Camera::ProjectionType</a> Mezzanine::Camera::GetCameraType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the type of projection used by the camera. </p>
<dl class="section return"><dt>Returns</dt><dd>A ProjectionType that will identify the kind of projection this camera uses. </dd></dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00112">112</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1b23b180e30225bc6e1b90a2d270771e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Camera::GetDirection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the direction the camera is currently facing. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the current direction the camera is facing. </dd></dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00173">173</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af7a94974ef5ff6caff66da3a9f71b579"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Camera::GetFixedYawAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If fixed yaw is enabled, on which axis is yawing disabled. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> of 0s if disable, otherwise this return the Fixed Yaw Axis. </dd></dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00224">224</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afb87a19855c4cd5361861e1e400d5481"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Camera::GetLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the relative location of the camera. </p>
<p>Gets the location of the camera, relative to any parent <a class="el" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Mezzanine::Vector3</a> with the location of the camera as though the Parent <a class="el" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a> were the origin. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a927f25cb0f2ba3afd289586e7ab0f4e8">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00150">150</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abf6e3c2e642753023acd91f6d1413455"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp; Mezzanine::Camera::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the camera's set name. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the camera's name. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a04b114eccfbf9092b84dfe24e81548b6">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac7985618c8f908a6cc93069ccb51bb47"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Ogre::Camera * Mezzanine::Camera::GetOgreCamera </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the internal camera this camera is based on. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="namespaceOgre.xhtml">Ogre</a> <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> this camera is based on. </dd></dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00295">295</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af693fe97c4f281940a33dc8087a80fcb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> Mezzanine::Camera::GetOrientation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the direction the camera is facing. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Mezzanine::Quaternion</a> representing how the camera is rotated. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#af18f7d1f20ee332facb314291673a313">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a026f364d2eb9a13d216cd9d6c600db17"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Camera::GetScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current scaling being applied to the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the scaling being applied on all axes of this <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a8e01242f06e5aabc3d53004325f1eeee">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00271">271</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1c00772101a06add4b3dde9e3bc9f8aa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a> Mezzanine::Camera::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> or Scene object this attachable is. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the type of <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> or Scene object this attachable is. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a42bb7c2cab933d28dea86d2ec2934c6a">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00261">261</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3fc6ebb66171d0c6fc407deca5c7a003"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> * Mezzanine::Camera::GetViewport </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the Viewport this camera is attached to, if any. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the Viewport this camera is rendering to, or NULL if not attached. </dd></dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adfe5be54632aeedb9656c850f3f03ae5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Camera::IsFixedYawEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is fixed yaw enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>True if it is enable, such as the default setting, or false if it is not enabled. </dd></dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00221">221</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8343f2d2fb174937aef2894ebf8a5e29"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::LookAt </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>TargetLoc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the direction the camera faces. </p>
<p>Sets the direction the camera faces. Will also take orientation into account. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">TargetLoc</td><td>The location in the game world to look at. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00193">193</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afdc17999a097218df445370123d41239"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::Move </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>ToMove</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Moves the camera without factoring orientation. </p>
<p>This function will move the camera along the provided vector based on world axes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToMove</td><td>The vector to move the camera by. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00198">198</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac8f450698006baf6e8fca2a864d59533"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::MoveRelative </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>ToMove</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Moves the camera while factoring orientation. </p>
<p>This function will move the camera along the provided vector based on local axes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToMove</td><td>The vector to move the camera by. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00203">203</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab619a29b83487e8f86c8adb443689078"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetAspectRatio </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Ratio</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the aspect ratio of the cameras veiw. </p>
<p>This function will set the aspect ratio between the width and height of the cameras viewing area. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Ratio</td><td>A Real that represents the aspect ratio, where Ratio = width / height. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00188">188</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a860c5efaa583795ff2f31e3670739e58"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetCameraType </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3">ProjectionType</a> &amp;&#160;</td>
          <td class="paramname"><em>Type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the type of projection to be used with this camera. </p>
<p>By default, all cameras are enabled with Perspective projection. This is the standard 3-dimentional view anyone would expect in a 3D world. Orthographic projection is useful when displaying 2D worlds, or only 2 dimentions of a 3D world. It enables you to see the entire side of an object without regard for camera perspective. Perspective can be thought of as a pyramid, with the camera at the top of the cone. Orthographic would instead be a cube. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>The type of projection to be used. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3adfffaec91715cbf120bbbbc50f82db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetDirection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Direction</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the Direction for the camera. </p>
<p>Sets which axis the camera will look down for rendering. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Direction</td><td>The vector3 representing the axis to be used. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af24424a1670ae6b10e9a61fbaf9fd23a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetFarClipDistance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>FarDist</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the long range clip distance. </p>
<p>Sets the distance at which objects are considered too far to render. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FarDist</td><td>A Real representing the distance. Note: This number directly corolates to the dimentions you provide in the constructor for the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a>. You should understand your games scale before setting this number. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2ffb9eca37630a8d26669aab8668bce3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetFixedYawAxis </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>UseFixed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Axis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets whether to lock rotation around the Y axis. </p>
<p>This function will lock rotations around the Y axis (or another axis if you specify). This function is automatically called on by the camera constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">UseFixed</td><td>Enable or disable the locking of the axis. </td></tr>
    <tr><td class="paramname">Axis</td><td>The axis to lock, defaults to the Y axis. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00208">208</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abd19c7667593b8ea0bff576ae3a451ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetFixedYawAxis </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>UseFixed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets whether to lock rotation around the Y axis. </p>
<p>This function will lock rotations around the Y axis. This function is automatically called on by the camera constructor to enable camera yawing. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">UseFixed</td><td>Enable or disable the locking of the axis. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00215">215</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae62b56649606677f9922eeea658bdd2f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetLocalLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a527ef7ddbf4c3936214eff5af821ae63">Mezzanine::AttachableChild</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00276">276</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8857075c6bc9e4d40075652778aa14c2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetLocalOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Orientation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a3604a2450a1647ae882ef1d9dab1ec5d">Mezzanine::AttachableChild</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00284">284</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afdc236c2c875035c8a11473350d0d17a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the location of a camera. </p>
<p>Sets the location of the specified camera. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>The new location for the camera. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#ab4f0d73a5c313874766bd038a32f1ae2">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00142">142</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a638201c94b28ca0acc406b11f166e751"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetNearClipDistance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>NearDist</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the short range clip distance. </p>
<p>Sets the distance at which objects are considered too close to render. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">NearDist</td><td>A Real representing the distance. Note: This number directly corolates to the dimentions you provide in the constructor for the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a>. You should understand your games scale before setting this number. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00178">178</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af502b9c47b1acce46e1482ce049320eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Orientation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the orientation of the camera. </p>
<p>This function will set the orientation of the specified camera via a quaternion. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Orientation</td><td>The quaternion representing the new orientation. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a8c459c324efb01dc56cead8e7650f22e">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00155">155</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2beffe698c8952407f94683adea2fa24"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetOrthoWindow </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the size of the Orthographic projection window. </p>
<p>This function will change the aspect ratio of the screen, determined by the values passed in. To set the window size without changing the aspect ratio, call either the SetOrthoWindowHeight, or SetOrthoWindowWidth functions. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Width</td><td>The new width of the projection window. </td></tr>
    <tr><td class="paramname">Height</td><td>The new height of the projection window. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00127">127</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7e99427ba89306e3c7e6a0d5ccb23482"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetOrthoWindowHeight </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Height</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the size of the Orthographic projection window. </p>
<p>This function will not change the aspect ratio of the screen, unlike SetOrthoWindow. The aspect ratio will be preserved and the Width of the screen automatically recalculated based on the Height passed in. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Height</td><td>The new height of the projection window. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00132">132</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a58279b526f2a386bfa0327a9084d24e4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetOrthoWindowWidth </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Width</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the size of the Orthographic projection window. </p>
<p>This function will not change the aspect ratio of the screen, unlike SetOrthoWindow. The aspect ratio will be preserved and the Height of the screen automatically recalculated based on the Width passed in. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Width</td><td>The new width of the projection window. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00137">137</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad49a68805d03d18d7ca42c9fbc54db2b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Camera::SetScaling </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Scale</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a5201923c0685e592dee8cecabc72b508">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="camera_8cpp_source.xhtml#l00266">266</a> of file <a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="ac29d523547291c3fe92a2685f8c8d0ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a>&amp; operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>OneNode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Camera.xhtml">Camera</a> &amp;&#160;</td>
          <td class="paramname"><em>Ev</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a992cc6bb14cd49e4030118dbb4b8e1ed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Ogre::Camera* Mezzanine::Camera::Cam</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is the <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> used by the graphics Subsystem, that this class wraps. </p>

<p>Definition at line <a class="el" href="camera_8h_source.xhtml#l00136">136</a> of file <a class="el" href="camera_8h_source.xhtml">camera.h</a>.</p>

</div>
</div>
<a class="anchor" id="aaad20a839ea4b299903bfd0356436064"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a>* Mezzanine::Camera::CameraVP</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is a pointer to the Viewport this camera is attached to, if any. </p>

<p>Definition at line <a class="el" href="camera_8h_source.xhtml#l00139">139</a> of file <a class="el" href="camera_8h_source.xhtml">camera.h</a>.</p>

</div>
</div>
<a class="anchor" id="a8491540c829acc1bebbed24c9de0dfaf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1CameraManager.xhtml">CameraManager</a>* Mezzanine::Camera::CamManager</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is the <a class="el" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a> manager that this camera is attached to. </p>

<p>Definition at line <a class="el" href="camera_8h_source.xhtml#l00142">142</a> of file <a class="el" href="camera_8h_source.xhtml">camera.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="camera_8h_source.xhtml">camera.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="camera_8cpp_source.xhtml">camera.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Sep 13 2013 01:59:15 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
