<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Audio::iRecorder Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;16,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Audio.xhtml">Audio</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classMezzanine_1_1Audio_1_1iRecorder-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Audio::iRecorder Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This is an interface class for the recording of audio.  
 <a href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="recorder_8h_source.xhtml">recorder.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab747c016a9f6dcd5c505f1bee6f2877f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab747c016a9f6dcd5c505f1bee6f2877f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#ab747c016a9f6dcd5c505f1bee6f2877f">iRecorder</a> ()</td></tr>
<tr class="memdesc:ab747c016a9f6dcd5c505f1bee6f2877f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:ab747c016a9f6dcd5c505f1bee6f2877f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca5fa9a823c28d7ad5bda860d2d0f32d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aca5fa9a823c28d7ad5bda860d2d0f32d"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#aca5fa9a823c28d7ad5bda860d2d0f32d">~iRecorder</a> ()</td></tr>
<tr class="memdesc:aca5fa9a823c28d7ad5bda860d2d0f32d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:aca5fa9a823c28d7ad5bda860d2d0f32d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bc1007f0c80d1d6152b6c2135431d1a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a1bc1007f0c80d1d6152b6c2135431d1a">BeginRecording</a> ()=0</td></tr>
<tr class="memdesc:a1bc1007f0c80d1d6152b6c2135431d1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts recording audio from the initialized device.  <a href="#a1bc1007f0c80d1d6152b6c2135431d1a">More...</a><br/></td></tr>
<tr class="separator:a1bc1007f0c80d1d6152b6c2135431d1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe205c380f3cafa4fc3c4c0850a9b980"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">BitConfig</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#abe205c380f3cafa4fc3c4c0850a9b980">GetBitConfiguration</a> () const =0</td></tr>
<tr class="memdesc:abe205c380f3cafa4fc3c4c0850a9b980"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the bit configuration for the audio captured by this recorder.  <a href="#abe205c380f3cafa4fc3c4c0850a9b980">More...</a><br/></td></tr>
<tr class="separator:abe205c380f3cafa4fc3c4c0850a9b980"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa927d361b15cf32a35b15d5be9bfb2b7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#aa927d361b15cf32a35b15d5be9bfb2b7">GetBufferSize</a> () const =0</td></tr>
<tr class="memdesc:aa927d361b15cf32a35b15d5be9bfb2b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of the buffer storing the recorded audio.  <a href="#aa927d361b15cf32a35b15d5be9bfb2b7">More...</a><br/></td></tr>
<tr class="separator:aa927d361b15cf32a35b15d5be9bfb2b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44e258f8b42987981e87cfdf00520d1a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a44e258f8b42987981e87cfdf00520d1a">GetDeviceName</a> () const =0</td></tr>
<tr class="memdesc:a44e258f8b42987981e87cfdf00520d1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the currently set recording device.  <a href="#a44e258f8b42987981e87cfdf00520d1a">More...</a><br/></td></tr>
<tr class="separator:a44e258f8b42987981e87cfdf00520d1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51945cbc15eb099cfa6c9fb1a5d8e508"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a51945cbc15eb099cfa6c9fb1a5d8e508">GetFrequency</a> () const =0</td></tr>
<tr class="memdesc:a51945cbc15eb099cfa6c9fb1a5d8e508"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the frequency of the captured audio.  <a href="#a51945cbc15eb099cfa6c9fb1a5d8e508">More...</a><br/></td></tr>
<tr class="separator:a51945cbc15eb099cfa6c9fb1a5d8e508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ea9da60679f7659bc0d93354663668a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a1ea9da60679f7659bc0d93354663668a">GetInternalBufferSize</a> () const =0</td></tr>
<tr class="memdesc:a1ea9da60679f7659bc0d93354663668a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set size of the internal buffer in bytes.  <a href="#a1ea9da60679f7659bc0d93354663668a">More...</a><br/></td></tr>
<tr class="separator:a1ea9da60679f7659bc0d93354663668a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade9aa2c7fef7bdf8e8200b0ea1ae7c3e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#ade9aa2c7fef7bdf8e8200b0ea1ae7c3e">GetRecordedAudio</a> (void *OutputBuffer, <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> OutputBufferSize)=0</td></tr>
<tr class="memdesc:ade9aa2c7fef7bdf8e8200b0ea1ae7c3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the current contents of the recorder buffer to another buffer.  <a href="#ade9aa2c7fef7bdf8e8200b0ea1ae7c3e">More...</a><br/></td></tr>
<tr class="separator:ade9aa2c7fef7bdf8e8200b0ea1ae7c3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cd826e1c7084958be006b67ffa5329e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a4cd826e1c7084958be006b67ffa5329e">GetSampleSize</a> () const =0</td></tr>
<tr class="memdesc:a4cd826e1c7084958be006b67ffa5329e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of a single sample of recorded audio data.  <a href="#a4cd826e1c7084958be006b67ffa5329e">More...</a><br/></td></tr>
<tr class="separator:a4cd826e1c7084958be006b67ffa5329e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5931eb6a325f17c9126c592ba22e132f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a5931eb6a325f17c9126c592ba22e132f">Initialize</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;DeviceName=&quot;&quot;, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Freq=22050, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">BitConfig</a> Config=BC_16Bit_Mono, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> IntBufSize=8192)=0</td></tr>
<tr class="memdesc:a5931eb6a325f17c9126c592ba22e132f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the recording device with the current configuration.  <a href="#a5931eb6a325f17c9126c592ba22e132f">More...</a><br/></td></tr>
<tr class="separator:a5931eb6a325f17c9126c592ba22e132f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bfe63118d31a97d1fdef56977228bca"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a7bfe63118d31a97d1fdef56977228bca">IsReady</a> () const =0</td></tr>
<tr class="memdesc:a7bfe63118d31a97d1fdef56977228bca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not the current Recorder configuration is ready to start recording audio.  <a href="#a7bfe63118d31a97d1fdef56977228bca">More...</a><br/></td></tr>
<tr class="separator:a7bfe63118d31a97d1fdef56977228bca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82a8218e15382ff4d6cad9f0a4797647"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a82a8218e15382ff4d6cad9f0a4797647">SetBitConfiguration</a> (const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">BitConfig</a> Config)=0</td></tr>
<tr class="memdesc:a82a8218e15382ff4d6cad9f0a4797647"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the bit configuration to use when recording data to the internal buffer.  <a href="#a82a8218e15382ff4d6cad9f0a4797647">More...</a><br/></td></tr>
<tr class="separator:a82a8218e15382ff4d6cad9f0a4797647"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a439077c3ae3834871123feba328b905f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a439077c3ae3834871123feba328b905f">SetDeviceName</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;DeviceName)=0</td></tr>
<tr class="memdesc:a439077c3ae3834871123feba328b905f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the device to be used for recording by name.  <a href="#a439077c3ae3834871123feba328b905f">More...</a><br/></td></tr>
<tr class="separator:a439077c3ae3834871123feba328b905f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11050cb6b59fc3405b5844dff3d035eb"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a11050cb6b59fc3405b5844dff3d035eb">SetFrequency</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Freq)=0</td></tr>
<tr class="memdesc:a11050cb6b59fc3405b5844dff3d035eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the frequency then the recorded audio will have.  <a href="#a11050cb6b59fc3405b5844dff3d035eb">More...</a><br/></td></tr>
<tr class="separator:a11050cb6b59fc3405b5844dff3d035eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e07f433f1673ce403b8c31bd9a4f702"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a3e07f433f1673ce403b8c31bd9a4f702">SetInternalBufferSize</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Size)=0</td></tr>
<tr class="memdesc:a3e07f433f1673ce403b8c31bd9a4f702"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the size of the internal buffer where the recorded audio may be placed.  <a href="#a3e07f433f1673ce403b8c31bd9a4f702">More...</a><br/></td></tr>
<tr class="separator:a3e07f433f1673ce403b8c31bd9a4f702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4dfe24f00b65f768115c966c4bf37cf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#ad4dfe24f00b65f768115c966c4bf37cf">Shutdown</a> ()=0</td></tr>
<tr class="memdesc:ad4dfe24f00b65f768115c966c4bf37cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shuts down and releases the recording device.  <a href="#ad4dfe24f00b65f768115c966c4bf37cf">More...</a><br/></td></tr>
<tr class="separator:ad4dfe24f00b65f768115c966c4bf37cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c566bf2816d9d2365d4deacef349b9a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3c566bf2816d9d2365d4deacef349b9a"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#a3c566bf2816d9d2365d4deacef349b9a">StopRecording</a> ()=0</td></tr>
<tr class="memdesc:a3c566bf2816d9d2365d4deacef349b9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops the recording of audio if this is currently recording. <br/></td></tr>
<tr class="separator:a3c566bf2816d9d2365d4deacef349b9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is an interface class for the recording of audio. </p>

<p>Definition at line <a class="el" href="recorder_8h_source.xhtml#l00057">57</a> of file <a class="el" href="recorder_8h_source.xhtml">recorder.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a1bc1007f0c80d1d6152b6c2135431d1a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::iRecorder::BeginRecording </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Starts recording audio from the initialized device. </p>
<dl class="section note"><dt>Note</dt><dd>If there is any old data from previous recordings in the buffer, they will be wiped. You should call <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml#ade9aa2c7fef7bdf8e8200b0ea1ae7c3e">iRecorder::GetRecordedAudio</a> before calling this. </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if recording was successfully started. </dd></dl>

</div>
</div>
<a class="anchor" id="abe205c380f3cafa4fc3c4c0850a9b980"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">BitConfig</a> Mezzanine::Audio::iRecorder::GetBitConfiguration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the bit configuration for the audio captured by this recorder. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns an BitConfig representing the bit format for the audio recorded. </dd></dl>

</div>
</div>
<a class="anchor" id="aa927d361b15cf32a35b15d5be9bfb2b7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Mezzanine::Audio::iRecorder::GetBufferSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the size of the buffer storing the recorded audio. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt32 representing the current size of the recorder buffer. </dd></dl>

</div>
</div>
<a class="anchor" id="a44e258f8b42987981e87cfdf00520d1a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Audio::iRecorder::GetDeviceName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of the currently set recording device. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a String containing the name of the device this recorder was initialized with, or an empty string if one hasn't been initialized. </dd></dl>

</div>
</div>
<a class="anchor" id="a51945cbc15eb099cfa6c9fb1a5d8e508"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Mezzanine::Audio::iRecorder::GetFrequency </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the frequency of the captured audio. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt32 containing the frequency of the captured audio in Hz. </dd></dl>

</div>
</div>
<a class="anchor" id="a1ea9da60679f7659bc0d93354663668a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Mezzanine::Audio::iRecorder::GetInternalBufferSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the currently set size of the internal buffer in bytes. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt32 representing the internal size of the buffer in bytes. </dd></dl>

</div>
</div>
<a class="anchor" id="ade9aa2c7fef7bdf8e8200b0ea1ae7c3e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Mezzanine::Audio::iRecorder::GetRecordedAudio </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>OutputBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>OutputBufferSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes the current contents of the recorder buffer to another buffer. </p>
<dl class="section note"><dt>Note</dt><dd>This will clear the recorder buffer after being called. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OutputBuffer</td><td>A pointer to the buffer to write to. </td></tr>
    <tr><td class="paramname">OutputBufferSize</td><td>The available size of the OutputBuffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt32 representing the number of bytes written to the OutputBuffer. </dd></dl>

</div>
</div>
<a class="anchor" id="a4cd826e1c7084958be006b67ffa5329e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Mezzanine::Audio::iRecorder::GetSampleSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the size of a single sample of recorded audio data. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt32 representing the size of a sample from the recorder buffer. </dd></dl>

</div>
</div>
<a class="anchor" id="a5931eb6a325f17c9126c592ba22e132f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::iRecorder::Initialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>DeviceName</em> = <code>&quot;&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Freq</em> = <code>22050</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em> = <code>BC_16Bit_Mono</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>IntBufSize</em> = <code>8192</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the recording device with the current configuration. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DeviceName</td><td>The name of the recording device to use when recording audio. If left empty this will use the default device. </td></tr>
    <tr><td class="paramname">Freq</td><td>The frequency at which to record and store the audio data in Hz. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration to record and store the audio data. See enum <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">BitConfig</a> for more information. </td></tr>
    <tr><td class="paramname">IntBufSize</td><td>The size of the internal buffer to allocate for the recorded audio. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the device was successfully initialized, false if there was a problem. </dd></dl>

</div>
</div>
<a class="anchor" id="a7bfe63118d31a97d1fdef56977228bca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::iRecorder::IsReady </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not the current Recorder configuration is ready to start recording audio. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if this Recorder is ready to start recording, false otherise. </dd></dl>

</div>
</div>
<a class="anchor" id="a82a8218e15382ff4d6cad9f0a4797647"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::iRecorder::SetBitConfiguration </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the bit configuration to use when recording data to the internal buffer. </p>
<dl class="section note"><dt>Note</dt><dd>If this recorder is already initialized, calling this method may re-initialize it and clear the recorded audio buffer in the process. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Config</td><td>The bit configuration to record and store the audio data. See enum <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">BitConfig</a> for more information. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if there were no errors in setting the bit configuration, false if there was a problem. </dd></dl>

</div>
</div>
<a class="anchor" id="a439077c3ae3834871123feba328b905f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::iRecorder::SetDeviceName </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>DeviceName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the device to be used for recording by name. </p>
<dl class="section note"><dt>Note</dt><dd>If this recorder is already initialized, calling this method may re-initialize it and clear the recorded audio buffer in the process. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DeviceName</td><td>The name of the device to use to record audio. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if there were no errors in setting the device name, false if there was a problem. </dd></dl>

</div>
</div>
<a class="anchor" id="a11050cb6b59fc3405b5844dff3d035eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::iRecorder::SetFrequency </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Freq</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the frequency then the recorded audio will have. </p>
<dl class="section note"><dt>Note</dt><dd>If this recorder is already initialized, calling this method may re-initialize it and clear the recorded audio buffer in the process. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Freq</td><td>The frequency at which to record and store the audio data in Hz. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if there were no errors in setting the frequency, false if there was a problem. </dd></dl>

</div>
</div>
<a class="anchor" id="a3e07f433f1673ce403b8c31bd9a4f702"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::iRecorder::SetInternalBufferSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the size of the internal buffer where the recorded audio may be placed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Size</td><td>The size of the internal buffer in bytes. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad4dfe24f00b65f768115c966c4bf37cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::iRecorder::Shutdown </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shuts down and releases the recording device. </p>
<dl class="section note"><dt>Note</dt><dd>If you wish to reuse this recorder after it has been shut down, you will need to reinitialize it. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/Audio/<a class="el" href="recorder_8h_source.xhtml">recorder.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Sep 16 2013 06:21:47 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
