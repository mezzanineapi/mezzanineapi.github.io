<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/camera.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;18,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">camera.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#ifndef _Camera_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _Camera_cpp</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="camera_8h.xhtml" title="Declaration of the Mezzanine::Camera class.">camera.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;cameramanager.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;stringtool.h&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;exception.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;scenemanager.h&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;entresol.h&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;Graphics/viewport.h&quot;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;XML/xml.h&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &lt;Ogre.h&gt;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">/// @file camera.h</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">/// @brief Declaration of the Mezzanine::Camera class</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a172e91734ebe0cb5d8332ef00606526e">   62</a></span>&#160;    <a class="code" href="classMezzanine_1_1Camera.xhtml#a172e91734ebe0cb5d8332ef00606526e" title="Basic Camera Constructor.">Camera::Camera</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name, <a class="code" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a>* Manager)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        Ogre::Camera* OgreCam = Manager-&gt;<a class="code" href="classMezzanine_1_1CameraManager.xhtml#a3e5bf2576a6f941f8ecef4fe83b5e4b2" title="Used to reference the appropriate scene.">SceneMan</a>-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3156d3ec1b514e295368bfa4b94d4adc" title="Gets the internal Ogre Scene Manager pointer.">GetGraphicsWorldPointer</a>()-&gt;createCamera(Name);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        this-&gt;Construct(OgreCam, Manager);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#aa20f07494ece246945eb3cb05f549f82">   68</a></span>&#160;    <a class="code" href="classMezzanine_1_1Camera.xhtml#a172e91734ebe0cb5d8332ef00606526e" title="Basic Camera Constructor.">Camera::Camera</a>(Ogre::Camera* <a class="code" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a>, <a class="code" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a>* Manager)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        this-&gt;Construct(Camera, Manager);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">void</span> Camera::Construct(Ogre::Camera* <a class="code" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a>, <a class="code" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a>* Manager)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a> = <a class="code" href="classMezzanine_1_1Camera.xhtml#a172e91734ebe0cb5d8332ef00606526e" title="Basic Camera Constructor.">Camera</a>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a8491540c829acc1bebbed24c9de0dfaf" title="This is the Camera manager that this camera is attached to.">CamManager</a> = Manager;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a638201c94b28ca0acc406b11f166e751" title="Sets the short range clip distance.">SetNearClipDistance</a>(5.0f);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#af24424a1670ae6b10e9a61fbaf9fd23a" title="Sets the long range clip distance.">SetFarClipDistance</a>(5000.0f);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a2ffb9eca37630a8d26669aab8668bce3" title="Sets whether to lock rotation around the Y axis.">SetFixedYawAxis</a>(<span class="keyword">true</span>,<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Mezzanine::Vector3</a>(0,1,0));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#ab25144933c625492a059e57401387c40">   82</a></span>&#160;    <a class="code" href="classMezzanine_1_1Camera.xhtml#ab25144933c625492a059e57401387c40" title="Class Destructor.">Camera::~Camera</a>()</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1Camera.xhtml#a8491540c829acc1bebbed24c9de0dfaf" title="This is the Camera manager that this camera is attached to.">CamManager</a>-&gt;<a class="code" href="classMezzanine_1_1CameraManager.xhtml#a3e5bf2576a6f941f8ecef4fe83b5e4b2" title="Used to reference the appropriate scene.">SceneMan</a> &amp;&amp; <a class="code" href="classMezzanine_1_1Camera.xhtml#a8491540c829acc1bebbed24c9de0dfaf" title="This is the Camera manager that this camera is attached to.">CamManager</a>-&gt;<a class="code" href="classMezzanine_1_1CameraManager.xhtml#a3e5bf2576a6f941f8ecef4fe83b5e4b2" title="Used to reference the appropriate scene.">SceneMan</a>-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3156d3ec1b514e295368bfa4b94d4adc" title="Gets the internal Ogre Scene Manager pointer.">GetGraphicsWorldPointer</a>())</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            { <a class="code" href="classMezzanine_1_1Camera.xhtml#a8491540c829acc1bebbed24c9de0dfaf" title="This is the Camera manager that this camera is attached to.">CamManager</a>-&gt;<a class="code" href="classMezzanine_1_1CameraManager.xhtml#a3e5bf2576a6f941f8ecef4fe83b5e4b2" title="Used to reference the appropriate scene.">SceneMan</a>-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3156d3ec1b514e295368bfa4b94d4adc" title="Gets the internal Ogre Scene Manager pointer.">GetGraphicsWorldPointer</a>()-&gt;destroyCamera(<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>); }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#abf6e3c2e642753023acd91f6d1413455">   88</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; <a class="code" href="classMezzanine_1_1Camera.xhtml#abf6e3c2e642753023acd91f6d1413455" title="Gets the camera&#39;s set name.">Camera::GetName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;getName();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a3fc6ebb66171d0c6fc407deca5c7a003">   93</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml" title="This class is for creating and managing viewports within a game window.">Graphics::Viewport</a>* <a class="code" href="classMezzanine_1_1Camera.xhtml#a3fc6ebb66171d0c6fc407deca5c7a003" title="Gets the Viewport this camera is attached to, if any.">Camera::GetViewport</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#aaad20a839ea4b299903bfd0356436064" title="This is a pointer to the Viewport this camera is attached to, if any.">CameraVP</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a860c5efaa583795ff2f31e3670739e58">   98</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a860c5efaa583795ff2f31e3670739e58" title="Sets the type of projection to be used with this camera.">Camera::SetCameraType</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3" title="Values for storing how perspective should be interpretted.">ProjectionType</a>&amp; Type)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">if</span>( <a class="code" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3a5bf29bb9ff44080ae6cbfa3e2aeb467c" title="Not at all, objects at any distance are the same size.">Camera::Orthographic</a> == Type )</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setProjectionType(Ogre::PT_ORTHOGRAPHIC);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <a class="code" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3a616794ef1e113f63b1b9bf6896c61eba" title="Normal perspective.">Camera::Perspective</a> == Type )</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setProjectionType(Ogre::PT_PERSPECTIVE);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a7a0bd380eb3a0e6d02ff8f51ceeda54c" title="When used a instance of ParametersException is thrown. Thrown when parameters are checked at runtime ...">Exception::PARAMETERS_EXCEPTION</a>,<span class="stringliteral">&quot;Unknown ProjectionType when attempting to set Camera Type.&quot;</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#aef2f7b71aedee46bacc1341c02a813a2">  112</a></span>&#160;    <a class="code" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3" title="Values for storing how perspective should be interpretted.">Camera::ProjectionType</a> <a class="code" href="classMezzanine_1_1Camera.xhtml#aef2f7b71aedee46bacc1341c02a813a2" title="Get the type of projection used by the camera.">Camera::GetCameraType</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">if</span>( this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;getProjectionType()==Ogre::PT_ORTHOGRAPHIC )</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3a5bf29bb9ff44080ae6cbfa3e2aeb467c" title="Not at all, objects at any distance are the same size.">Camera::Orthographic</a>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>( this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;getProjectionType()==Ogre::PT_PERSPECTIVE )</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        {</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a643bf90630796bca5353967664d5f6e3a616794ef1e113f63b1b9bf6896c61eba" title="Normal perspective.">Camera::Perspective</a>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a7a0bd380eb3a0e6d02ff8f51ceeda54c" title="When used a instance of ParametersException is thrown. Thrown when parameters are checked at runtime ...">Exception::PARAMETERS_EXCEPTION</a>,<span class="stringliteral">&quot;Unknown ProjectionType when attempting to get Camera Type.&quot;</span>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a2beffe698c8952407f94683adea2fa24">  127</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a2beffe698c8952407f94683adea2fa24" title="Defines the size of the Orthographic projection window.">Camera::SetOrthoWindow</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Width, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Height)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setOrthoWindow(Width, Height);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a7e99427ba89306e3c7e6a0d5ccb23482">  132</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a7e99427ba89306e3c7e6a0d5ccb23482" title="Defines the size of the Orthographic projection window.">Camera::SetOrthoWindowHeight</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Height)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setOrthoWindowHeight(Height);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a58279b526f2a386bfa0327a9084d24e4">  137</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a58279b526f2a386bfa0327a9084d24e4" title="Defines the size of the Orthographic projection window.">Camera::SetOrthoWindowWidth</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Width)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setOrthoWindowWidth(Width);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#afdc236c2c875035c8a11473350d0d17a">  142</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#afdc236c2c875035c8a11473350d0d17a" title="Sets the location of a camera.">Camera::SetLocation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Location)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setPosition(Location.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>());</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        LocalTransformDirty = !(<a class="code" href="classMezzanine_1_1AttachableBase.xhtml#a0d62e3708056e62911d6ec7c6beb3a97" title="Gets the update status of another attachable.">GetUpdating</a>(Parent));</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <a class="code" href="classMezzanine_1_1AttachableChild.xhtml#a500d824fc29de69ac05ffcdbdaf67e9e" title="Recalculates this objects local transform based on it&#39;s current global position.">_RecalculateLocalTransform</a>();</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#afb87a19855c4cd5361861e1e400d5481">  150</a></span>&#160;    <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Camera.xhtml#afb87a19855c4cd5361861e1e400d5481" title="Gets the relative location of the camera.">Camera::GetLocation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;getPosition());</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#af502b9c47b1acce46e1482ce049320eb">  155</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#af502b9c47b1acce46e1482ce049320eb" title="Sets the orientation of the camera.">Camera::SetOrientation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; Orientation)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setOrientation(Orientation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a152abb6ccfe1c9dfb22218fd54b84863" title="Gets a Ogre quaternion.">GetOgreQuaternion</a>());</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        LocalTransformDirty = !(<a class="code" href="classMezzanine_1_1AttachableBase.xhtml#a0d62e3708056e62911d6ec7c6beb3a97" title="Gets the update status of another attachable.">GetUpdating</a>(Parent));</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="classMezzanine_1_1AttachableChild.xhtml#a500d824fc29de69ac05ffcdbdaf67e9e" title="Recalculates this objects local transform based on it&#39;s current global position.">_RecalculateLocalTransform</a>();</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#af693fe97c4f281940a33dc8087a80fcb">  163</a></span>&#160;    <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> <a class="code" href="classMezzanine_1_1Camera.xhtml#af693fe97c4f281940a33dc8087a80fcb" title="Gets the direction the camera is facing.">Camera::GetOrientation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;getOrientation());</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a3adfffaec91715cbf120bbbbc50f82db">  168</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a3adfffaec91715cbf120bbbbc50f82db" title="Sets the Direction for the camera.">Camera::SetDirection</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Direction)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setDirection(Direction.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>());</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a1b23b180e30225bc6e1b90a2d270771e">  173</a></span>&#160;    <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Camera.xhtml#a1b23b180e30225bc6e1b90a2d270771e" title="Gets the direction the camera is currently facing.">Camera::GetDirection</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;getDirection());</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a638201c94b28ca0acc406b11f166e751">  178</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a638201c94b28ca0acc406b11f166e751" title="Sets the short range clip distance.">Camera::SetNearClipDistance</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; NearDist)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setNearClipDistance(NearDist);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#af24424a1670ae6b10e9a61fbaf9fd23a">  183</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#af24424a1670ae6b10e9a61fbaf9fd23a" title="Sets the long range clip distance.">Camera::SetFarClipDistance</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; FarDist)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setFarClipDistance (FarDist);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#ab619a29b83487e8f86c8adb443689078">  188</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#ab619a29b83487e8f86c8adb443689078" title="Sets the aspect ratio of the cameras veiw.">Camera::SetAspectRatio</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Ratio)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setAspectRatio(Ratio);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a8343f2d2fb174937aef2894ebf8a5e29">  193</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a8343f2d2fb174937aef2894ebf8a5e29" title="Sets the direction the camera faces.">Camera::LookAt</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; TargetLoc)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;lookAt(TargetLoc.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>());</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#afdc17999a097218df445370123d41239">  198</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#afdc17999a097218df445370123d41239" title="Moves the camera without factoring orientation.">Camera::Move</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; ToMove)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;move(ToMove.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>());</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#ac8f450698006baf6e8fca2a864d59533">  203</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#ac8f450698006baf6e8fca2a864d59533" title="Moves the camera while factoring orientation.">Camera::MoveRelative</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; ToMove)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;moveRelative(ToMove.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>());</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a2ffb9eca37630a8d26669aab8668bce3">  208</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a2ffb9eca37630a8d26669aab8668bce3" title="Sets whether to lock rotation around the Y axis.">Camera::SetFixedYawAxis</a>(<span class="keywordtype">bool</span> UseFixed, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Axis)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setFixedYawAxis(UseFixed, Axis.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2948167508c456d64032acfc8c2f6fd8" title="Gets a Ogre vector3.">GetOgreVector3</a>());</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        this-&gt;YawAxis = Axis;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        this-&gt;YawOnAxis = UseFixed;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#abd19c7667593b8ea0bff576ae3a451ba">  215</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a2ffb9eca37630a8d26669aab8668bce3" title="Sets whether to lock rotation around the Y axis.">Camera::SetFixedYawAxis</a>(<span class="keywordtype">bool</span> UseFixed)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    {</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;setFixedYawAxis(UseFixed);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        this-&gt;YawOnAxis = UseFixed;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#adfe5be54632aeedb9656c850f3f03ae5">  221</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#adfe5be54632aeedb9656c850f3f03ae5" title="Is fixed yaw enabled.">Camera::IsFixedYawEnabled</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;YawOnAxis; }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#af7a94974ef5ff6caff66da3a9f71b579">  224</a></span>&#160;    <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Camera.xhtml#af7a94974ef5ff6caff66da3a9f71b579" title="If fixed yaw is enabled, on which axis is yawing disabled.">Camera::GetFixedYawAxis</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">if</span> (this-&gt;YawOnAxis)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            { <span class="keywordflow">return</span> this-&gt;YawAxis; }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            { <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,0); }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment">/*void Camera::SetAutoTracking(bool Enabled, String Target, Vector3 Offset)</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">        Ogre::SceneNode* Trgt = CamManager-&gt;FindNode(Target);</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">        this-&gt;Cam-&gt;setAutoTracking(Enabled, Trgt, Offset.GetOgreVector3());</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">    void Camera::SetAutoTracking(bool Enabled, String Target)</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">        Ogre::SceneNode* Trgt = CamManager-&gt;FindNode(Target);</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">        this-&gt;Cam-&gt;setAutoTracking(Enabled, Trgt);</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">    }*/</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a4fce77c8b2a0901dc1d22541b98b9437">  244</a></span>&#160;    <a class="code" href="classMezzanine_1_1Ray.xhtml" title="This is used to indicate a line with one end.">Ray</a> <a class="code" href="classMezzanine_1_1Camera.xhtml#a4fce77c8b2a0901dc1d22541b98b9437" title="Gets a Ray from the camera to the viewport.">Camera::GetCameraToViewportRay</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; ScreenX, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; ScreenY)<span class="keyword"> const</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <a class="code" href="classMezzanine_1_1Ray.xhtml" title="This is used to indicate a line with one end.">Ray</a> R(this-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>-&gt;getCameraToViewportRay(ScreenX, ScreenY));</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">return</span> R;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment"></span>    <span class="comment">// Utility</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#ab104d907a3f12d7ff470dce48e9690d0">  253</a></span>&#160;    <a class="code" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a>* <a class="code" href="classMezzanine_1_1Camera.xhtml#ab104d907a3f12d7ff470dce48e9690d0" title="Gets the manager this camera belongs to.">Camera::GetCameraManager</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a8491540c829acc1bebbed24c9de0dfaf" title="This is the Camera manager that this camera is attached to.">CamManager</a>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment"></span>    <span class="comment">// Inherited From AttachableChild</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a1c00772101a06add4b3dde9e3bc9f8aa">  261</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718" title="Used by various classes to help identify what class an object is.">WorldAndSceneObjectType</a> <a class="code" href="classMezzanine_1_1Camera.xhtml#a1c00772101a06add4b3dde9e3bc9f8aa" title="Gets the type of World or Scene object this attachable is. ">Camera::GetType</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">return</span> Mezzanine::WSO_Camera;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#ad49a68805d03d18d7ca42c9fbc54db2b">  266</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#ad49a68805d03d18d7ca42c9fbc54db2b">Camera::SetScaling</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Scale)</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="comment">// Do nothing, can&#39;t scale a camera.</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div>
<div class="line"><a name="l00271"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a026f364d2eb9a13d216cd9d6c600db17">  271</a></span>&#160;    <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Camera.xhtml#a026f364d2eb9a13d216cd9d6c600db17" title="Gets the current scaling being applied to the World Object. ">Camera::GetScaling</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,1,1);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#ae62b56649606677f9922eeea658bdd2f">  276</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#ae62b56649606677f9922eeea658bdd2f">Camera::SetLocalLocation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Location)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        LocalXform.<a class="code" href="classMezzanine_1_1Transform.xhtml#a93498c9bcba2298f199f9ab04671a944" title="The location or relative location is stored in a Vector3.">Location</a> = Location;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        GlobalTransformDirty = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <a class="code" href="classMezzanine_1_1AttachableChild.xhtml#ad34350de631e502a8bc3d4ce25fff4f6" title="Recalculates objects global transform from parent.">_RecalculateGlobalTransform</a>();</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#a8857075c6bc9e4d40075652778aa14c2">  284</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a8857075c6bc9e4d40075652778aa14c2">Camera::SetLocalOrientation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; Orientation)</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        LocalXform.<a class="code" href="classMezzanine_1_1Transform.xhtml#a4f41685c108f02fd4faad209b1a438ef" title="The Rotation or relative rotation is stored in a Quaternion.">Rotation</a> = Orientation;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        GlobalTransformDirty = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <a class="code" href="classMezzanine_1_1AttachableChild.xhtml#ad34350de631e502a8bc3d4ce25fff4f6" title="Recalculates objects global transform from parent.">_RecalculateGlobalTransform</a>();</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment"></span>    <span class="comment">// Internal Methods</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Camera.xhtml#ac7985618c8f908a6cc93069ccb51bb47">  295</a></span>&#160;    Ogre::Camera* <a class="code" href="classMezzanine_1_1Camera.xhtml#ac7985618c8f908a6cc93069ccb51bb47" title="Gets the internal camera this camera is based on.">Camera::GetOgreCamera</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Camera.xhtml#a992cc6bb14cd49e4030118dbb4b8e1ed" title="This is the Camera used by the graphics Subsystem, that this class wraps.">Cam</a>;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    }</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment"></span><span class="comment">// Class External &lt;&lt; Operators for streaming or assignment</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div>
<div class="line"><a name="l00304"></a><span class="lineno"><a class="code" href="camera_8h.xhtml#a547c3f8cb5c51da38148a6945d4b5447">  304</a></span>&#160;std::ostream&amp; operator &lt;&lt; (std::ostream&amp; stream, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Mezzanine::Camera</a>&amp; Ev)</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;{</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="comment">//stream &lt;&lt; &quot;&lt;Camera Version=\&quot;1\&quot; attachedto=\&quot;1\&quot; location=\&quot;1\&quot; orientation=\&quot;1\&quot; name=\&quot;1\&quot; /&gt;&quot; &lt;&lt; *(Ev.Cam) &lt;&lt; &quot;&lt;/Camera&gt;&quot;;</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    stream      &lt;&lt; <span class="stringliteral">&quot;&lt;Camera Version=\&quot;1\&quot; Name=\&quot;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#abf6e3c2e642753023acd91f6d1413455" title="Gets the camera&#39;s set name.">GetName</a>() &lt;&lt; <span class="stringliteral">&quot;\&quot; AttachedTo=\&quot;&quot;</span> &lt;&lt; (Ev.<a class="code" href="classMezzanine_1_1AttachableChild.xhtml#a16e42db1e1a69f5ca41d412fcc3a5aeb" title="Gets the parent of this child.">GetParent</a>() ? Ev.<a class="code" href="classMezzanine_1_1AttachableChild.xhtml#a16e42db1e1a69f5ca41d412fcc3a5aeb" title="Gets the parent of this child.">GetParent</a>()-&gt;<a class="code" href="classMezzanine_1_1AttachableBase.xhtml#a04b114eccfbf9092b84dfe24e81548b6" title="Gets the name of this attachable.">GetName</a>() : <span class="stringliteral">&quot;&quot;</span>) &lt;&lt; <span class="stringliteral">&quot;\&quot; CameraPerspective=\&quot;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#aef2f7b71aedee46bacc1341c02a813a2" title="Get the type of projection used by the camera.">GetCameraType</a>() &lt;&lt; <span class="stringliteral">&quot;\&quot;&gt;&quot;</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;&lt;Orientation&gt;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#af693fe97c4f281940a33dc8087a80fcb" title="Gets the direction the camera is facing.">GetOrientation</a>() &lt;&lt; <span class="stringliteral">&quot;&lt;/Orientation&gt;&quot;</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;&lt;Location&gt;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1AttachableChild.xhtml#a59bbbc115c028f87db652f32d252ee61" title="Gets the Location of this object in local space.">GetLocalLocation</a>() &lt;&lt; <span class="stringliteral">&quot;&lt;/Location&gt;&quot;</span>;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">if</span> ( Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#adfe5be54632aeedb9656c850f3f03ae5" title="Is fixed yaw enabled.">IsFixedYawEnabled</a>() )</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        {stream &lt;&lt; <span class="stringliteral">&quot;&lt;FixedYawAxis Enabled=\&quot;1\&quot;&gt;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#af7a94974ef5ff6caff66da3a9f71b579" title="If fixed yaw is enabled, on which axis is yawing disabled.">GetFixedYawAxis</a>() &lt;&lt; <span class="stringliteral">&quot;&lt;/FixedYawAxis&gt;&quot;</span>; }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        {stream &lt;&lt; <span class="stringliteral">&quot;&lt;FixedYawAxis Enabled=\&quot;0\&quot; /&gt;&quot;</span>; }</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    stream      &lt;&lt; <span class="stringliteral">&quot;&lt;/Camera&gt;&quot;</span>;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordflow">return</span> stream;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;}</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno"><a class="code" href="camera_8h.xhtml#a642e70b85734d279125f4e5d3d07722a">  321</a></span>&#160;std::istream&amp; <a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> operator &gt;&gt; (std::istream&amp; stream, <a class="code" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Mezzanine::Camera</a>&amp; Ev)</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> OneTag( <a class="code" href="namespaceMezzanine_1_1XML.xhtml#a230007eaf534ce57ad58f440a7a89b6c" title="Gets the first tag out of the Stream and returns it as a String.">Mezzanine::XML::GetOneTag</a>(stream) );</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Mezzanine::CountedPtr&lt;Mezzanine::XML::Document&gt;</a> Doc( <a class="code" href="namespaceMezzanine_1_1XML.xhtml#ac7626fd39b806cbb7b34ff375b341ee5" title="Perform a basic series of checks for extracting meaning from a single xml tag.">Mezzanine::XML::PreParseClassFromSingleTag</a>(<span class="stringliteral">&quot;Mezzanine::&quot;</span>, <span class="stringliteral">&quot;Camera&quot;</span>, OneTag) );</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    Doc-&gt;<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>() &gt;&gt; Ev;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordflow">return</span> stream;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;}</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno"><a class="code" href="camera_8h.xhtml#aaf3265b28b4fa77f8d2cbd285db43305">  331</a></span>&#160;<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Mezzanine::XML::Node</a>&amp; operator &gt;&gt; (<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Mezzanine::XML::Node</a>&amp; OneNode, <a class="code" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Mezzanine::Camera</a>&amp; Ev)</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;{</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>())==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;Camera&quot;</span>) )</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    {</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">if</span>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Version&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>() == 1)</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        {</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;            Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#a860c5efaa583795ff2f31e3670739e58" title="Sets the type of projection to be used with this camera.">SetCameraType</a>(static_cast&lt;Mezzanine::Camera::ProjectionType&gt;(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;CameraPerspective&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>()));</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">Mezzanine::WorldNode</a> * AttachPtr = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Mezzanine::Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a5934c98e4d29964346597baf2c4d01da" title="This gets the SceneManager from the manager list.">GetSceneManager</a>()-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a35fb2ab086d5cce5c7554d27e4d5a800" title="Gets an already created node by name.">GetNode</a>( OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;AttachedTo&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>() );</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keywordflow">if</span> (AttachPtr)</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                { AttachPtr-&gt;<a class="code" href="classMezzanine_1_1AttachableParent.xhtml#a558c6e2dd0a31cd99bb7872394de9c00" title="Attaches an attachable element to this object.">AttachObject</a>(&amp;Ev); }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Mezzanine::Quaternion</a> TempQuat(0,0,0,0);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Mezzanine::Vector3</a> TempVec(0,0,0);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <span class="keywordflow">for</span>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Mezzanine::XML::Node</a> Child = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>(); Child!=0; Child = Child.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9afd9eed67cd16754edaf6264021b21b" title="Attempt to retrieve the next sibling of this Node.">GetNextSibling</a>())</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> Name(Child.Name());</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                <span class="keywordflow">switch</span>(Name[0])</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                {</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;                    <span class="keywordflow">case</span> <span class="charliteral">&#39;O&#39;</span>:   <span class="comment">//Orientation</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                        <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;Orientation&quot;</span>))</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                        {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                            Child.GetFirstChild() &gt;&gt; TempQuat;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                            Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#af502b9c47b1acce46e1482ce049320eb" title="Sets the orientation of the camera.">SetOrientation</a>(TempQuat);</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML Version for Camera: Includes unknown Element O-\&quot;&quot;</span>+Name+<span class="stringliteral">&quot;\&quot;&quot;</span>);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                        }</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;                    <span class="keywordflow">case</span> <span class="charliteral">&#39;L&#39;</span>:   <span class="comment">//Location</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                        <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;Location&quot;</span>))</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                        {</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                            Child.GetFirstChild() &gt;&gt; TempVec;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                            Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#afdc236c2c875035c8a11473350d0d17a" title="Sets the location of a camera.">SetLocation</a>(TempVec);</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML Version for Camera: Includes unknown Element L-\&quot;&quot;</span>+Name+<span class="stringliteral">&quot;\&quot;&quot;</span>);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                        }</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                    <span class="keywordflow">case</span> <span class="charliteral">&#39;F&#39;</span>:   <span class="comment">//FixedYawAxis</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                        <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;FixedYawAxis&quot;</span>) &amp;&amp; Child.GetAttribute(<span class="stringliteral">&quot;Enabled&quot;</span>).AsBool())</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                        {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;                            Child.GetFirstChild() &gt;&gt; TempVec;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                            Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#a2ffb9eca37630a8d26669aab8668bce3" title="Sets whether to lock rotation around the Y axis.">SetFixedYawAxis</a>(<span class="keyword">true</span>,TempVec);</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                        }<span class="keywordflow">else</span> <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;FixedYawAxis&quot;</span>)){</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                            Ev.<a class="code" href="classMezzanine_1_1Camera.xhtml#a2ffb9eca37630a8d26669aab8668bce3" title="Sets whether to lock rotation around the Y axis.">SetFixedYawAxis</a>(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML Version for Camera: Includes unknown Element F-\&quot;&quot;</span>+Name+<span class="stringliteral">&quot;\&quot;&quot;</span>);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                        }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                        MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML Version for Camera: Includes unknown Element default-\&quot;&quot;</span>+Name+<span class="stringliteral">&quot;\&quot;&quot;</span>);</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                }</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML Version for Camera: Not Version 1&quot;</span>);</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        }</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a5b5cb8f34d9d13846e560a8f1f7800f2" title="When used a instance of InstanceIdentityInvalidException is thrown. Thrown when the identity string w...">Mezzanine::Exception::II_IDENTITY_INVALID_EXCEPTION</a>,<span class="stringliteral">&quot;Attempting to deserialize a Camera, found a &quot;</span>+<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>()));</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a954af2fb48bf0d15a27069a890ef8dad" title="When used a instance of InvalidStateException is thrown. Thrown when the available information should...">Mezzanine::Exception::INVALID_STATE_EXCEPTION</a>,<span class="stringliteral">&quot;Impossible codepath reached in when attempting to deserialize a camera named &quot;</span>+<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>()));</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;}</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Sep 18 2013 00:02:54 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
