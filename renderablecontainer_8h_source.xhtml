<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/UI/renderablecontainer.h Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September14,2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_3ebf96fe972d575a9a92716dce298e4c.xhtml">UI</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">renderablecontainer.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _uirenderablecontainer_h</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _uirenderablecontainer_h</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;colourvalue.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;UI/resizehandler.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;UI/renderablerect.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;UI/uienumerations.h&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">class </span>UIManager;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">namespace </span>UI</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keyword">class </span>Widget;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">class </span>BasicRenderable;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keyword">class </span>Rectangle;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">class </span>Caption;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">class </span>Button;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keyword">class </span>MarkupText;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">class </span>Scrollbar;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keyword">class </span>CheckBox;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">class </span>ListBox;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">class </span>LineList;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">class </span>Window;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">class </span>Menu;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keyword">class </span>Spinner;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keyword">class </span>ScrolledCellGrid;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keyword">class </span>PagedCellGrid;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keyword">class </span>DropDownList;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keyword">class </span>TabSet;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keyword">class </span>OpenRenderableContainerWidget;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keyword">class </span>EnclosedRenderableContainerWidget;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">class </span>Screen;<span class="comment"></span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">        /// @class RenderableFactory</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">        /// @headerfile renderablecontainer.h</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">        /// @brief This class is responsible for the creation and destruction of all UI renderables.</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">        /// @details This class only contains a basic set of renderables.  For more renderables see the ExtendedRenderableFactory class.</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml">   79</a></span>&#160;<span class="comment"></span>        <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml" title="This class is responsible for the creation and destruction of all UI renderables.">RenderableFactory</a></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                <a class="code" href="classMezzanine_1_1UI_1_1UIManager.xhtml" title="This class is responsible for any and all user interactions with the User interface/HUD.">UIManager</a>* Manager;<span class="comment"></span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">                /// @brief Sets all the activation keys for the provided button after it is created.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"></span>                <span class="keywordtype">void</span> ButtonActivationSetup(<a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* ToSet);<span class="comment"></span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">                /// @internal</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">                /// @brief Gets the screen that will possess ownership of the created renderables.</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">Screen</a>* GetScreen() = 0;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="comment">                /// @brief Class constructor.</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment"></span>                <a class="code" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml" title="This class is responsible for the creation and destruction of all UI renderables.">RenderableFactory</a>();<span class="comment"></span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">                /// @brief Class destructor.</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> ~<a class="code" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml" title="This class is responsible for the creation and destruction of all UI renderables.">RenderableFactory</a>();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment"></span>                <span class="comment">// Creating BasicRenderables</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">                /// @brief Creates a rectangle.</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">                /// @return Returns a pointer to the created rectangle.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the rectangle.</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Rectangle.xhtml" title="This class is a helper class, specifically for use with background sprites and colours.">Rectangle</a>* CreateRectangle(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">                /// @brief Creates a caption.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">                /// @return Returns a pointer to the created caption.</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">                /// @param Name The name of this caption.</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the caption.</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">                /// @param Glyph One of the glyphs specified in your mta file.  Must be valid.</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">                /// @param Text Any text you want printed on the caption.</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Caption.xhtml" title="This class is a helper class, specifically for use with text.">Caption</a>* CreateCaption(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; <a class="code" href="classMezzanine_1_1UI_1_1Glyph.xhtml" title="Class used to describe a single glyph or character available for text operations.">Glyph</a>, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">                /// @brief Creates a caption.</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">                /// @return Returns a pointer to the created caption.</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">                /// @param Name The name of this caption.</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the caption.</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">                /// @param LineHeight The lineheight you want the text to have in relative units.  This will automatically select the glyph and scale it for you.</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">                /// @param Text Any text you want printed on the caption.</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Caption.xhtml" title="This class is a helper class, specifically for use with text.">Caption</a>* CreateCaption(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">                /// @brief Creates a markup text.</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">                /// @details The constructor will ignore the size portion of the Rect passed in, since Markup Texts don&#39;t have a default size.</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">                /// @return Returns a pointer to the created markup text.</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">                /// @param Name The name of this markup text.</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the markup text.</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">                /// @param Glyph One of the glyphs specified in your mta file.  Must be valid.</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">                /// @param Text Any text you want printed on the markup text.</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1MarkupText.xhtml" title="This is a helper class for use with specialized text display.">MarkupText</a>* CreateMarkupText(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Glyph, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">                /// @brief Creates a markup text.</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">                /// @details The constructor will ignore the size portion of the Rect passed in, since Markup Texts don&#39;t have a default size.</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">                /// @return Returns a pointer to the created markup text.</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">                /// @param Name The name of this markup text.</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the markup text.</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">                /// @param LineHeight The lineheight you want the text to have in relative units.  This will automatically select the glyph and scale it for you.</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">                /// @param Text Any text you want printed on the markup text.</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1MarkupText.xhtml" title="This is a helper class for use with specialized text display.">MarkupText</a>* CreateMarkupText(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment"></span>                <span class="comment">// Destroying BasicRenderables</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">                /// @brief Destroys a BasicRenderable.</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">                /// @param ToBeDestroyed Pointer to the BasicRenderable you want destroyed.</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyBasicRenderable(<a class="code" href="classMezzanine_1_1UI_1_1BasicRenderable.xhtml" title="Base class for renderables that generate verticies.">BasicRenderable</a>* ToBeDestroyed);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"></span>                <span class="comment">// Creating Widgets</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">                /// @brief Creates a button.</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">                /// @return Returns a pointer to the created button.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">                /// @param Name The name of the button.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the button.</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* CreateButton(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">                /// @brief Creates a text button.</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">                /// @return Returns a pointer to the created button.</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">                /// @param Name The name of the button.</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the button.</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">                /// @param Glyph One of the glyphs specified in your mta file.  Must be valid.</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">                /// @param Text Any text you want printed on the button.</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* CreateButton(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Glyph, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">                /// @brief Creates a text button.</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment">                /// @return Returns a pointer to the created button.</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">                /// @param Name The name of the button.</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the button.</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">                /// @param LineHeight The lineheight you want the text to have in relative units.  This will automatically select the glyph and scale it for you.</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">                /// @param Text Any text you want printed on the button.</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* CreateButton(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">                /// @brief Creates a Scrollbar.</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">                /// @return Returns a pointer to the created Scrollbar.</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">                /// @param Name The name of the Scrollbar.</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the Scrollbar.</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">                /// @param Style The style of scrollbar you want to create, see Scrollbar documentation for more details.</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>* CreateScrollbar(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763" title="Used by the scrollbar class to determine what styling should be used for the scrollbar.">UI::ScrollbarStyle</a>&amp; Style);<span class="comment"></span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">                /// @brief Creates a CheckBox.</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">                /// @details The label uses the Markup Text class, and thus it&#39;s light markup text language.  You can also</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">                /// pass in a blank string if you don&#39;t wish to have a label, you can create a label after construction.</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment">                /// @return Returns a pointer to the created CheckBox.</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">                /// @param Name The name of the CheckBox.</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the CheckBox.</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">                /// @param LineHeight The lineheight you want the text to have. If the Rect passed in is relative, this will expect LineHeight to be relative as well.</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">                /// @param LabelText The text to display with the label.</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>* CreateCheckBox(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> &amp;LabelText);<span class="comment"></span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">                /// @brief Creates a List Box.</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">                /// @return Returns a pointer to the created List Box.</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">                /// @param Name The name of the List Box.</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the List Box.</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">                /// @param ScrollStyle The style of scrollbar you want to create, see Scrollbar documentation for more details.</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1ListBox.xhtml" title="This is a widget for displaying a list of captions in a box.">ListBox</a>* CreateListBox(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763" title="Used by the scrollbar class to determine what styling should be used for the scrollbar.">UI::ScrollbarStyle</a>&amp; ScrollStyle);<span class="comment"></span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">                /// @brief Creates a Spinner.</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">                /// @return Returns a pointer to the created Spinner.</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment">                /// @param Name The Name for the Widget.</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the Spinner.</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">                /// @param SStyle The layout of buttons this widget will have.  See SpinnerStyle enum or class description for more details.</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">                /// @param GlyphHeight The desired relative height of the text you want.</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>* CreateSpinner(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6" title="Used by the spinner class to determine what styling should be used for the spinner.">UI::SpinnerStyle</a>&amp; SStyle, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; GlyphHeight);<span class="comment"></span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">                /// @brief Creates a scrolled cell grid.</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">                /// @return Returns a pointer to the created ScrolledCellGrid.</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">                /// @param Name The name of the widget.</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the ScrolledCellGrid.</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment">                /// @param Thickness The width of the vertical scrollbar in relative units.  The same amount of actual pixels is used</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">                /// to determine the height of the horizontal scrollbar.</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment">                /// @param Style An enum value representing how you want your scrollbar constructed.  See class details for more info.</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use scrollbars to navigate the cells on ...">ScrolledCellGrid</a>* CreateScrolledCellGrid(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Thickness, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763" title="Used by the scrollbar class to determine what styling should be used for the scrollbar.">UI::ScrollbarStyle</a>&amp; Style);<span class="comment"></span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">                /// @brief Creates a paged cell grid.</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">                /// @return Returns a pointer to the created PagedCellGrid.</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment">                /// @param Name The name of the widget.</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the PagedCellGrid.</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">                /// @param SpnRect The Rect representing the position and size of the Spinner.</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment">                /// @param SStyle The style of spinner to create.</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">                /// @param GlyphHeight The desired lineheight of the glyphs to be used with the spinner.</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use a spinner to navigate through pages ...">PagedCellGrid</a>* CreatePagedCellGrid(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; SpnRect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6" title="Used by the spinner class to determine what styling should be used for the spinner.">UI::SpinnerStyle</a>&amp; SStyle, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; GlyphHeight);<span class="comment"></span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">                /// @brief Creates a drop down list.</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">                /// @return Returns a pointer to the created DropDownList.</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">                /// @param Name The Name for the Widget.</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment">                /// @param Rect The renderable rect representing the position and size of this widget.</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment">                /// @param LineHeight The lineheight you want the text to have. If the Rect passed in is relative, this will expect LineHeight to be relative as well.</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">                /// @param ScrollStyle The style of the scrollbar you want for this List Box.  See Scrollbar class for more information.</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1DropDownList.xhtml" title="A widget that displays one selection from a list that can have it&#39;s visibility toggled.">DropDownList</a>* CreateDropDownList(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763" title="Used by the scrollbar class to determine what styling should be used for the scrollbar.">UI::ScrollbarStyle</a>&amp; ScrollStyle);<span class="comment"></span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">                /// @brief Creates a tabset.</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">                /// @return Returns a pointer to the created tabset.</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment">                /// @param Name The Name for the Widget.</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">                /// @param SetRect The Rect representing the position and size of all the Renderable Sets generated by the tabset.</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml" title="This is a widget that stores sets of renderables but only displays one at a time.">TabSet</a>* CreateTabSet(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; SetRect);<span class="comment"></span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">                /// @brief Creates an EnclosedRenderableContainerWidget.</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">                /// @return Returns a pointer to the created EnclosedRenderableContainerWidget.</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment">                /// @param Name The name of the window.</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the window.</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml" title="This is an abstract class for the creation and storage of widgets to be used by other classes...">EnclosedRenderableContainerWidget</a>* CreateEnclosedRenderableContainerWidget(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment"></span>                <span class="comment">// Destroying Widgets</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">                /// @brief Destroys a widget.</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">                /// @param ToBeDestroyed Pointer to the widget you want destroyed.</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyWidget(<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>* ToBeDestroyed);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        };<span class="comment">//RenderableFactory</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">        /// @class ExtendedRenderableFactory</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">        /// @headerfile renderablecontainer.h</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">        /// @brief This class is responsible for the creation and destruction of all UI renderables.</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">        /// @details This class contains all the renderables of the standard RenderableFactory, plus a few extra exotic renderables.</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00238"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml">  238</a></span>&#160;<span class="comment"></span>        <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml" title="This class is responsible for the creation and destruction of all UI renderables.">ExtendedRenderableFactory</a> : <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml" title="This class is responsible for the creation and destruction of all UI renderables.">RenderableFactory</a></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        {</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">                /// @brief Class constructor.</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment"></span>                <a class="code" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml" title="This class is responsible for the creation and destruction of all UI renderables.">ExtendedRenderableFactory</a>();<span class="comment"></span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment">                /// @brief Class destructor.</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> ~<a class="code" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml" title="This class is responsible for the creation and destruction of all UI renderables.">ExtendedRenderableFactory</a>();</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment"></span>                <span class="comment">// Creating BasicRenderables</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment">                /// @brief Creates a linelist.</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">                /// @return Returns a pointer to the created linelist.</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">                /// @param Name The name to give to this Linelist.</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1LineList.xhtml" title="This is an object comprised of a series of lines.">LineList</a>* CreateLineList(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment"></span>                <span class="comment">// Creating Widgets</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">                /// @brief Creates a Window.</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">                /// @return Returns a pointer to the created Window.</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">                /// @param Name The name of the Window.</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the Window.</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Window.xhtml" title="This is a container widget capable of holding any other widget.">Window</a>* CreateWidgetWindow(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">                /// @brief Creates a Menu.</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">                /// @return Returns a pointer to the created Menu.</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">                /// @param Name The name of the Menu.</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">                /// @param Rect The Rect representing the position and size of the Menu.</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Menu.xhtml" title="This class is a control mechanism for multiple windows in a heirarchy.">Menu</a>* CreateMenu(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">                /// @brief Creates an OpenRenderableContainerWidget.</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">                /// @return Returns a pointer to the creates OpenRenderableContainerWidget.</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">                /// @param Name The name of the OpenRenderableContainerWidget.</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1OpenRenderableContainerWidget.xhtml">OpenRenderableContainerWidget</a>* CreateOpenRenderableContainerWidget(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        };<span class="comment">//ExtendedRenderableFactory</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">        /// @class RenderableContainer</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">        /// @headerfile renderablecontainer.h</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment">        /// @brief</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment">        /// @details</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1RenderableContainer.xhtml">  279</a></span>&#160;<span class="comment"></span>        <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1UI_1_1RenderableContainer.xhtml">RenderableContainer</a> : <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml" title="This class is responsible for the creation and destruction of all UI renderables.">ExtendedRenderableFactory</a></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keyword">public</span>:</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keyword">typedef</span> std::vector&lt;BasicRenderable*&gt;             BasicRenderableContainer;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="keyword">typedef</span> BasicRenderableContainer::iterator        BasicRenderableIterator;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keyword">typedef</span> BasicRenderableContainer::const_iterator  ConstBasicRenderableIterator;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                <span class="keyword">typedef</span> std::vector&lt;Widget*&gt;                      WidgetContainer;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <span class="keyword">typedef</span> WidgetContainer::iterator                 WidgetIterator;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <span class="keyword">typedef</span> WidgetContainer::const_iterator           ConstWidgetIterator;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                <a class="code" href="classMezzanine_1_1UI_1_1ResizeHandler.xhtml">ResizeHandler</a>* Resize;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                BasicRenderableContainer BasicRenderables;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                WidgetContainer Widgets;<span class="comment"></span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::GetScreen()</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">Screen</a>* GetScreen() = 0;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">                /// @brief Class constructor.</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment"></span>                <a class="code" href="classMezzanine_1_1UI_1_1RenderableContainer.xhtml">RenderableContainer</a>();<span class="comment"></span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">                /// @brief Class destructor.</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> ~<a class="code" href="classMezzanine_1_1UI_1_1RenderableContainer.xhtml">RenderableContainer</a>();</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment"></span>                <span class="comment">// Creating BasicRenderables</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateRectangle(const RenderableRect&amp; Rect)</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Rectangle.xhtml" title="This class is a helper class, specifically for use with background sprites and colours.">Rectangle</a>* CreateRectangle(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateCaption(ConstString&amp; Name, const RenderableRect&amp; Rect, const Whole&amp; Glyph, const String&amp; Text)</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Caption.xhtml" title="This class is a helper class, specifically for use with text.">Caption</a>* CreateCaption(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; <a class="code" href="classMezzanine_1_1UI_1_1Glyph.xhtml" title="Class used to describe a single glyph or character available for text operations.">Glyph</a>, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateCaption(ConstString&amp; Name, const RenderableRect&amp; Rect, const Real&amp; LineHeight, const String&amp; Text)</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Caption.xhtml" title="This class is a helper class, specifically for use with text.">Caption</a>* CreateCaption(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateMarkupText(ConstString&amp; Name, const RenderableRect&amp; Rect, const Whole&amp; Glyph, const String&amp; Text)</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1MarkupText.xhtml" title="This is a helper class for use with specialized text display.">MarkupText</a>* CreateMarkupText(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Glyph, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateMarkupText(ConstString&amp; Name, const RenderableRect&amp; Rect, const Real&amp; LineHeight, const String&amp; Text)</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1MarkupText.xhtml" title="This is a helper class for use with specialized text display.">MarkupText</a>* CreateMarkupText(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">                /// @copydoc ExtendedRenderableFactory::CreateLineList(ConstString&amp; Name)</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1LineList.xhtml" title="This is an object comprised of a series of lines.">LineList</a>* CreateLineList(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment"></span>                <span class="comment">// Working with all BasicRenderables</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">                /// @brief Adds a BasicRenderable to this container.</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">                /// @details This function is necessary when creating custom widgets in game logic.</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">                /// @param ToAdd The BasicRenderable to be added.</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <span class="keywordtype">void</span> AddBasicRenderable(<a class="code" href="classMezzanine_1_1UI_1_1BasicRenderable.xhtml" title="Base class for renderables that generate verticies.">BasicRenderable</a>* ToAdd);<span class="comment"></span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">                /// @brief Gets an already created BasicRenderable by name.</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">                /// @return Returns a pointer to the BasicRenderable of the specified name.</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1BasicRenderable.xhtml" title="Base class for renderables that generate verticies.">BasicRenderable</a>* GetBasicRenderable(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name);<span class="comment"></span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">                /// @brief Gets an already created BasicRenderable by index.</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">                /// @return Returns a pointer to the BasicRenderable at the specified index.</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1BasicRenderable.xhtml" title="Base class for renderables that generate verticies.">BasicRenderable</a>* GetBasicRenderable(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index);<span class="comment"></span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">                /// @brief Gets the number of widgets created and stored in this class.</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">                /// @return Returns the number of widgets this class is storing.</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> GetNumBasicRenderables();<span class="comment"></span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::DestroyBasicRenderable(BasicRenderable* ToBeDestroyed)</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyBasicRenderable(<a class="code" href="classMezzanine_1_1UI_1_1BasicRenderable.xhtml" title="Base class for renderables that generate verticies.">BasicRenderable</a>* ToBeDestroyed);<span class="comment"></span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">                /// @brief Destroys all BasicRenderables being stored in this container.</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyAllBasicRenderables();</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment"></span>                <span class="comment">// Creating Widgets</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateButton(ConstString&amp; Name, const RenderableRect&amp; Rect)</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* CreateButton(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateButton(ConstString&amp; Name, const RenderableRect&amp; Rect, const Whole&amp; Glyph, ConstString&amp; Text)</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* CreateButton(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Glyph, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateButton(ConstString&amp; Name, const RenderableRect&amp; Rect, const Real&amp; LineHeight, ConstString&amp; Text)</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* CreateButton(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Text);<span class="comment"></span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateScrollbar(ConstString&amp; Name, const RenderableRect&amp; Rect, const UI::ScrollbarStyle&amp; Style)</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>* CreateScrollbar(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763" title="Used by the scrollbar class to determine what styling should be used for the scrollbar.">UI::ScrollbarStyle</a>&amp; Style);<span class="comment"></span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateCheckBox(ConstString&amp; Name, const RenderableRect&amp; Rect, const Real&amp; LineHeight, const String &amp;LabelText)</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>* CreateCheckBox(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; LabelText);<span class="comment"></span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateListBox(ConstString&amp; Name, const RenderableRect&amp; Rect, const UI::ScrollbarStyle&amp; ScrollbarStyle)</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1ListBox.xhtml" title="This is a widget for displaying a list of captions in a box.">ListBox</a>* CreateListBox(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763" title="Used by the scrollbar class to determine what styling should be used for the scrollbar.">UI::ScrollbarStyle</a>&amp; ScrollStyle);<span class="comment"></span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateSpinner(ConstString&amp; Name, const RenderableRect&amp; Rect, const UI::SpinnerStyle&amp; SStyle, const Real&amp; GlyphHeight)</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>* CreateSpinner(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6" title="Used by the spinner class to determine what styling should be used for the spinner.">UI::SpinnerStyle</a>&amp; SStyle, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; GlyphHeight);<span class="comment"></span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateScrolledCellGrid(ConstString&amp; Name, const RenderableRect&amp; Rect, const Real&amp; Thickness, const UI::ScrollbarStyle&amp; Style)</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use scrollbars to navigate the cells on ...">ScrolledCellGrid</a>* CreateScrolledCellGrid(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Thickness, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763" title="Used by the scrollbar class to determine what styling should be used for the scrollbar.">UI::ScrollbarStyle</a>&amp; Style);<span class="comment"></span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreatePagedCellGrid(ConstString&amp; Name, const RenderableRect&amp; Rect, const RenderableRect&amp; SpnRect, const UI::SpinnerStyle&amp; SStyle, const Real&amp; GlyphHeight)</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use a spinner to navigate through pages ...">PagedCellGrid</a>* CreatePagedCellGrid(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; SpnRect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6" title="Used by the spinner class to determine what styling should be used for the spinner.">UI::SpinnerStyle</a>&amp; SStyle, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; GlyphHeight);<span class="comment"></span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateDropDownList(ConstString&amp; Name, const RenderableRect&amp; Rect, const Real&amp; LineHeight, const UI::ScrollbarStyle&amp; ScrollStyle)</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1DropDownList.xhtml" title="A widget that displays one selection from a list that can have it&#39;s visibility toggled.">DropDownList</a>* CreateDropDownList(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LineHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763" title="Used by the scrollbar class to determine what styling should be used for the scrollbar.">UI::ScrollbarStyle</a>&amp; ScrollStyle);<span class="comment"></span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateTabSet(ConstString&amp; Name, const RenderableRect&amp; SetRect)</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml" title="This is a widget that stores sets of renderables but only displays one at a time.">TabSet</a>* CreateTabSet(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; SetRect);<span class="comment"></span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::CreateEnclosedRenderableContainerWidget(ConstString&amp; Name, const RenderableRect&amp; Rect)</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml" title="This is an abstract class for the creation and storage of widgets to be used by other classes...">EnclosedRenderableContainerWidget</a>* CreateEnclosedRenderableContainerWidget(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">                /// @copydoc ExtendedRenderableFactory::CreateWidgetWindow(ConstString&amp; Name, const RenderableRect&amp; Rect)</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Window.xhtml" title="This is a container widget capable of holding any other widget.">Window</a>* CreateWidgetWindow(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">                /// @copydoc ExtendedRenderableFactory::CreateMenu(ConstString&amp; Name, const RenderableRect&amp; Rect)</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Menu.xhtml" title="This class is a control mechanism for multiple windows in a heirarchy.">Menu</a>* CreateMenu(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; Rect);<span class="comment"></span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment">                /// @copydoc ExtendedRenderableFactory::CreateOpenRenderableContainerWidget(ConstString&amp; Name)</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1OpenRenderableContainerWidget.xhtml">OpenRenderableContainerWidget</a>* CreateOpenRenderableContainerWidget(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name);</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">                ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment"></span>                <span class="comment">// Working with all Widgets</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment">                /// @brief Adds a widget to this layer.</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment">                /// @details This function is necessary when creating custom widgets in game logic.</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">                /// @param ToAdd The widget to be added.</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <span class="keywordtype">void</span> AddWidget(<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>* ToAdd);<span class="comment"></span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment">                /// @brief Gets an already created widget by name.</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">                /// @return Returns a pointer to the widget of the specified name.</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>* GetWidget(<a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; Name);<span class="comment"></span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">                /// @brief Gets an already created widget by index.</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">                /// @return Returns a pointer to the widget at the specified index.</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>* GetWidget(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index);<span class="comment"></span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment">                /// @brief Gets the number of widgets created and stored in this class.</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">                /// @return Returns the number of widgets this class is storing.</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> GetNumWidgets();<span class="comment"></span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment">                /// @copydoc RenderableFactory::DestroyWidget(Widget* ToBeDestroyed)</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyWidget(<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>* ToBeDestroyed);<span class="comment"></span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">                /// @brief Destroys all widgets being stored in this container.</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment"></span>                <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyAllWidgets();</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        };<span class="comment">//RenderableContainer</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    }<span class="comment">//UI</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 14 2013 00:19:06 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
