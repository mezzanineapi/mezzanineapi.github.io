<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Physics::PhysicsManager Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September 2, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Physics.xhtml">Physics</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml">PhysicsManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1Physics_1_1PhysicsManager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Physics::PhysicsManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is simply a place for storing all the <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Related functions.  
 <a href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Physics::PhysicsManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1PhysicsManager__inherit__graph.svg" width="198" height="214"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Physics::PhysicsManager:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1PhysicsManager__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afc82657d492a34f7ba5a3ef7eb6a8ad1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afc82657d492a34f7ba5a3ef7eb6a8ad1"></a>
typedef std::map&lt; <a class="el" href="classMezzanine_1_1ObjectPair.xhtml">ObjectPair</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Collision</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#afc82657d492a34f7ba5a3ef7eb6a8ad1">CollisionContainer</a></td></tr>
<tr class="memdesc:afc82657d492a34f7ba5a3ef7eb6a8ad1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic container type for <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Collision</a> storage by this class. <br/></td></tr>
<tr class="separator:afc82657d492a34f7ba5a3ef7eb6a8ad1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecff4e6e6b0dd3bef87c7e14669b1338"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aecff4e6e6b0dd3bef87c7e14669b1338"></a>
typedef <br class="typebreak"/>
CollisionContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aecff4e6e6b0dd3bef87c7e14669b1338">CollisionIterator</a></td></tr>
<tr class="memdesc:aecff4e6e6b0dd3bef87c7e14669b1338"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator type for <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Collision</a> instances stored by this class. <br/></td></tr>
<tr class="separator:aecff4e6e6b0dd3bef87c7e14669b1338"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a546020b4fbf97e797bb099e365c1b9a8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a546020b4fbf97e797bb099e365c1b9a8"></a>
typedef <br class="typebreak"/>
CollisionContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a546020b4fbf97e797bb099e365c1b9a8">ConstCollisionIterator</a></td></tr>
<tr class="memdesc:a546020b4fbf97e797bb099e365c1b9a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const Iterator type for <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Collision</a> instances stored by this class. <br/></td></tr>
<tr class="separator:a546020b4fbf97e797bb099e365c1b9a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd13601fa7362d3bbf7f87fbaab08797"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acd13601fa7362d3bbf7f87fbaab08797"></a>
typedef <br class="typebreak"/>
ConstraintContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#acd13601fa7362d3bbf7f87fbaab08797">ConstConstraintIterator</a></td></tr>
<tr class="memdesc:acd13601fa7362d3bbf7f87fbaab08797"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const Iterator type for <a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Constraint</a> instances stored by this class. <br/></td></tr>
<tr class="separator:acd13601fa7362d3bbf7f87fbaab08797"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8065dfaca8fd9ab3350b78720976aa4f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8065dfaca8fd9ab3350b78720976aa4f"></a>
typedef std::vector&lt; <a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Constraint</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a8065dfaca8fd9ab3350b78720976aa4f">ConstraintContainer</a></td></tr>
<tr class="memdesc:a8065dfaca8fd9ab3350b78720976aa4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic container type for <a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Constraint</a> storage by this class. <br/></td></tr>
<tr class="separator:a8065dfaca8fd9ab3350b78720976aa4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad90471c9a969a4225323c59f464f83a6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad90471c9a969a4225323c59f464f83a6"></a>
typedef <br class="typebreak"/>
ConstraintContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ad90471c9a969a4225323c59f464f83a6">ConstraintIterator</a></td></tr>
<tr class="memdesc:ad90471c9a969a4225323c59f464f83a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator type for <a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Constraint</a> instances stored by this class. <br/></td></tr>
<tr class="separator:ad90471c9a969a4225323c59f464f83a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4644d2315ca265cce0783a6fc901749d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4644d2315ca265cce0783a6fc901749d"></a>
typedef <br class="typebreak"/>
WorldTriggerContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a4644d2315ca265cce0783a6fc901749d">ConstWorldTriggerIterator</a></td></tr>
<tr class="memdesc:a4644d2315ca265cce0783a6fc901749d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const Iterator type for <a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> instances stored by this class. <br/></td></tr>
<tr class="separator:a4644d2315ca265cce0783a6fc901749d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3fd11323d6629e183dbecf65174a766"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad3fd11323d6629e183dbecf65174a766"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ad3fd11323d6629e183dbecf65174a766">WorldTriggerContainer</a></td></tr>
<tr class="memdesc:ad3fd11323d6629e183dbecf65174a766"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic container type for <a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> storage by this class. <br/></td></tr>
<tr class="separator:ad3fd11323d6629e183dbecf65174a766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3185c822612972234d70aa66ef857e85"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3185c822612972234d70aa66ef857e85"></a>
typedef <br class="typebreak"/>
WorldTriggerContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a3185c822612972234d70aa66ef857e85">WorldTriggerIterator</a></td></tr>
<tr class="memdesc:a3185c822612972234d70aa66ef857e85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator type for <a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> instances stored by this class. <br/></td></tr>
<tr class="separator:a3185c822612972234d70aa66ef857e85"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a12bb0a6a9e555187d8fdab82da4faf0f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a12bb0a6a9e555187d8fdab82da4faf0f">PhysicsManager</a> ()</td></tr>
<tr class="memdesc:a12bb0a6a9e555187d8fdab82da4faf0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple Constructor.  <a href="#a12bb0a6a9e555187d8fdab82da4faf0f">More...</a><br/></td></tr>
<tr class="separator:a12bb0a6a9e555187d8fdab82da4faf0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeaf622f38c3f506df79ca8850a21927"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#afeaf622f38c3f506df79ca8850a21927">PhysicsManager</a> (const <a class="el" href="classMezzanine_1_1Physics_1_1ManagerConstructionInfo.xhtml">ManagerConstructionInfo</a> &amp;Info)</td></tr>
<tr class="memdesc:afeaf622f38c3f506df79ca8850a21927"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple Constructor.  <a href="#afeaf622f38c3f506df79ca8850a21927">More...</a><br/></td></tr>
<tr class="separator:afeaf622f38c3f506df79ca8850a21927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a922582f50e60d590297ed437d3099cbe"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a922582f50e60d590297ed437d3099cbe">PhysicsManager</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode)</td></tr>
<tr class="memdesc:a922582f50e60d590297ed437d3099cbe"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor.  <a href="#a922582f50e60d590297ed437d3099cbe">More...</a><br/></td></tr>
<tr class="separator:a922582f50e60d590297ed437d3099cbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a788bd6cbae7e294013d97ef806052c6a"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a788bd6cbae7e294013d97ef806052c6a">~PhysicsManager</a> ()</td></tr>
<tr class="memdesc:a788bd6cbae7e294013d97ef806052c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deconstructor.  <a href="#a788bd6cbae7e294013d97ef806052c6a">More...</a><br/></td></tr>
<tr class="separator:a788bd6cbae7e294013d97ef806052c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba6878139fdacad9535a9223fdb0e911"><td class="memItemLeft" align="right" valign="top">btSoftRigidDynamicsWorld *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aba6878139fdacad9535a9223fdb0e911">_GetPhysicsWorldPointer</a> ()</td></tr>
<tr class="memdesc:aba6878139fdacad9535a9223fdb0e911"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns a pointer to the bullet physics world. This is for internal use only.  <a href="#aba6878139fdacad9535a9223fdb0e911">More...</a><br/></td></tr>
<tr class="separator:aba6878139fdacad9535a9223fdb0e911"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd07efe438c29abfc7ce2d15446e9ae2"><td class="memItemLeft" align="right" valign="top">const btSoftRigidDynamicsWorld *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#afd07efe438c29abfc7ce2d15446e9ae2">_GetPhysicsWorldPointer</a> () const </td></tr>
<tr class="memdesc:afd07efe438c29abfc7ce2d15446e9ae2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns a pointer to the bullet physics world. This is for internal use only.  <a href="#afd07efe438c29abfc7ce2d15446e9ae2">More...</a><br/></td></tr>
<tr class="separator:afd07efe438c29abfc7ce2d15446e9ae2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6bb4dbf0836be1b6624aaf83c7583ab"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ac6bb4dbf0836be1b6624aaf83c7583ab">AddConstraint</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *Con, bool DisableCollisions=false)</td></tr>
<tr class="memdesc:ac6bb4dbf0836be1b6624aaf83c7583ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a constraint to the world.  <a href="#ac6bb4dbf0836be1b6624aaf83c7583ab">More...</a><br/></td></tr>
<tr class="separator:ac6bb4dbf0836be1b6624aaf83c7583ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2b022f1124ee3d5ecca4e29620c8a3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ab2b022f1124ee3d5ecca4e29620c8a3d">AddWorldTrigger</a> (<a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *Trig)</td></tr>
<tr class="memdesc:ab2b022f1124ee3d5ecca4e29620c8a3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a trigger to the world.  <a href="#ab2b022f1124ee3d5ecca4e29620c8a3d">More...</a><br/></td></tr>
<tr class="separator:ab2b022f1124ee3d5ecca4e29620c8a3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6764be929688d57f0fa25d3c035ccd73"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aecff4e6e6b0dd3bef87c7e14669b1338">CollisionIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a6764be929688d57f0fa25d3c035ccd73">BeginCollision</a> ()</td></tr>
<tr class="memdesc:a6764be929688d57f0fa25d3c035ccd73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an CollisionIterator to the first <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>.  <a href="#a6764be929688d57f0fa25d3c035ccd73">More...</a><br/></td></tr>
<tr class="separator:a6764be929688d57f0fa25d3c035ccd73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbb2dd6c53e68fe741c226b22310048e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a546020b4fbf97e797bb099e365c1b9a8">ConstCollisionIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#abbb2dd6c53e68fe741c226b22310048e">BeginCollision</a> () const </td></tr>
<tr class="memdesc:abbb2dd6c53e68fe741c226b22310048e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstCollisionIterator to the first <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>.  <a href="#abbb2dd6c53e68fe741c226b22310048e">More...</a><br/></td></tr>
<tr class="separator:abbb2dd6c53e68fe741c226b22310048e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af74ec5cd09531749bdc4ddf305928af0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#af74ec5cd09531749bdc4ddf305928af0">ClearPhysicsMetaData</a> ()</td></tr>
<tr class="memdesc:af74ec5cd09531749bdc4ddf305928af0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all data relating to actors and other simulation objects from the physics world.  <a href="#af74ec5cd09531749bdc4ddf305928af0">More...</a><br/></td></tr>
<tr class="separator:af74ec5cd09531749bdc4ddf305928af0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa9ca6914153308a765a8740d6d2eadf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#afa9ca6914153308a765a8740d6d2eadf">Deinitialize</a> ()</td></tr>
<tr class="memdesc:afa9ca6914153308a765a8740d6d2eadf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes this manager from any necessary configuration so it can be safely disposed of.  <a href="#afa9ca6914153308a765a8740d6d2eadf">More...</a><br/></td></tr>
<tr class="separator:afa9ca6914153308a765a8740d6d2eadf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7976f9e04c671d175d25fab25f03e92a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7976f9e04c671d175d25fab25f03e92a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a7976f9e04c671d175d25fab25f03e92a">DestroyAllCollisions</a> ()</td></tr>
<tr class="memdesc:a7976f9e04c671d175d25fab25f03e92a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all collisions currently being stored and processed in the manager. <br/></td></tr>
<tr class="separator:a7976f9e04c671d175d25fab25f03e92a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11fc996c5f5f5c8d24feb1eaccf651cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a11fc996c5f5f5c8d24feb1eaccf651cb">DestroyAllConstraints</a> ()</td></tr>
<tr class="memdesc:a11fc996c5f5f5c8d24feb1eaccf651cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all constraints currently in the manager.  <a href="#a11fc996c5f5f5c8d24feb1eaccf651cb">More...</a><br/></td></tr>
<tr class="separator:a11fc996c5f5f5c8d24feb1eaccf651cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a50f1d0024d20958bc5c5c5f8fc1005"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6a50f1d0024d20958bc5c5c5f8fc1005"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a6a50f1d0024d20958bc5c5c5f8fc1005">DestroyAllWorldTriggers</a> ()</td></tr>
<tr class="memdesc:a6a50f1d0024d20958bc5c5c5f8fc1005"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all triggers currently in the manager. <br/></td></tr>
<tr class="separator:a6a50f1d0024d20958bc5c5c5f8fc1005"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22ad8bb3a07a89a19d1a2f93f6d2de99"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aecff4e6e6b0dd3bef87c7e14669b1338">CollisionIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a22ad8bb3a07a89a19d1a2f93f6d2de99">EndCollision</a> ()</td></tr>
<tr class="memdesc:a22ad8bb3a07a89a19d1a2f93f6d2de99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a CollisionIterator to one past the last <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>.  <a href="#a22ad8bb3a07a89a19d1a2f93f6d2de99">More...</a><br/></td></tr>
<tr class="separator:a22ad8bb3a07a89a19d1a2f93f6d2de99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82e12561e2b757ebb3a15389c55f867a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a546020b4fbf97e797bb099e365c1b9a8">ConstCollisionIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a82e12561e2b757ebb3a15389c55f867a">EndCollision</a> () const </td></tr>
<tr class="memdesc:a82e12561e2b757ebb3a15389c55f867a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstCollisionIterator to one past the last <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>.  <a href="#a82e12561e2b757ebb3a15389c55f867a">More...</a><br/></td></tr>
<tr class="separator:a82e12561e2b757ebb3a15389c55f867a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a266149cc7526d8d40a48eec901fe9e14"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a266149cc7526d8d40a48eec901fe9e14">GetCollision</a> (<a class="el" href="classMezzanine_1_1ObjectPair.xhtml">ObjectPair</a> *Pair)</td></tr>
<tr class="memdesc:a266149cc7526d8d40a48eec901fe9e14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a> by object pair.  <a href="#a266149cc7526d8d40a48eec901fe9e14">More...</a><br/></td></tr>
<tr class="separator:a266149cc7526d8d40a48eec901fe9e14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae460723cdf5f8b64c1fef70b477b6bb9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ae460723cdf5f8b64c1fef70b477b6bb9">GetConstraint</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:ae460723cdf5f8b64c1fef70b477b6bb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a constraint by index.  <a href="#ae460723cdf5f8b64c1fef70b477b6bb9">More...</a><br/></td></tr>
<tr class="separator:ae460723cdf5f8b64c1fef70b477b6bb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a878e7f164fd3a6ccac699a9ae5971146"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1DebugDrawWorkUnit.xhtml">DebugDrawWorkUnit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a878e7f164fd3a6ccac699a9ae5971146">GetDebugDrawWork</a> ()</td></tr>
<tr class="memdesc:a878e7f164fd3a6ccac699a9ae5971146"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the work unit that updates the debug drawer.  <a href="#a878e7f164fd3a6ccac699a9ae5971146">More...</a><br/></td></tr>
<tr class="separator:a878e7f164fd3a6ccac699a9ae5971146"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6ca101ec427ec846249500aea4d5508"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ae6ca101ec427ec846249500aea4d5508">GetDebugRenderingMode</a> () const </td></tr>
<tr class="memdesc:ae6ca101ec427ec846249500aea4d5508"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing currently enabled?  <a href="#ae6ca101ec427ec846249500aea4d5508">More...</a><br/></td></tr>
<tr class="separator:ae6ca101ec427ec846249500aea4d5508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a4c429fddc2a58f8e0611b83f1f4f04"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a5a4c429fddc2a58f8e0611b83f1f4f04">GetGravity</a> ()</td></tr>
<tr class="memdesc:a5a4c429fddc2a58f8e0611b83f1f4f04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the gravity.  <a href="#a5a4c429fddc2a58f8e0611b83f1f4f04">More...</a><br/></td></tr>
<tr class="separator:a5a4c429fddc2a58f8e0611b83f1f4f04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46dab7d45238ca1d6c263670022bd512"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a46dab7d45238ca1d6c263670022bd512">GetImplementationTypeName</a> () const </td></tr>
<tr class="memdesc:a46dab7d45238ca1d6c263670022bd512"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Allows any manager name to be sent to a stream. Primarily used for logging.  <a href="#a46dab7d45238ca1d6c263670022bd512">More...</a><br/></td></tr>
<tr class="separator:a46dab7d45238ca1d6c263670022bd512"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15d411fa9ad5f60b38d09eb6119ab0ba"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a15d411fa9ad5f60b38d09eb6119ab0ba">GetInterfaceType</a> () const </td></tr>
<tr class="memdesc:a15d411fa9ad5f60b38d09eb6119ab0ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the type of this manager.  <a href="#a15d411fa9ad5f60b38d09eb6119ab0ba">More...</a><br/></td></tr>
<tr class="separator:a15d411fa9ad5f60b38d09eb6119ab0ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d4ff6a5328ea9459f6bee325be6dbff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a5d4ff6a5328ea9459f6bee325be6dbff">GetNumCollisions</a> ()</td></tr>
<tr class="memdesc:a5d4ff6a5328ea9459f6bee325be6dbff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of Collisions currently in the world.  <a href="#a5d4ff6a5328ea9459f6bee325be6dbff">More...</a><br/></td></tr>
<tr class="separator:a5d4ff6a5328ea9459f6bee325be6dbff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e72a9f8c52ff364be82cce4f86150ce"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a4e72a9f8c52ff364be82cce4f86150ce">GetNumConstraints</a> ()</td></tr>
<tr class="memdesc:a4e72a9f8c52ff364be82cce4f86150ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of constraints currently in the world.  <a href="#a4e72a9f8c52ff364be82cce4f86150ce">More...</a><br/></td></tr>
<tr class="separator:a4e72a9f8c52ff364be82cce4f86150ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafaa8b1a2434504c2367498e2bd9ee40"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aafaa8b1a2434504c2367498e2bd9ee40">GetNumWorldTriggers</a> ()</td></tr>
<tr class="memdesc:aafaa8b1a2434504c2367498e2bd9ee40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of triggers currently in the world.  <a href="#aafaa8b1a2434504c2367498e2bd9ee40">More...</a><br/></td></tr>
<tr class="separator:aafaa8b1a2434504c2367498e2bd9ee40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5929e06ed5493b8efc8f04c1b9dc7b6"><td class="memItemLeft" align="right" valign="top">Threading::DefaultWorkUnit *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ab5929e06ed5493b8efc8f04c1b9dc7b6">GetSimulationWork</a> ()</td></tr>
<tr class="memdesc:ab5929e06ed5493b8efc8f04c1b9dc7b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the work unit that steps the simulation.  <a href="#ab5929e06ed5493b8efc8f04c1b9dc7b6">More...</a><br/></td></tr>
<tr class="separator:ab5929e06ed5493b8efc8f04c1b9dc7b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e88d83d4acb09aa9f4e50ae4b64becd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a8e88d83d4acb09aa9f4e50ae4b64becd">GetSoftGravity</a> ()</td></tr>
<tr class="memdesc:a8e88d83d4acb09aa9f4e50ae4b64becd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the soft body gravity.  <a href="#a8e88d83d4acb09aa9f4e50ae4b64becd">More...</a><br/></td></tr>
<tr class="separator:a8e88d83d4acb09aa9f4e50ae4b64becd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a397a8242c84df207e3af00c07ba5001c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a397a8242c84df207e3af00c07ba5001c">GetWorldTrigger</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name)</td></tr>
<tr class="memdesc:a397a8242c84df207e3af00c07ba5001c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a trigger by name.  <a href="#a397a8242c84df207e3af00c07ba5001c">More...</a><br/></td></tr>
<tr class="separator:a397a8242c84df207e3af00c07ba5001c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cf85904a7d157a4907970388293be84"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a2cf85904a7d157a4907970388293be84">GetWorldTrigger</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:a2cf85904a7d157a4907970388293be84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a trigger by index.  <a href="#a2cf85904a7d157a4907970388293be84">More...</a><br/></td></tr>
<tr class="separator:a2cf85904a7d157a4907970388293be84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d6ce737a3e1aae4e82d1b4b4426b670"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1WorldTriggerUpdateWorkUnit.xhtml">WorldTriggerUpdateWorkUnit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a4d6ce737a3e1aae4e82d1b4b4426b670">GetWorldTriggerUpdateWork</a> ()</td></tr>
<tr class="memdesc:a4d6ce737a3e1aae4e82d1b4b4426b670"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the work unit that updates all WorldTriggers.  <a href="#a4d6ce737a3e1aae4e82d1b4b4426b670">More...</a><br/></td></tr>
<tr class="separator:a4d6ce737a3e1aae4e82d1b4b4426b670"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae14da3bda7269e4c86190f9f3ca5e9a6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ae14da3bda7269e4c86190f9f3ca5e9a6">Initialize</a> ()</td></tr>
<tr class="memdesc:ae14da3bda7269e4c86190f9f3ca5e9a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures this manager for use prior to entering the main loop.  <a href="#ae14da3bda7269e4c86190f9f3ca5e9a6">More...</a><br/></td></tr>
<tr class="separator:ae14da3bda7269e4c86190f9f3ca5e9a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9beae292a93008c226eed6af5f7a1718"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9beae292a93008c226eed6af5f7a1718"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a9beae292a93008c226eed6af5f7a1718">MainLoopInitialize</a> ()</td></tr>
<tr class="memdesc:a9beae292a93008c226eed6af5f7a1718"><td class="mdescLeft">&#160;</td><td class="mdescRight">Does all of the necessary configuration to prepare for a running simulation. <br/></td></tr>
<tr class="separator:a9beae292a93008c226eed6af5f7a1718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac604afded57760a99e43f5269a95674b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ac604afded57760a99e43f5269a95674b">Pause</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> PL)</td></tr>
<tr class="memdesc:ac604afded57760a99e43f5269a95674b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the pause state of this manager, or has no effect depending on the value passed in.  <a href="#ac604afded57760a99e43f5269a95674b">More...</a><br/></td></tr>
<tr class="separator:ac604afded57760a99e43f5269a95674b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab14fd26999847cd4398c29fee2f0922f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ab14fd26999847cd4398c29fee2f0922f">PauseSimulation</a> (bool <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ac604afded57760a99e43f5269a95674b">Pause</a>)</td></tr>
<tr class="memdesc:ab14fd26999847cd4398c29fee2f0922f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pauses the simulation, preventing the physics world from taking action.  <a href="#ab14fd26999847cd4398c29fee2f0922f">More...</a><br/></td></tr>
<tr class="separator:ab14fd26999847cd4398c29fee2f0922f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fb56a6e3d9b80f56b27fbb78d3e54c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a3fb56a6e3d9b80f56b27fbb78d3e54c7">RemoveCollision</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *Col)</td></tr>
<tr class="memdesc:a3fb56a6e3d9b80f56b27fbb78d3e54c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes an existing collision from the world.  <a href="#a3fb56a6e3d9b80f56b27fbb78d3e54c7">More...</a><br/></td></tr>
<tr class="separator:a3fb56a6e3d9b80f56b27fbb78d3e54c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1d7926fbeb7be7e4a0c37fa2dc16ee6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ae1d7926fbeb7be7e4a0c37fa2dc16ee6">RemoveCollisionsContainingObject</a> (<a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *Object)</td></tr>
<tr class="memdesc:ae1d7926fbeb7be7e4a0c37fa2dc16ee6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all stored collisions that involve the specified Object.  <a href="#ae1d7926fbeb7be7e4a0c37fa2dc16ee6">More...</a><br/></td></tr>
<tr class="separator:ae1d7926fbeb7be7e4a0c37fa2dc16ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb0ccd361c92e10b97d1c3671d8bd9c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#adb0ccd361c92e10b97d1c3671d8bd9c6">RemoveConstraint</a> (<a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *Con)</td></tr>
<tr class="memdesc:adb0ccd361c92e10b97d1c3671d8bd9c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a constraint from the world.  <a href="#adb0ccd361c92e10b97d1c3671d8bd9c6">More...</a><br/></td></tr>
<tr class="separator:adb0ccd361c92e10b97d1c3671d8bd9c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acad7d5d038145babd47492d50e6705e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#acad7d5d038145babd47492d50e6705e6">RemoveWorldTrigger</a> (<a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *Trig)</td></tr>
<tr class="memdesc:acad7d5d038145babd47492d50e6705e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a trigger from the world.  <a href="#acad7d5d038145babd47492d50e6705e6">More...</a><br/></td></tr>
<tr class="separator:acad7d5d038145babd47492d50e6705e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ed9b45f7bd8ac5f7ff9ea8e639f914e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a7ed9b45f7bd8ac5f7ff9ea8e639f914e">ResetPhysicsWorld</a> (<a class="el" href="classMezzanine_1_1Physics_1_1ManagerConstructionInfo.xhtml">ManagerConstructionInfo</a> *Info=0)</td></tr>
<tr class="memdesc:a7ed9b45f7bd8ac5f7ff9ea8e639f914e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets all the internal physics structures in this manager.  <a href="#a7ed9b45f7bd8ac5f7ff9ea8e639f914e">More...</a><br/></td></tr>
<tr class="separator:a7ed9b45f7bd8ac5f7ff9ea8e639f914e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f7ed795ac22f8d578873f1c2d32da13"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a6f7ed795ac22f8d578873f1c2d32da13">SetDebugRenderingMode</a> (const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> DebugRenderingMode)</td></tr>
<tr class="memdesc:a6f7ed795ac22f8d578873f1c2d32da13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables and Disables <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing.  <a href="#a6f7ed795ac22f8d578873f1c2d32da13">More...</a><br/></td></tr>
<tr class="separator:a6f7ed795ac22f8d578873f1c2d32da13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f2d42737c69959c27c99b90bfba714"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a75f2d42737c69959c27c99b90bfba714">SetGravity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;pgrav)</td></tr>
<tr class="memdesc:a75f2d42737c69959c27c99b90bfba714"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the gravity.  <a href="#a75f2d42737c69959c27c99b90bfba714">More...</a><br/></td></tr>
<tr class="separator:a75f2d42737c69959c27c99b90bfba714"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a927829deef136599409dbe4a457caa7f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a927829deef136599409dbe4a457caa7f">SetIndividualGravity</a> (<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *Actor, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;igrav)</td></tr>
<tr class="memdesc:a927829deef136599409dbe4a457caa7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the gravity to be applied to a single object.  <a href="#a927829deef136599409dbe4a457caa7f">More...</a><br/></td></tr>
<tr class="separator:a927829deef136599409dbe4a457caa7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0a94fae485c6a5a7757d91c6591a52c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aa0a94fae485c6a5a7757d91c6591a52c">SetSimulationSubstepModifier</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Modifier)</td></tr>
<tr class="memdesc:aa0a94fae485c6a5a7757d91c6591a52c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the modifier to be used when stepping the physics simulation.  <a href="#aa0a94fae485c6a5a7757d91c6591a52c">More...</a><br/></td></tr>
<tr class="separator:aa0a94fae485c6a5a7757d91c6591a52c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80c884aa03664abee01cd2b1f2fba65f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a80c884aa03664abee01cd2b1f2fba65f">SetSoftGravity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;sgrav)</td></tr>
<tr class="memdesc:a80c884aa03664abee01cd2b1f2fba65f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the gravity for soft bodies.  <a href="#a80c884aa03664abee01cd2b1f2fba65f">More...</a><br/></td></tr>
<tr class="separator:a80c884aa03664abee01cd2b1f2fba65f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a304f54165e5db658020c466f857f51b4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a304f54165e5db658020c466f857f51b4">SimulationIsPaused</a> ()</td></tr>
<tr class="memdesc:a304f54165e5db658020c466f857f51b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets Whether or not the simulation is currently paused.  <a href="#a304f54165e5db658020c466f857f51b4">More...</a><br/></td></tr>
<tr class="separator:a304f54165e5db658020c466f857f51b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1WorldManager"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1WorldManager')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldManager.xhtml">Mezzanine::WorldManager</a></td></tr>
<tr class="memitem:a6320f79153f709a46378e30a728d0d74 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6320f79153f709a46378e30a728d0d74"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a6320f79153f709a46378e30a728d0d74">WorldManager</a> ()</td></tr>
<tr class="memdesc:a6320f79153f709a46378e30a728d0d74 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a6320f79153f709a46378e30a728d0d74 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93a174fb52b61df6c20f37b7a2e215bf inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a93a174fb52b61df6c20f37b7a2e215bf"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a93a174fb52b61df6c20f37b7a2e215bf">~WorldManager</a> ()</td></tr>
<tr class="memdesc:a93a174fb52b61df6c20f37b7a2e215bf inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a93a174fb52b61df6c20f37b7a2e215bf inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a3c9d7719bdfff980ff3d5c1aa4558c inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a8a3c9d7719bdfff980ff3d5c1aa4558c">_SetWorld</a> (<a class="el" href="classMezzanine_1_1World.xhtml">World</a> *Parent)</td></tr>
<tr class="memdesc:a8a3c9d7719bdfff980ff3d5c1aa4558c inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the world this manager belongs to. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">If</td><td>this manager is already initialized, this method will throw an "INVALID_STATE_EXCEPTION". </td></tr>
  </table>
  </dd>
</dl>
 <a href="#a8a3c9d7719bdfff980ff3d5c1aa4558c">More...</a><br/></td></tr>
<tr class="separator:a8a3c9d7719bdfff980ff3d5c1aa4558c inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af566d5c3c88c05c6b149c97b76d8d2b7 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1World.xhtml">World</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#af566d5c3c88c05c6b149c97b76d8d2b7">GetWorld</a> () const </td></tr>
<tr class="memdesc:af566d5c3c88c05c6b149c97b76d8d2b7 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the world this manager belongs to.  <a href="#af566d5c3c88c05c6b149c97b76d8d2b7">More...</a><br/></td></tr>
<tr class="separator:af566d5c3c88c05c6b149c97b76d8d2b7 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6761538d30323851f493aed70c1528da inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a6761538d30323851f493aed70c1528da">IsPaused</a> () const </td></tr>
<tr class="memdesc:a6761538d30323851f493aed70c1528da inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager is currently paused.  <a href="#a6761538d30323851f493aed70c1528da">More...</a><br/></td></tr>
<tr class="separator:a6761538d30323851f493aed70c1528da inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee3249f71f330394e81e349370d57a8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6ee3249f71f330394e81e349370d57a8">ManagerBase</a> ()</td></tr>
<tr class="memdesc:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a04cb832dc79f4559cc5b2f57cabfa70d"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a04cb832dc79f4559cc5b2f57cabfa70d">~ManagerBase</a> ()</td></tr>
<tr class="memdesc:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a70b61244d5182ad40dd056b2664a6aa7">GetInterfaceTypeAsString</a> () const </td></tr>
<tr class="memdesc:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a string of the interface type of this manager.  <a href="#a70b61244d5182ad40dd056b2664a6aa7">More...</a><br/></td></tr>
<tr class="separator:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#adc9433deb9026dbbb0b51f35a3a10f02">IsInitialized</a> () const </td></tr>
<tr class="memdesc:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager has been initialized.  <a href="#adc9433deb9026dbbb0b51f35a3a10f02">More...</a><br/></td></tr>
<tr class="separator:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:abb7b13e3f9b1e8048bff88bae1033bbc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#abb7b13e3f9b1e8048bff88bae1033bbc">Construct</a> (const <a class="el" href="classMezzanine_1_1Physics_1_1ManagerConstructionInfo.xhtml">ManagerConstructionInfo</a> &amp;Info)</td></tr>
<tr class="memdesc:abb7b13e3f9b1e8048bff88bae1033bbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">This takes care of all the real work in contructing this.  <a href="#abb7b13e3f9b1e8048bff88bae1033bbc">More...</a><br/></td></tr>
<tr class="separator:abb7b13e3f9b1e8048bff88bae1033bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae12f0e8a867b8d69daf07f01801e070"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aae12f0e8a867b8d69daf07f01801e070"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aae12f0e8a867b8d69daf07f01801e070">Destroy</a> ()</td></tr>
<tr class="memdesc:aae12f0e8a867b8d69daf07f01801e070"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tear down this physics world. <br/></td></tr>
<tr class="separator:aae12f0e8a867b8d69daf07f01801e070"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee045803bd3c252246329acbdf60123c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aee045803bd3c252246329acbdf60123c">ProcessAllCollisions</a> ()</td></tr>
<tr class="memdesc:aee045803bd3c252246329acbdf60123c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks the internal collision data and generates/updates collisions as necessary.  <a href="#aee045803bd3c252246329acbdf60123c">More...</a><br/></td></tr>
<tr class="separator:aee045803bd3c252246329acbdf60123c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ea74e38ce721131eb94cf0dece79e74"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a7ea74e38ce721131eb94cf0dece79e74">ProcessAllTriggers</a> ()</td></tr>
<tr class="memdesc:a7ea74e38ce721131eb94cf0dece79e74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls the ConditionsAreMet() and ApplyTrigger() functions of every stored trigger.  <a href="#a7ea74e38ce721131eb94cf0dece79e74">More...</a><br/></td></tr>
<tr class="separator:a7ea74e38ce721131eb94cf0dece79e74"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:a8b72492f708868854a97fd2824adc70b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8b72492f708868854a97fd2824adc70b"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a8b72492f708868854a97fd2824adc70b">InternalTickCallback</a> (btDynamicsWorld *world, btScalar timeStep)</td></tr>
<tr class="memdesc:a8b72492f708868854a97fd2824adc70b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal Callback that is called each substep of the simulation. <br/></td></tr>
<tr class="separator:a8b72492f708868854a97fd2824adc70b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a4eea1300970c1d83b0b88797888d09f0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4eea1300970c1d83b0b88797888d09f0"></a>
btBroadphaseInterface *&#160;</td><td class="memItemRight" valign="bottom"><b>BulletBroadphase</b></td></tr>
<tr class="separator:a4eea1300970c1d83b0b88797888d09f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9eda9815977a95cdb831dd68530a5b42"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9eda9815977a95cdb831dd68530a5b42"></a>
btCollisionConfiguration *&#160;</td><td class="memItemRight" valign="bottom"><b>BulletCollisionConfiguration</b></td></tr>
<tr class="separator:a9eda9815977a95cdb831dd68530a5b42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac99d1a10722a23f56f957253ec2d0de6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac99d1a10722a23f56f957253ec2d0de6"></a>
btCollisionDispatcher *&#160;</td><td class="memItemRight" valign="bottom"><b>BulletDispatcher</b></td></tr>
<tr class="separator:ac99d1a10722a23f56f957253ec2d0de6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47c448bbd80380cadf65603974d99981"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a47c448bbd80380cadf65603974d99981"></a>
btThreadSupportInterface *&#160;</td><td class="memItemRight" valign="bottom"><b>BulletDispatcherThreads</b></td></tr>
<tr class="separator:a47c448bbd80380cadf65603974d99981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08b75784f7f9786d6429ef8be6734eaf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a08b75784f7f9786d6429ef8be6734eaf"></a>
<a class="el" href="classMezzanine_1_1debug_1_1InternalDebugDrawer.xhtml">debug::InternalDebugDrawer</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>BulletDrawer</b></td></tr>
<tr class="separator:a08b75784f7f9786d6429ef8be6734eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfff8ade39b8e265286b99ec366dfc32"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acfff8ade39b8e265286b99ec366dfc32"></a>
btSoftRigidDynamicsWorld *&#160;</td><td class="memItemRight" valign="bottom"><b>BulletDynamicsWorld</b></td></tr>
<tr class="separator:acfff8ade39b8e265286b99ec366dfc32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d3c45502e8d40a69d30641d50eec8d2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d3c45502e8d40a69d30641d50eec8d2"></a>
btSequentialImpulseConstraintSolver *&#160;</td><td class="memItemRight" valign="bottom"><b>BulletSolver</b></td></tr>
<tr class="separator:a9d3c45502e8d40a69d30641d50eec8d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30d7ffd8bede6447b0027f27aff08f22"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a30d7ffd8bede6447b0027f27aff08f22"></a>
btThreadSupportInterface *&#160;</td><td class="memItemRight" valign="bottom"><b>BulletSolverThreads</b></td></tr>
<tr class="separator:a30d7ffd8bede6447b0027f27aff08f22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1915f3a4692b48eea5889e62fc402a2a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1915f3a4692b48eea5889e62fc402a2a"></a>
<a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#afc82657d492a34f7ba5a3ef7eb6a8ad1">CollisionContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Collisions</b></td></tr>
<tr class="separator:a1915f3a4692b48eea5889e62fc402a2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac98ab5350f29cf37559bc125510cd027"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac98ab5350f29cf37559bc125510cd027"></a>
<a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a8065dfaca8fd9ab3350b78720976aa4f">ConstraintContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Constraints</b></td></tr>
<tr class="separator:ac98ab5350f29cf37559bc125510cd027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c52241457defaad5f45a29c327b6186"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1DebugDrawWorkUnit.xhtml">DebugDrawWorkUnit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a7c52241457defaad5f45a29c327b6186">DebugDrawWork</a></td></tr>
<tr class="memdesc:a7c52241457defaad5f45a29c327b6186"><td class="mdescLeft">&#160;</td><td class="mdescRight">The work unit that updates the debug drawer with the latest physics rendering.  <a href="#a7c52241457defaad5f45a29c327b6186">More...</a><br/></td></tr>
<tr class="separator:a7c52241457defaad5f45a29c327b6186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a285b55ab0ffc1db1bcaac09a4df7e68e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a285b55ab0ffc1db1bcaac09a4df7e68e"></a>
<a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td><td class="memItemRight" valign="bottom"><b>DebugRenderMode</b></td></tr>
<tr class="separator:a285b55ab0ffc1db1bcaac09a4df7e68e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae91878ad47c9376979832b0c558e7f8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aae91878ad47c9376979832b0c558e7f8"></a>
btGhostPairCallback *&#160;</td><td class="memItemRight" valign="bottom"><b>GhostCallback</b></td></tr>
<tr class="separator:aae91878ad47c9376979832b0c558e7f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66f052154864af1ed2f9a49e32b58bde"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a66f052154864af1ed2f9a49e32b58bde"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>SimulationPaused</b></td></tr>
<tr class="separator:a66f052154864af1ed2f9a49e32b58bde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1174a0b7e95f4a83ebce5cf19bffb1f9"><td class="memItemLeft" align="right" valign="top">Threading::DefaultWorkUnit *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a1174a0b7e95f4a83ebce5cf19bffb1f9">SimulationWork</a></td></tr>
<tr class="memdesc:a1174a0b7e95f4a83ebce5cf19bffb1f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">The work unit that does the stepping of the simulation.  <a href="#a1174a0b7e95f4a83ebce5cf19bffb1f9">More...</a><br/></td></tr>
<tr class="separator:a1174a0b7e95f4a83ebce5cf19bffb1f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf23afd90834587f9cd11e0b9375cbe6"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaf23afd90834587f9cd11e0b9375cbe6"></a>
<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><b>StepSize</b></td></tr>
<tr class="separator:aaf23afd90834587f9cd11e0b9375cbe6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f3e69e0dd9a433c3fcd5d502722bade"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6f3e69e0dd9a433c3fcd5d502722bade"></a>
<a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><b>SubstepModifier</b></td></tr>
<tr class="separator:a6f3e69e0dd9a433c3fcd5d502722bade"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1901e8e0d9eaba9e5cd66b4097be1be"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae1901e8e0d9eaba9e5cd66b4097be1be"></a>
<a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ThreadCount</b></td></tr>
<tr class="separator:ae1901e8e0d9eaba9e5cd66b4097be1be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6c51c6e6a2c8ada4a2d1768302c9303"><td class="memItemLeft" align="right" valign="top">Threading::DefaultThreadSpecificStorage::Type *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ab6c51c6e6a2c8ada4a2d1768302c9303">ThreadResources</a></td></tr>
<tr class="memdesc:ab6c51c6e6a2c8ada4a2d1768302c9303"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be used for thread safe logging and other thread specific resources.  <a href="#ab6c51c6e6a2c8ada4a2d1768302c9303">More...</a><br/></td></tr>
<tr class="separator:ab6c51c6e6a2c8ada4a2d1768302c9303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36659b60e5a4fd8246c1398c768e2aa7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a36659b60e5a4fd8246c1398c768e2aa7"></a>
<a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ad3fd11323d6629e183dbecf65174a766">WorldTriggerContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Triggers</b></td></tr>
<tr class="separator:a36659b60e5a4fd8246c1398c768e2aa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac70c73cfcdb88b2a3e62575665a9a280"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac70c73cfcdb88b2a3e62575665a9a280"></a>
<a class="el" href="classMezzanine_1_1Physics_1_1ManagerConstructionInfo.xhtml">ManagerConstructionInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><b>WorldConstructionInfo</b></td></tr>
<tr class="separator:ac70c73cfcdb88b2a3e62575665a9a280"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a954df56f8c13a944a03eeca5360c8181"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1WorldTriggerUpdateWorkUnit.xhtml">WorldTriggerUpdateWorkUnit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a954df56f8c13a944a03eeca5360c8181">WorldTriggerUpdateWork</a></td></tr>
<tr class="memdesc:a954df56f8c13a944a03eeca5360c8181"><td class="mdescLeft">&#160;</td><td class="mdescRight">The work unit that processes all world triggers.  <a href="#a954df56f8c13a944a03eeca5360c8181">More...</a><br/></td></tr>
<tr class="separator:a954df56f8c13a944a03eeca5360c8181"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1WorldManager"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1WorldManager')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1WorldManager.xhtml">Mezzanine::WorldManager</a></td></tr>
<tr class="memitem:a0e6cc195d20c2a7f97e4b17143c3d232 inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a0e6cc195d20c2a7f97e4b17143c3d232">OperationsPaused</a></td></tr>
<tr class="memdesc:a0e6cc195d20c2a7f97e4b17143c3d232 inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">This stores whether or not processing for some or all objects in this manager has been paused.  <a href="#a0e6cc195d20c2a7f97e4b17143c3d232">More...</a><br/></td></tr>
<tr class="separator:a0e6cc195d20c2a7f97e4b17143c3d232 inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ebe6d65692b0c520ffb4cbdcac5a11c inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1World.xhtml">World</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a7ebe6d65692b0c520ffb4cbdcac5a11c">ParentWorld</a></td></tr>
<tr class="memdesc:a7ebe6d65692b0c520ffb4cbdcac5a11c inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">A pointer to the world that created this manager.  <a href="#a7ebe6d65692b0c520ffb4cbdcac5a11c">More...</a><br/></td></tr>
<tr class="separator:a7ebe6d65692b0c520ffb4cbdcac5a11c inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264">Initialized</a></td></tr>
<tr class="memdesc:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple bool indicating whether or not this manager has been initialized.  <a href="#ada3bad0fe77ff2fa7404eea7a5c16264">More...</a><br/></td></tr>
<tr class="separator:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc">TheEntresol</a></td></tr>
<tr class="memdesc:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">The actual pointer to the <a class="el" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a> core class.  <a href="#ae619b4bd732d7345e0ef59ecde6d03cc">More...</a><br/></td></tr>
<tr class="separator:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:aa4a13416efe17e957deb2cf4dcce3a60"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa4a13416efe17e957deb2cf4dcce3a60"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>CollisionDispatcher</b></td></tr>
<tr class="separator:aa4a13416efe17e957deb2cf4dcce3a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7df81b3e494cc388fa2e0762d3537d38"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7df81b3e494cc388fa2e0762d3537d38"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>DebugDrawWorkUnit</b></td></tr>
<tr class="separator:a7df81b3e494cc388fa2e0762d3537d38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addcf1a4fbe0737cb4513b920a58d2464"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="addcf1a4fbe0737cb4513b920a58d2464"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>ParallelCollisionDispatcher</b></td></tr>
<tr class="separator:addcf1a4fbe0737cb4513b920a58d2464"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1e3400a907e4384fffda47c1a3ffc9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2b1e3400a907e4384fffda47c1a3ffc9"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>SimulationMonopolyWorkUnit</b></td></tr>
<tr class="separator:a2b1e3400a907e4384fffda47c1a3ffc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13e028cb4f00447f82984aa71d62bf96"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a13e028cb4f00447f82984aa71d62bf96"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>SimulationWorkUnit</b></td></tr>
<tr class="separator:a13e028cb4f00447f82984aa71d62bf96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9f0bb1351492a17c04fe5e2ca55fce3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa9f0bb1351492a17c04fe5e2ca55fce3"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>WorldTriggerUpdateWorkUnit</b></td></tr>
<tr class="separator:aa9f0bb1351492a17c04fe5e2ca55fce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#aa148d67ebe4538adcd74d3f02f7ddc97">GetTypeAsString</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> &amp;<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>)</td></tr>
<tr class="memdesc:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the string form of the type of manager.  <a href="#aa148d67ebe4538adcd74d3f02f7ddc97">More...</a><br/></td></tr>
<tr class="separator:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#acb0c0b9192f8ce94c725d5550e8439f6">GetTypeFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerName)</td></tr>
<tr class="memdesc:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of manager requested from a string.  <a href="#acb0c0b9192f8ce94c725d5550e8439f6">More...</a><br/></td></tr>
<tr class="separator:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is simply a place for storing all the <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Related functions. </p>
<p>This is a place for storing items related to Debug physics drawing, Adding constraints, screwing with gravity and doing other physics Related features. </p>

<p>Definition at line <a class="el" href="physicsmanager_8h_source.xhtml#l00235">235</a> of file <a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a12bb0a6a9e555187d8fdab82da4faf0f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::PhysicsManager::PhysicsManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Simple Constructor. </p>
<p>This constructor will assign some sane default values and will create a physics world that can be used immediately </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00371">371</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afeaf622f38c3f506df79ca8850a21927"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::PhysicsManager::PhysicsManager </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Physics_1_1ManagerConstructionInfo.xhtml">ManagerConstructionInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>Info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Simple Constructor. </p>
<p>This constructor will assign some sane default values and will create a physics world that can be used immediately </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Info</td><td>The construction info class with all the settings you wish the world to have. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00398">398</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a922582f50e60d590297ed437d3099cbe"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::PhysicsManager::PhysicsManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>XMLNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">XMLNode</td><td>The node of the xml document to construct from. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00423">423</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a788bd6cbae7e294013d97ef806052c6a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::PhysicsManager::~PhysicsManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deconstructor. </p>
<p>This deletes all those crazy pointers that Bullet, the physics subsystem need. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00503">503</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aba6878139fdacad9535a9223fdb0e911"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">btSoftRigidDynamicsWorld * Mezzanine::Physics::PhysicsManager::_GetPhysicsWorldPointer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This returns a pointer to the bullet physics world. This is for internal use only. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01152">1152</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afd07efe438c29abfc7ce2d15446e9ae2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const btSoftRigidDynamicsWorld * Mezzanine::Physics::PhysicsManager::_GetPhysicsWorldPointer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This returns a pointer to the bullet physics world. This is for internal use only. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01155">1155</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac6bb4dbf0836be1b6624aaf83c7583ab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::AddConstraint </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *&#160;</td>
          <td class="paramname"><em>Con</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>DisableCollisions</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a constraint to the world. </p>
<p>Adds the constraint to the world so that it can/will take effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Con</td><td>The constraint to be added. </td></tr>
    <tr><td class="paramname">DisableCollisions</td><td>Sets whether or not the linked bodies collide with each other. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00805">805</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab2b022f1124ee3d5ecca4e29620c8a3d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::AddWorldTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *&#160;</td>
          <td class="paramname"><em>Trig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a trigger to the world. </p>
<p>Adds a trigger to the world so that it can/will take effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trig</td><td>The trigger to be added. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00847">847</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6764be929688d57f0fa25d3c035ccd73"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aecff4e6e6b0dd3bef87c7e14669b1338">PhysicsManager::CollisionIterator</a> Mezzanine::Physics::PhysicsManager::BeginCollision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get an CollisionIterator to the first <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>An CollisionIterator to the first <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00954">954</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abbb2dd6c53e68fe741c226b22310048e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a546020b4fbf97e797bb099e365c1b9a8">PhysicsManager::ConstCollisionIterator</a> Mezzanine::Physics::PhysicsManager::BeginCollision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a ConstCollisionIterator to the first <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>A ConstCollisionIterator to the first <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00964">964</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af74ec5cd09531749bdc4ddf305928af0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::ClearPhysicsMetaData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears all data relating to actors and other simulation objects from the physics world. </p>
<p>This is best used with simulation cleanup. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01006">1006</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abb7b13e3f9b1e8048bff88bae1033bbc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::Construct </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Physics_1_1ManagerConstructionInfo.xhtml">ManagerConstructionInfo</a> &amp;&#160;</td>
          <td class="paramname"><em>Info</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This takes care of all the real work in contructing this. </p>
<p>This method is called by all the constructors to insure consistent behavior. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Info</td><td>The construction info class with all the settings you wish the world to have. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00521">521</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afa9ca6914153308a765a8740d6d2eadf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::Deinitialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes this manager from any necessary configuration so it can be safely disposed of. </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab13bf1e752c3b54c7c392ba9a869fb72">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01095">1095</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a11fc996c5f5f5c8d24feb1eaccf651cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::DestroyAllConstraints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroys all constraints currently in the manager. </p>
<p>In practice it is cleaner to remove constraints from the world before removing any constrained actors. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00834">834</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a22ad8bb3a07a89a19d1a2f93f6d2de99"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#aecff4e6e6b0dd3bef87c7e14669b1338">PhysicsManager::CollisionIterator</a> Mezzanine::Physics::PhysicsManager::EndCollision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a CollisionIterator to one past the last <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>A CollisionIterator to one past the last <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00959">959</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a82e12561e2b757ebb3a15389c55f867a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#a546020b4fbf97e797bb099e365c1b9a8">PhysicsManager::ConstCollisionIterator</a> Mezzanine::Physics::PhysicsManager::EndCollision </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a ConstCollisionIterator to one past the last <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>A ConstCollisionIterator to one past the last <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a>. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00969">969</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a266149cc7526d8d40a48eec901fe9e14"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> * Mezzanine::Physics::PhysicsManager::GetCollision </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ObjectPair.xhtml">ObjectPair</a> *&#160;</td>
          <td class="paramname"><em>Pair</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a> by object pair. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pair</td><td>A pair of objects. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml" title="This is an event class used to track collsions in the physics world.">Collision</a> if a collision for the provided pair exists, NULL otherwise. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00896">896</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae460723cdf5f8b64c1fef70b477b6bb9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> * Mezzanine::Physics::PhysicsManager::GetConstraint </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a constraint by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the constraint you want. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the specified constraint. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00811">811</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a878e7f164fd3a6ccac699a9ae5971146"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1DebugDrawWorkUnit.xhtml">DebugDrawWorkUnit</a> * Mezzanine::Physics::PhysicsManager::GetDebugDrawWork </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the work unit that updates the debug drawer. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Physics_1_1DebugDrawWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of the physics debug drawer.">DebugDrawWorkUnit</a> used by this manager. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01135">1135</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae6ca101ec427ec846249500aea4d5508"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> Mezzanine::Physics::PhysicsManager::GetDebugRenderingMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Is <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing currently enabled? </p>
<p>lets you check if <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing is enabled or not. </p>
<dl class="section return"><dt>Returns</dt><dd>1 for it is on, and 0 for it is not. The may be other options later for selectively cnacking certain features </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00985">985</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5a4c429fddc2a58f8e0611b83f1f4f04"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::PhysicsManager::GetGravity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the gravity. </p>
<p>Gets the currently set world gravity. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the currently set world gravity. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00776">776</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a46dab7d45238ca1d6c263670022bd512"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Physics::PhysicsManager::GetImplementationTypeName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This Allows any manager name to be sent to a stream. Primarily used for logging. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a String that contains the name. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac41d60f674e75d3d16b5544f4feb199c">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01146">1146</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a15d411fa9ad5f60b38d09eb6119ab0ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> Mezzanine::Physics::PhysicsManager::GetInterfaceType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the type of this manager. </p>
<p>This is intended to make using and casting from Manager base easier. With this is is possible to cast from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a> to the correct Manager Type. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a ManagerTypeName to identify what this can be safely cast to. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a388aa37ed71b8667785b789c137aa8c6">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01143">1143</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5d4ff6a5328ea9459f6bee325be6dbff"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::Physics::PhysicsManager::GetNumCollisions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of Collisions currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a whole representing the number of Collisions in the world. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00903">903</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4e72a9f8c52ff364be82cce4f86150ce"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::Physics::PhysicsManager::GetNumConstraints </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of constraints currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a whole representing the number of constraints in the world. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00816">816</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aafaa8b1a2434504c2367498e2bd9ee40"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::Physics::PhysicsManager::GetNumWorldTriggers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of triggers currently in the world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a whole representing the number of triggers in the world. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00869">869</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab5929e06ed5493b8efc8f04c1b9dc7b6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Threading::DefaultWorkUnit * Mezzanine::Physics::PhysicsManager::GetSimulationWork </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the work unit that steps the simulation. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the DefaultWorkUnit that steps the simulation. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01125">1125</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8e88d83d4acb09aa9f4e50ae4b64becd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::PhysicsManager::GetSoftGravity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the soft body gravity. </p>
<p>Gets the currently set soft body world gravity. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the currently set soft body world gravity. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00787">787</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a397a8242c84df207e3af00c07ba5001c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> * Mezzanine::Physics::PhysicsManager::GetWorldTrigger </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a trigger by name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the trigger to find. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the named trigger, or NULL if it doesn't exist. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00852">852</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2cf85904a7d157a4907970388293be84"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> * Mezzanine::Physics::PhysicsManager::GetWorldTrigger </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a trigger by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the trigger you want. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the trigger at the specified index. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00864">864</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4d6ce737a3e1aae4e82d1b4b4426b670"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1WorldTriggerUpdateWorkUnit.xhtml">WorldTriggerUpdateWorkUnit</a> * Mezzanine::Physics::PhysicsManager::GetWorldTriggerUpdateWork </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a pointer to the work unit that updates all WorldTriggers. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Physics_1_1WorldTriggerUpdateWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of WorldTriggers.">WorldTriggerUpdateWorkUnit</a> used by this manager. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01130">1130</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae14da3bda7269e4c86190f9f3ca5e9a6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::Initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configures this manager for use prior to entering the main loop. </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1WorldManager.xhtml#aff20d85e7c60f85b7e9b7bb909262bac">Mezzanine::WorldManager</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01056">1056</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac604afded57760a99e43f5269a95674b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::Pause </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>PL</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the pause state of this manager, or has no effect depending on the value passed in. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">PL</td><td>A bitfield describing the pause level being assigned to the parent world of this manager. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classMezzanine_1_1WorldManager.xhtml#aed3eada3b6c854199f0f1ee8a92e8087">Mezzanine::WorldManager</a>.</p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01036">1036</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab14fd26999847cd4398c29fee2f0922f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::PauseSimulation </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Pause</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pauses the simulation, preventing the physics world from taking action. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pause</td><td>Wether or not to pause the simulation. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00758">758</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aee045803bd3c252246329acbdf60123c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::ProcessAllCollisions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks the internal collision data and generates/updates collisions as necessary. </p>
<p>This function is automatically called every step. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000089">Todo:</a></b></dt><dd>This is an absurd round-about way to get the data we need, and bullet will probably have to be extended to change this so it's actually good. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00693">693</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7ea74e38ce721131eb94cf0dece79e74"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::ProcessAllTriggers </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calls the ConditionsAreMet() and ApplyTrigger() functions of every stored trigger. </p>
<p>This function is automatically called every step. </p>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00681">681</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3fb56a6e3d9b80f56b27fbb78d3e54c7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::RemoveCollision </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1Collision.xhtml">Physics::Collision</a> *&#160;</td>
          <td class="paramname"><em>Col</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes an existing collision from the world. </p>
<dl class="section remark"><dt>Remarks</dt><dd>In general it's not a great idea to call on this manually, but there are some situations where you would. Mostly this function exists to facilitate removal of objects from the world before the simulation ends. In such cases you have to clean up traces of the collision. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Col</td><td>The collision to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00908">908</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae1d7926fbeb7be7e4a0c37fa2dc16ee6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::RemoveCollisionsContainingObject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *&#160;</td>
          <td class="paramname"><em>Object</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes all stored collisions that involve the specified Object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Object</td><td>The Object which will have all of it's collisions removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00922">922</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adb0ccd361c92e10b97d1c3671d8bd9c6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::RemoveConstraint </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1Constraint.xhtml">Physics::Constraint</a> *&#160;</td>
          <td class="paramname"><em>Con</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a constraint from the world. </p>
<p>Removes a constraint from the world so that it will have no effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Con</td><td>The constraint to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00821">821</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acad7d5d038145babd47492d50e6705e6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::RemoveWorldTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1WorldTrigger.xhtml">WorldTrigger</a> *&#160;</td>
          <td class="paramname"><em>Trig</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes a trigger from the world. </p>
<p>Removes a trigger from the world so that it will have no effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trig</td><td>The trigger to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00874">874</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7ed9b45f7bd8ac5f7ff9ea8e639f914e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::ResetPhysicsWorld </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1ManagerConstructionInfo.xhtml">ManagerConstructionInfo</a> *&#160;</td>
          <td class="paramname"><em>Info</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets all the internal physics structures in this manager. </p>
<dl class="section warning"><dt>Warning</dt><dd>This should only be called while the world is emtpy and objects have be unloaded from it. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Info</td><td>If you want to change the configuration of the world when restarting, you can optionally provide a new set of parameters to build the world with. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00993">993</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6f7ed795ac22f8d578873f1c2d32da13"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::SetDebugRenderingMode </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td>
          <td class="paramname"><em>DebugRenderingMode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enables and Disables <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing. </p>
<p>Enables and Disables <a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Debug Drawing using default wireframes. This will force renderings that match the physics subsytem pixel for pixel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DebugRenderingMode</td><td>1 to turn it on, 0 to turn it off. There may be other options in the future, to enable fine tuned control </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00977">977</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a75f2d42737c69959c27c99b90bfba714"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::SetGravity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>pgrav</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the gravity. </p>
<p>Sets the strength and direction of gravity within the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pgrav</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the strength and direction of gravity. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00771">771</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a927829deef136599409dbe4a457caa7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::SetIndividualGravity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *&#160;</td>
          <td class="paramname"><em>Actor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>igrav</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the gravity to be applied to a single object. </p>
<p>This function does not change the global gravity, only how gravity behaves for this specific object. Note: This function only works on <a class="el" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>'s. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Actor</td><td>The actor whos gravity is to be changed. </td></tr>
    <tr><td class="paramname">igrav</td><td>The value of the gravity to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00793">793</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa0a94fae485c6a5a7757d91c6591a52c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::SetSimulationSubstepModifier </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Modifier</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the modifier to be used when stepping the physics simulation. </p>
<dl class="section remark"><dt>Remarks</dt><dd>For the most part, the simulation tick is determined by your target framerate set on <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">Mezzanine::World</a>. However there are some occasions when you will want to have it tick more often, in particular with sensative simulation setups involving many constraints, or small objects, or fast moving objects, or any combination of those. In order to make your simulation more stable you have to tick in smaller intervals, making it less likely for the engine to miss something or become unstable. When you pass in a modifier it'll ensure it ticks faster by that amount. For example, if you pass in 2 to this as the modifier, the physics simulation will take 2 smaller steps (the time being based on the target framerate) instead of one big one during the course of one frame. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Modifier</td><td>The amount of substeps per frame to perform. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l01031">1031</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a80c884aa03664abee01cd2b1f2fba65f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::PhysicsManager::SetSoftGravity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>sgrav</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the gravity for soft bodies. </p>
<p>Gravity for soft bodies is stored separately from rigid bodies. So if you plan to use soft bodies in your game/simulation you need to call this function otherwise they won't fall. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sgrav</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the strength and direction of gravity. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00782">782</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a304f54165e5db658020c466f857f51b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Physics::PhysicsManager::SimulationIsPaused </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets Whether or not the simulation is currently paused. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns whether or not the simulation is paused. </dd></dl>

<p>Definition at line <a class="el" href="physicsmanager_8cpp_source.xhtml#l00763">763</a> of file <a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a7c52241457defaad5f45a29c327b6186"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1DebugDrawWorkUnit.xhtml">DebugDrawWorkUnit</a>* Mezzanine::Physics::PhysicsManager::DebugDrawWork</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The work unit that updates the debug drawer with the latest physics rendering. </p>

<p>Definition at line <a class="el" href="physicsmanager_8h_source.xhtml#l00296">296</a> of file <a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="a1174a0b7e95f4a83ebce5cf19bffb1f9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Threading::DefaultWorkUnit* Mezzanine::Physics::PhysicsManager::SimulationWork</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The work unit that does the stepping of the simulation. </p>

<p>Definition at line <a class="el" href="physicsmanager_8h_source.xhtml#l00290">290</a> of file <a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab6c51c6e6a2c8ada4a2d1768302c9303"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Threading::DefaultThreadSpecificStorage::Type* Mezzanine::Physics::PhysicsManager::ThreadResources</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Can be used for thread safe logging and other thread specific resources. </p>

<p>Definition at line <a class="el" href="physicsmanager_8h_source.xhtml#l00299">299</a> of file <a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="a954df56f8c13a944a03eeca5360c8181"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Physics_1_1WorldTriggerUpdateWorkUnit.xhtml">WorldTriggerUpdateWorkUnit</a>* Mezzanine::Physics::PhysicsManager::WorldTriggerUpdateWork</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The work unit that processes all world triggers. </p>

<p>Definition at line <a class="el" href="physicsmanager_8h_source.xhtml#l00293">293</a> of file <a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/Physics/<a class="el" href="physicsmanager_8h_source.xhtml">physicsmanager.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/Physics/<a class="el" href="physicsmanager_8cpp_source.xhtml">physicsmanager.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Sep 13 2013 01:59:18 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
