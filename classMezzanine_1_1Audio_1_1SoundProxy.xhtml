<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Audio::SoundProxy Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;16,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Audio.xhtml">Audio</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml">SoundProxy</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classMezzanine_1_1Audio_1_1SoundProxy-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Audio::SoundProxy Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a proxy class for representing a sound being played in 3D space.  
 <a href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="soundproxy_8h_source.xhtml">soundproxy.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Audio::SoundProxy:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Audio_1_1SoundProxy__inherit__graph.svg" width="398" height="214"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Audio::SoundProxy:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Audio_1_1SoundProxy__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a87a20f74306873decfdef30389435f71"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a87a20f74306873decfdef30389435f71"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a87a20f74306873decfdef30389435f71">SoundProxy</a> ()</td></tr>
<tr class="memdesc:a87a20f74306873decfdef30389435f71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a87a20f74306873decfdef30389435f71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41a63968dcbe98c5f85297fbb55e1671"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a41a63968dcbe98c5f85297fbb55e1671"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a41a63968dcbe98c5f85297fbb55e1671">~SoundProxy</a> ()</td></tr>
<tr class="memdesc:a41a63968dcbe98c5f85297fbb55e1671"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a41a63968dcbe98c5f85297fbb55e1671"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58630daa0114ac228137501012401ad4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a58630daa0114ac228137501012401ad4">AddToWorld</a> ()=0</td></tr>
<tr class="memdesc:a58630daa0114ac228137501012401ad4"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a58630daa0114ac228137501012401ad4">More...</a><br/></td></tr>
<tr class="separator:a58630daa0114ac228137501012401ad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34a2afb6a3838a9a1979c4797d380760"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a34a2afb6a3838a9a1979c4797d380760">GetDopplerStrength</a> () const =0</td></tr>
<tr class="memdesc:a34a2afb6a3838a9a1979c4797d380760"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Doppler Strength of the sound.  <a href="#a34a2afb6a3838a9a1979c4797d380760">More...</a><br/></td></tr>
<tr class="separator:a34a2afb6a3838a9a1979c4797d380760"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e7ce8ee180e868db6a6339f8bd47014"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a4e7ce8ee180e868db6a6339f8bd47014">GetDopplerVelocity</a> () const =0</td></tr>
<tr class="memdesc:a4e7ce8ee180e868db6a6339f8bd47014"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the doppler velocity vector.  <a href="#a4e7ce8ee180e868db6a6339f8bd47014">More...</a><br/></td></tr>
<tr class="separator:a4e7ce8ee180e868db6a6339f8bd47014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac65210c66f6f0fc3ef1271dc46772265"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#ac65210c66f6f0fc3ef1271dc46772265">GetInnerConeAngle</a> () const =0</td></tr>
<tr class="memdesc:ac65210c66f6f0fc3ef1271dc46772265"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the inner cone angle of the sound source.  <a href="#ac65210c66f6f0fc3ef1271dc46772265">More...</a><br/></td></tr>
<tr class="separator:ac65210c66f6f0fc3ef1271dc46772265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79a20eb388de94513e56a0fa2eaf0de2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a79a20eb388de94513e56a0fa2eaf0de2">GetMaxDistance</a> () const =0</td></tr>
<tr class="memdesc:a79a20eb388de94513e56a0fa2eaf0de2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the distance at which sound attenuation will stop.  <a href="#a79a20eb388de94513e56a0fa2eaf0de2">More...</a><br/></td></tr>
<tr class="separator:a79a20eb388de94513e56a0fa2eaf0de2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5a64070b460cf033914bc437004df13"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#ae5a64070b460cf033914bc437004df13">GetMinDistance</a> () const =0</td></tr>
<tr class="memdesc:ae5a64070b460cf033914bc437004df13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the distance at which sound attenuation will start.  <a href="#ae5a64070b460cf033914bc437004df13">More...</a><br/></td></tr>
<tr class="separator:ae5a64070b460cf033914bc437004df13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75e9d277ff3b0492d81791499f9da16a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a75e9d277ff3b0492d81791499f9da16a">GetOuterConeAngle</a> () const =0</td></tr>
<tr class="memdesc:a75e9d277ff3b0492d81791499f9da16a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the outer cone angle of the sound source.  <a href="#a75e9d277ff3b0492d81791499f9da16a">More...</a><br/></td></tr>
<tr class="separator:a75e9d277ff3b0492d81791499f9da16a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeb57d0c27a959fa3502f3e7795aa7a7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#afeb57d0c27a959fa3502f3e7795aa7a7">GetOuterConeVolume</a> () const =0</td></tr>
<tr class="memdesc:afeb57d0c27a959fa3502f3e7795aa7a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the outer cone volume of the sound source.  <a href="#afeb57d0c27a959fa3502f3e7795aa7a7">More...</a><br/></td></tr>
<tr class="separator:afeb57d0c27a959fa3502f3e7795aa7a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00a3d12eeee043b15054d6b8dd9e74d4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a00a3d12eeee043b15054d6b8dd9e74d4">GetRolloffFactor</a> () const =0</td></tr>
<tr class="memdesc:a00a3d12eeee043b15054d6b8dd9e74d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Rolloff factor of the sound source.  <a href="#a00a3d12eeee043b15054d6b8dd9e74d4">More...</a><br/></td></tr>
<tr class="separator:a00a3d12eeee043b15054d6b8dd9e74d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ab0a3a7af3e213185f1a6dce72e3908"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a6ab0a3a7af3e213185f1a6dce72e3908">GetVelocity</a> () const =0</td></tr>
<tr class="memdesc:a6ab0a3a7af3e213185f1a6dce72e3908"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current velocity of this sound proxy.  <a href="#a6ab0a3a7af3e213185f1a6dce72e3908">More...</a><br/></td></tr>
<tr class="separator:a6ab0a3a7af3e213185f1a6dce72e3908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade17f2c25c28739bb66797f1c9d5871c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#ade17f2c25c28739bb66797f1c9d5871c">IsDirectingSound</a> () const =0</td></tr>
<tr class="memdesc:ade17f2c25c28739bb66797f1c9d5871c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this sound proxy is emitting in a specific direction.  <a href="#ade17f2c25c28739bb66797f1c9d5871c">More...</a><br/></td></tr>
<tr class="separator:ade17f2c25c28739bb66797f1c9d5871c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ed6a9e9d0cb6c2a1646d05b7d4feec3"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a4ed6a9e9d0cb6c2a1646d05b7d4feec3">IsInWorld</a> () const =0</td></tr>
<tr class="memdesc:a4ed6a9e9d0cb6c2a1646d05b7d4feec3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this object is inside of it's world.  <a href="#a4ed6a9e9d0cb6c2a1646d05b7d4feec3">More...</a><br/></td></tr>
<tr class="separator:a4ed6a9e9d0cb6c2a1646d05b7d4feec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70a621d8844fce1e13bc016a43266f38"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a70a621d8844fce1e13bc016a43266f38">RemoveFromWorld</a> ()=0</td></tr>
<tr class="memdesc:a70a621d8844fce1e13bc016a43266f38"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a70a621d8844fce1e13bc016a43266f38">More...</a><br/></td></tr>
<tr class="separator:a70a621d8844fce1e13bc016a43266f38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26965c74d3c425e752cc3a14d9ad7e0c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a26965c74d3c425e752cc3a14d9ad7e0c">SetDirectSound</a> (bool Enable)=0</td></tr>
<tr class="memdesc:a26965c74d3c425e752cc3a14d9ad7e0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not sounds generated by this sound proxy will be emitted in a specified direction.  <a href="#a26965c74d3c425e752cc3a14d9ad7e0c">More...</a><br/></td></tr>
<tr class="separator:a26965c74d3c425e752cc3a14d9ad7e0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29a89099a1af92ceab2cf368d53d6041"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a29a89099a1af92ceab2cf368d53d6041">SetDopplerStrength</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;DopStr)=0</td></tr>
<tr class="memdesc:a29a89099a1af92ceab2cf368d53d6041"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the doppler strength, which impacts the doppler effect.  <a href="#a29a89099a1af92ceab2cf368d53d6041">More...</a><br/></td></tr>
<tr class="separator:a29a89099a1af92ceab2cf368d53d6041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5171efe62696a113752264e70350a02"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#ad5171efe62696a113752264e70350a02">SetDopplerVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;DopVel)=0</td></tr>
<tr class="memdesc:ad5171efe62696a113752264e70350a02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the doppler velocity vector.  <a href="#ad5171efe62696a113752264e70350a02">More...</a><br/></td></tr>
<tr class="separator:ad5171efe62696a113752264e70350a02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6e4bc80bb150b50b76602d0310fdc5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#aac6e4bc80bb150b50b76602d0310fdc5">SetInnerConeAngle</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;InnerAngle)=0</td></tr>
<tr class="memdesc:aac6e4bc80bb150b50b76602d0310fdc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the inner cone angle of the sound source if you want the sound to be projected as a cone.  <a href="#aac6e4bc80bb150b50b76602d0310fdc5">More...</a><br/></td></tr>
<tr class="separator:aac6e4bc80bb150b50b76602d0310fdc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bf8d41015b3dc9140780256de020a4a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a2bf8d41015b3dc9140780256de020a4a">SetMaxDistance</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;MaxDistance)=0</td></tr>
<tr class="memdesc:a2bf8d41015b3dc9140780256de020a4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the distance from the sound source where attenuation will stop.  <a href="#a2bf8d41015b3dc9140780256de020a4a">More...</a><br/></td></tr>
<tr class="separator:a2bf8d41015b3dc9140780256de020a4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c5cbea105a358a94e8e072ac5a5f9d0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a9c5cbea105a358a94e8e072ac5a5f9d0">SetMinDistance</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;MinDistance)=0</td></tr>
<tr class="memdesc:a9c5cbea105a358a94e8e072ac5a5f9d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the distance from the sound source where attenuation will start.  <a href="#a9c5cbea105a358a94e8e072ac5a5f9d0">More...</a><br/></td></tr>
<tr class="separator:a9c5cbea105a358a94e8e072ac5a5f9d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e3229e6178ea86625f87adc8e118a70"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a9e3229e6178ea86625f87adc8e118a70">SetOuterConeAngle</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;OuterAngle)=0</td></tr>
<tr class="memdesc:a9e3229e6178ea86625f87adc8e118a70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the outer cone angle of the sound source if you want the sound to be projected as a cone.  <a href="#a9e3229e6178ea86625f87adc8e118a70">More...</a><br/></td></tr>
<tr class="separator:a9e3229e6178ea86625f87adc8e118a70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10e3034d6db7d56f26ecbb60b58bc44a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a10e3034d6db7d56f26ecbb60b58bc44a">SetOuterConeVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;OuterVolume)=0</td></tr>
<tr class="memdesc:a10e3034d6db7d56f26ecbb60b58bc44a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets how much the volume is scaled in the outer cone.  <a href="#a10e3034d6db7d56f26ecbb60b58bc44a">More...</a><br/></td></tr>
<tr class="separator:a10e3034d6db7d56f26ecbb60b58bc44a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acda5b2476fb992a56b3aa161dba75098"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#acda5b2476fb992a56b3aa161dba75098">SetRolloffFactor</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Rolloff)=0</td></tr>
<tr class="memdesc:acda5b2476fb992a56b3aa161dba75098"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Rolloff factor used to attenuate the sound over a distance.  <a href="#acda5b2476fb992a56b3aa161dba75098">More...</a><br/></td></tr>
<tr class="separator:acda5b2476fb992a56b3aa161dba75098"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0656a9c98e07252974ec7801d97615c6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#a0656a9c98e07252974ec7801d97615c6">SetVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Vel)=0</td></tr>
<tr class="memdesc:a0656a9c98e07252974ec7801d97615c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the velocity of this sound proxy.  <a href="#a0656a9c98e07252974ec7801d97615c6">More...</a><br/></td></tr>
<tr class="separator:a0656a9c98e07252974ec7801d97615c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1WorldProxy"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1WorldProxy')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldProxy.xhtml">Mezzanine::WorldProxy</a></td></tr>
<tr class="memitem:a0a50b646753d76a683853f831932611b inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0a50b646753d76a683853f831932611b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a0a50b646753d76a683853f831932611b">WorldProxy</a> ()</td></tr>
<tr class="memdesc:a0a50b646753d76a683853f831932611b inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a0a50b646753d76a683853f831932611b inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae903d7c54b446393e7d2e22d330e89a5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae903d7c54b446393e7d2e22d330e89a5"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#ae903d7c54b446393e7d2e22d330e89a5">~WorldProxy</a> ()</td></tr>
<tr class="memdesc:ae903d7c54b446393e7d2e22d330e89a5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:ae903d7c54b446393e7d2e22d330e89a5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34d1af1b7d367a0bc1fa1609162db9f5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a34d1af1b7d367a0bc1fa1609162db9f5">_Bind</a> (<a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *NewParent)</td></tr>
<tr class="memdesc:a34d1af1b7d367a0bc1fa1609162db9f5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binds this proxy to a <a class="el" href="classMezzanine_1_1WorldObject.xhtml" title="This is the base class from which classes that are insertable into the physical world.">WorldObject</a>.  <a href="#a34d1af1b7d367a0bc1fa1609162db9f5">More...</a><br/></td></tr>
<tr class="separator:a34d1af1b7d367a0bc1fa1609162db9f5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb4300d31245bb616e7416dd6310a809 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1WorldManager.xhtml">WorldManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#abb4300d31245bb616e7416dd6310a809">GetCreator</a> () const =0</td></tr>
<tr class="memdesc:abb4300d31245bb616e7416dd6310a809 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to this proxies creator.  <a href="#abb4300d31245bb616e7416dd6310a809">More...</a><br/></td></tr>
<tr class="separator:abb4300d31245bb616e7416dd6310a809 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ae6101056147b58c31f38b11833ceaa inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a0ae6101056147b58c31f38b11833ceaa">GetDerivedSerializableName</a> () const =0</td></tr>
<tr class="memdesc:a0ae6101056147b58c31f38b11833ceaa inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the most derived serializable name of this <a class="el" href="classMezzanine_1_1WorldProxy.xhtml" title="This is the base class for proxy objects belonging to the various 3D subsystems.">WorldProxy</a>.  <a href="#a0ae6101056147b58c31f38b11833ceaa">More...</a><br/></td></tr>
<tr class="separator:a0ae6101056147b58c31f38b11833ceaa inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c8ee30f0b4373777d43be935b82a967 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a9c8ee30f0b4373777d43be935b82a967">GetLocation</a> () const =0</td></tr>
<tr class="memdesc:a9c8ee30f0b4373777d43be935b82a967 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets this objects current location.  <a href="#a9c8ee30f0b4373777d43be935b82a967">More...</a><br/></td></tr>
<tr class="separator:a9c8ee30f0b4373777d43be935b82a967 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfa40c23c18700f3a915d29aace98798 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#acfa40c23c18700f3a915d29aace98798">GetOrientation</a> () const =0</td></tr>
<tr class="memdesc:acfa40c23c18700f3a915d29aace98798 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets this objects current orientation.  <a href="#acfa40c23c18700f3a915d29aace98798">More...</a><br/></td></tr>
<tr class="separator:acfa40c23c18700f3a915d29aace98798 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98781f6b27dd4611404c0d6fb06535c9 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a98781f6b27dd4611404c0d6fb06535c9">GetParentObject</a> () const </td></tr>
<tr class="memdesc:a98781f6b27dd4611404c0d6fb06535c9 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the parent object controlling this proxy.  <a href="#a98781f6b27dd4611404c0d6fb06535c9">More...</a><br/></td></tr>
<tr class="separator:a98781f6b27dd4611404c0d6fb06535c9 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57375fc83bde7097435867f7eb4189ef inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a57375fc83bde7097435867f7eb4189ef">GetScale</a> () const =0</td></tr>
<tr class="memdesc:a57375fc83bde7097435867f7eb4189ef inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the scaling currently being applied to this object.  <a href="#a57375fc83bde7097435867f7eb4189ef">More...</a><br/></td></tr>
<tr class="separator:a57375fc83bde7097435867f7eb4189ef inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34cae3e8a5290eba1c28cc475e5ed922 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a34cae3e8a5290eba1c28cc475e5ed922">Pitch</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)=0</td></tr>
<tr class="memdesc:a34cae3e8a5290eba1c28cc475e5ed922 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the X axis.  <a href="#a34cae3e8a5290eba1c28cc475e5ed922">More...</a><br/></td></tr>
<tr class="separator:a34cae3e8a5290eba1c28cc475e5ed922 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fabb605d06cdab7dc41585a9adcfd16 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a7fabb605d06cdab7dc41585a9adcfd16">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;SelfRoot)=0</td></tr>
<tr class="memdesc:a7fabb605d06cdab7dc41585a9adcfd16 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> <a class="el" href="classMezzanine_1_1Node.xhtml">Node</a> and overwrite this object with it.  <a href="#a7fabb605d06cdab7dc41585a9adcfd16">More...</a><br/></td></tr>
<tr class="separator:a7fabb605d06cdab7dc41585a9adcfd16 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18a30a4a3c0a183213263f6b2fb23404 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a18a30a4a3c0a183213263f6b2fb23404">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;ParentNode) const =0</td></tr>
<tr class="memdesc:a18a30a4a3c0a183213263f6b2fb23404 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#a18a30a4a3c0a183213263f6b2fb23404">More...</a><br/></td></tr>
<tr class="separator:a18a30a4a3c0a183213263f6b2fb23404 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a500be6a131f849944fc4e3c541ec9ca7 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a500be6a131f849944fc4e3c541ec9ca7">Roll</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)=0</td></tr>
<tr class="memdesc:a500be6a131f849944fc4e3c541ec9ca7 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the Z axis.  <a href="#a500be6a131f849944fc4e3c541ec9ca7">More...</a><br/></td></tr>
<tr class="separator:a500be6a131f849944fc4e3c541ec9ca7 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacaf90e920f4df3ae493e6635f12b9da inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#aacaf90e920f4df3ae493e6635f12b9da">Rotate</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Axis, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)=0</td></tr>
<tr class="memdesc:aacaf90e920f4df3ae493e6635f12b9da inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates the object from it's existing rotation.  <a href="#aacaf90e920f4df3ae493e6635f12b9da">More...</a><br/></td></tr>
<tr class="separator:aacaf90e920f4df3ae493e6635f12b9da inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a119073c976bedb00126f23bb39a73cab inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a119073c976bedb00126f23bb39a73cab">Rotate</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)=0</td></tr>
<tr class="memdesc:a119073c976bedb00126f23bb39a73cab inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates the object from it's existing rotation.  <a href="#a119073c976bedb00126f23bb39a73cab">More...</a><br/></td></tr>
<tr class="separator:a119073c976bedb00126f23bb39a73cab inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a869c69504a4f0266e02de46dd1bfe68a inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a869c69504a4f0266e02de46dd1bfe68a">Scale</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)=0</td></tr>
<tr class="memdesc:a869c69504a4f0266e02de46dd1bfe68a inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the object from it's current size.  <a href="#a869c69504a4f0266e02de46dd1bfe68a">More...</a><br/></td></tr>
<tr class="separator:a869c69504a4f0266e02de46dd1bfe68a inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa561d305f6b5e25ac8ac9d142736b9fc inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#aa561d305f6b5e25ac8ac9d142736b9fc">Scale</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)=0</td></tr>
<tr class="memdesc:aa561d305f6b5e25ac8ac9d142736b9fc inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the object from it's current size.  <a href="#aa561d305f6b5e25ac8ac9d142736b9fc">More...</a><br/></td></tr>
<tr class="separator:aa561d305f6b5e25ac8ac9d142736b9fc inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d9bfdc2c27adbd6fdc2a3bf06182e76 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a6d9bfdc2c27adbd6fdc2a3bf06182e76">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Loc)=0</td></tr>
<tr class="memdesc:a6d9bfdc2c27adbd6fdc2a3bf06182e76 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location of this object in parent space.  <a href="#a6d9bfdc2c27adbd6fdc2a3bf06182e76">More...</a><br/></td></tr>
<tr class="separator:a6d9bfdc2c27adbd6fdc2a3bf06182e76 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33598960cd9f8a35946b208d7ac821d8 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a33598960cd9f8a35946b208d7ac821d8">SetLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)=0</td></tr>
<tr class="memdesc:a33598960cd9f8a35946b208d7ac821d8 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location of this object in parent space via Reals.  <a href="#a33598960cd9f8a35946b208d7ac821d8">More...</a><br/></td></tr>
<tr class="separator:a33598960cd9f8a35946b208d7ac821d8 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae192e4a88529d7da69b2bc1ca0c46e70 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#ae192e4a88529d7da69b2bc1ca0c46e70">SetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Ori)=0</td></tr>
<tr class="memdesc:ae192e4a88529d7da69b2bc1ca0c46e70 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of this object in parent space.  <a href="#ae192e4a88529d7da69b2bc1ca0c46e70">More...</a><br/></td></tr>
<tr class="separator:ae192e4a88529d7da69b2bc1ca0c46e70 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7b778dbf9e7ee3dd43712ae9d7bbb33 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#ac7b778dbf9e7ee3dd43712ae9d7bbb33">SetOrientation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> W)=0</td></tr>
<tr class="memdesc:ac7b778dbf9e7ee3dd43712ae9d7bbb33 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of this object in parent space via Reals.  <a href="#ac7b778dbf9e7ee3dd43712ae9d7bbb33">More...</a><br/></td></tr>
<tr class="separator:ac7b778dbf9e7ee3dd43712ae9d7bbb33 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07dd319a825b6105348fb02e5d7d752d inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a07dd319a825b6105348fb02e5d7d752d">SetScale</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Sc)=0</td></tr>
<tr class="memdesc:a07dd319a825b6105348fb02e5d7d752d inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scaling to be applied to this object.  <a href="#a07dd319a825b6105348fb02e5d7d752d">More...</a><br/></td></tr>
<tr class="separator:a07dd319a825b6105348fb02e5d7d752d inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dd61669faab66193ffab114a4a80a86 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a7dd61669faab66193ffab114a4a80a86">SetScale</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)=0</td></tr>
<tr class="memdesc:a7dd61669faab66193ffab114a4a80a86 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scaling to be applied to this object via Reals.  <a href="#a7dd61669faab66193ffab114a4a80a86">More...</a><br/></td></tr>
<tr class="separator:a7dd61669faab66193ffab114a4a80a86 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad95c5c1de8bfd5f36ad91da703b7ded5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#ad95c5c1de8bfd5f36ad91da703b7ded5">Translate</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Trans)=0</td></tr>
<tr class="memdesc:ad95c5c1de8bfd5f36ad91da703b7ded5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves this object from it's current location.  <a href="#ad95c5c1de8bfd5f36ad91da703b7ded5">More...</a><br/></td></tr>
<tr class="separator:ad95c5c1de8bfd5f36ad91da703b7ded5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4b51c3aafc53cf3cd69889773dfe26 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a8c4b51c3aafc53cf3cd69889773dfe26">Translate</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)=0</td></tr>
<tr class="memdesc:a8c4b51c3aafc53cf3cd69889773dfe26 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves this object from it's current location.  <a href="#a8c4b51c3aafc53cf3cd69889773dfe26">More...</a><br/></td></tr>
<tr class="separator:a8c4b51c3aafc53cf3cd69889773dfe26 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb2e6509d0d5378e8988a201aa5764be inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#abb2e6509d0d5378e8988a201aa5764be">Yaw</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)=0</td></tr>
<tr class="memdesc:abb2e6509d0d5378e8988a201aa5764be inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the Y axis.  <a href="#abb2e6509d0d5378e8988a201aa5764be">More...</a><br/></td></tr>
<tr class="separator:abb2e6509d0d5378e8988a201aa5764be inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Audio_1_1iSound"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Audio_1_1iSound')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">Mezzanine::Audio::iSound</a></td></tr>
<tr class="memitem:a2d14232f28f0bd5598499ba8cf1ecd73 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2d14232f28f0bd5598499ba8cf1ecd73"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a2d14232f28f0bd5598499ba8cf1ecd73">iSound</a> ()</td></tr>
<tr class="memdesc:a2d14232f28f0bd5598499ba8cf1ecd73 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a2d14232f28f0bd5598499ba8cf1ecd73 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51b4f0ebb6ddc645123945c7cb2505de inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a51b4f0ebb6ddc645123945c7cb2505de"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a51b4f0ebb6ddc645123945c7cb2505de">~iSound</a> ()</td></tr>
<tr class="memdesc:a51b4f0ebb6ddc645123945c7cb2505de inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a51b4f0ebb6ddc645123945c7cb2505de inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2db4798835a27dfe29c35619cc34d80 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#ae2db4798835a27dfe29c35619cc34d80">AttachEffect</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Slot, <a class="el" href="classMezzanine_1_1Audio_1_1iEffect.xhtml">iEffect</a> *Eff)=0</td></tr>
<tr class="memdesc:ae2db4798835a27dfe29c35619cc34d80 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attaches an <a class="el" href="classMezzanine_1_1Audio_1_1iEffect.xhtml">iEffect</a> to this sound.  <a href="#ae2db4798835a27dfe29c35619cc34d80">More...</a><br/></td></tr>
<tr class="separator:ae2db4798835a27dfe29c35619cc34d80 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa027efe10d076e06685414b350894caa inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#aa027efe10d076e06685414b350894caa">AttachFilter</a> (<a class="el" href="classMezzanine_1_1Audio_1_1iFilter.xhtml">iFilter</a> *Fil)=0</td></tr>
<tr class="memdesc:aa027efe10d076e06685414b350894caa inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attaches a filter to this sound that will operate on the direct feed, separate from any effects.  <a href="#aa027efe10d076e06685414b350894caa">More...</a><br/></td></tr>
<tr class="separator:aa027efe10d076e06685414b350894caa inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a349e2d1b13f0a164b270004fa800733c inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a349e2d1b13f0a164b270004fa800733c">GetBaseVolume</a> () const =0</td></tr>
<tr class="memdesc:a349e2d1b13f0a164b270004fa800733c inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current volume of the sound source.  <a href="#a349e2d1b13f0a164b270004fa800733c">More...</a><br/></td></tr>
<tr class="separator:a349e2d1b13f0a164b270004fa800733c inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c55a374a4a7e31ea86be88e60b5da98 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a8c55a374a4a7e31ea86be88e60b5da98">GetCompressedSize</a> () const </td></tr>
<tr class="memdesc:a8c55a374a4a7e31ea86be88e60b5da98 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of the encoded audio source in use.  <a href="#a8c55a374a4a7e31ea86be88e60b5da98">More...</a><br/></td></tr>
<tr class="separator:a8c55a374a4a7e31ea86be88e60b5da98 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82c65efb35761205810b4d06a5d3d61b inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a82c65efb35761205810b4d06a5d3d61b">GetCurrentCompressedPosition</a> () const </td></tr>
<tr class="memdesc:a82c65efb35761205810b4d06a5d3d61b inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the sounds current position in the encoded audio source.  <a href="#a82c65efb35761205810b4d06a5d3d61b">More...</a><br/></td></tr>
<tr class="separator:a82c65efb35761205810b4d06a5d3d61b inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefde8eb1d8ecbed44b59e219eebbb683 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#aefde8eb1d8ecbed44b59e219eebbb683">GetCurrentPosition</a> () const </td></tr>
<tr class="memdesc:aefde8eb1d8ecbed44b59e219eebbb683 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the sounds current position in the decoded audio source.  <a href="#aefde8eb1d8ecbed44b59e219eebbb683">More...</a><br/></td></tr>
<tr class="separator:aefde8eb1d8ecbed44b59e219eebbb683 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fbcf21c114abd6801a5815007dc01ea inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a3fbcf21c114abd6801a5815007dc01ea">GetCurrentTime</a> () const </td></tr>
<tr class="memdesc:a3fbcf21c114abd6801a5815007dc01ea inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current time position in the stream.  <a href="#a3fbcf21c114abd6801a5815007dc01ea">More...</a><br/></td></tr>
<tr class="separator:a3fbcf21c114abd6801a5815007dc01ea inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accef466283d6ef7874defd4a61d9e4ee inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iDecoder.xhtml">iDecoder</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#accef466283d6ef7874defd4a61d9e4ee">GetDecoder</a> () const =0</td></tr>
<tr class="memdesc:accef466283d6ef7874defd4a61d9e4ee inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the decoder that belongs to this sound.  <a href="#accef466283d6ef7874defd4a61d9e4ee">More...</a><br/></td></tr>
<tr class="separator:accef466283d6ef7874defd4a61d9e4ee inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc543cc73ecfe14d848d34a6ea57a342 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iEffect.xhtml">iEffect</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#adc543cc73ecfe14d848d34a6ea57a342">GetEffect</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Slot) const =0</td></tr>
<tr class="memdesc:adc543cc73ecfe14d848d34a6ea57a342 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the <a class="el" href="classMezzanine_1_1Audio_1_1iEffect.xhtml">iEffect</a> attached at the specified slot.  <a href="#adc543cc73ecfe14d848d34a6ea57a342">More...</a><br/></td></tr>
<tr class="separator:adc543cc73ecfe14d848d34a6ea57a342 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78762c0221b722f7ac5415e97617dd67 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iFilter.xhtml">iFilter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a78762c0221b722f7ac5415e97617dd67">GetFilter</a> () const =0</td></tr>
<tr class="memdesc:a78762c0221b722f7ac5415e97617dd67 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the filter currently being used by this object.  <a href="#a78762c0221b722f7ac5415e97617dd67">More...</a><br/></td></tr>
<tr class="separator:a78762c0221b722f7ac5415e97617dd67 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadc3f331f3b9f026e9a1371099c91a38 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#aadc3f331f3b9f026e9a1371099c91a38">GetMaxEffectSlots</a> () const =0</td></tr>
<tr class="memdesc:aadc3f331f3b9f026e9a1371099c91a38 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the max number of <a class="el" href="classMezzanine_1_1Audio_1_1iEffect.xhtml">iEffect</a> instances that can be attached to this sound.  <a href="#aadc3f331f3b9f026e9a1371099c91a38">More...</a><br/></td></tr>
<tr class="separator:aadc3f331f3b9f026e9a1371099c91a38 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac77cc1449ee0f74265711bde62f0d487 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#ac77cc1449ee0f74265711bde62f0d487">GetMaxVolume</a> () const =0</td></tr>
<tr class="memdesc:ac77cc1449ee0f74265711bde62f0d487 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Maximum volume of the sound source.  <a href="#ac77cc1449ee0f74265711bde62f0d487">More...</a><br/></td></tr>
<tr class="separator:ac77cc1449ee0f74265711bde62f0d487 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d8de4adad859946e68a262093e78a02 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a4d8de4adad859946e68a262093e78a02">GetMinVolume</a> () const =0</td></tr>
<tr class="memdesc:a4d8de4adad859946e68a262093e78a02 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the minimum volume of the sound source.  <a href="#a4d8de4adad859946e68a262093e78a02">More...</a><br/></td></tr>
<tr class="separator:a4d8de4adad859946e68a262093e78a02 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08c2760703788f2bb86bf8173c45d5f9 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a08c2760703788f2bb86bf8173c45d5f9">GetNumEffectSlotsAvailable</a> () const =0</td></tr>
<tr class="memdesc:a08c2760703788f2bb86bf8173c45d5f9 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of <a class="el" href="classMezzanine_1_1Audio_1_1iEffect.xhtml">iEffect</a> slots remaining that can be attached to.  <a href="#a08c2760703788f2bb86bf8173c45d5f9">More...</a><br/></td></tr>
<tr class="separator:a08c2760703788f2bb86bf8173c45d5f9 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f3170e4d4d10f6baa3b4e8324c23ed3 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a2f3170e4d4d10f6baa3b4e8324c23ed3">GetPitch</a> () const =0</td></tr>
<tr class="memdesc:a2f3170e4d4d10f6baa3b4e8324c23ed3 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the pitch of the sound source.  <a href="#a2f3170e4d4d10f6baa3b4e8324c23ed3">More...</a><br/></td></tr>
<tr class="separator:a2f3170e4d4d10f6baa3b4e8324c23ed3 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaad5cea540ee38fc7b9eef26f113e914 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#aaad5cea540ee38fc7b9eef26f113e914">GetTotalSize</a> () const </td></tr>
<tr class="memdesc:aaad5cea540ee38fc7b9eef26f113e914 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the size of the decoded audio source in use.  <a href="#aaad5cea540ee38fc7b9eef26f113e914">More...</a><br/></td></tr>
<tr class="separator:aaad5cea540ee38fc7b9eef26f113e914 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef13feb72d84fd53880b323e989c0bbe inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#aef13feb72d84fd53880b323e989c0bbe">GetTotalTime</a> () const </td></tr>
<tr class="memdesc:aef13feb72d84fd53880b323e989c0bbe inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the length of the stream in seconds.  <a href="#aef13feb72d84fd53880b323e989c0bbe">More...</a><br/></td></tr>
<tr class="separator:aef13feb72d84fd53880b323e989c0bbe inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a53ad34b21b2215dd057d3f29781b37 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a3a53ad34b21b2215dd057d3f29781b37">GetType</a> () const =0</td></tr>
<tr class="memdesc:a3a53ad34b21b2215dd057d3f29781b37 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the sound type of this sound.  <a href="#a3a53ad34b21b2215dd057d3f29781b37">More...</a><br/></td></tr>
<tr class="separator:a3a53ad34b21b2215dd057d3f29781b37 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fdb397ce0ac63711b6806852c1e8b25 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a8fdb397ce0ac63711b6806852c1e8b25">GetVolume</a> () const =0</td></tr>
<tr class="memdesc:a8fdb397ce0ac63711b6806852c1e8b25 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current volume of the sound source after all volume settings are applied.  <a href="#a8fdb397ce0ac63711b6806852c1e8b25">More...</a><br/></td></tr>
<tr class="separator:a8fdb397ce0ac63711b6806852c1e8b25 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33407bbae592320150d586f21b9b2ddd inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a33407bbae592320150d586f21b9b2ddd">IsLooping</a> () const =0</td></tr>
<tr class="memdesc:a33407bbae592320150d586f21b9b2ddd inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the sound is currently set to loop.  <a href="#a33407bbae592320150d586f21b9b2ddd">More...</a><br/></td></tr>
<tr class="separator:a33407bbae592320150d586f21b9b2ddd inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0bf2c19c77a0122e7b44a2d2fddce14 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#ac0bf2c19c77a0122e7b44a2d2fddce14">IsPaused</a> () const =0</td></tr>
<tr class="memdesc:ac0bf2c19c77a0122e7b44a2d2fddce14 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not the sound is currently paused.  <a href="#ac0bf2c19c77a0122e7b44a2d2fddce14">More...</a><br/></td></tr>
<tr class="separator:ac0bf2c19c77a0122e7b44a2d2fddce14 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93de95a5f561a713a6c7870b4e8190c0 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a93de95a5f561a713a6c7870b4e8190c0">IsPlaying</a> () const =0</td></tr>
<tr class="memdesc:a93de95a5f561a713a6c7870b4e8190c0 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not the sound is currently playing.  <a href="#a93de95a5f561a713a6c7870b4e8190c0">More...</a><br/></td></tr>
<tr class="separator:a93de95a5f561a713a6c7870b4e8190c0 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b539143e67d873cbc4607770c00a236 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a7b539143e67d873cbc4607770c00a236">IsStopped</a> () const =0</td></tr>
<tr class="memdesc:a7b539143e67d873cbc4607770c00a236 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not the sound is currently stopped.  <a href="#a7b539143e67d873cbc4607770c00a236">More...</a><br/></td></tr>
<tr class="separator:a7b539143e67d873cbc4607770c00a236 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8db47b66b5ce6d7642ed15f81863a2a inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#ab8db47b66b5ce6d7642ed15f81863a2a">IsValid</a> () const =0</td></tr>
<tr class="memdesc:ab8db47b66b5ce6d7642ed15f81863a2a inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if this sound is valid and is ready for playback.  <a href="#ab8db47b66b5ce6d7642ed15f81863a2a">More...</a><br/></td></tr>
<tr class="separator:ab8db47b66b5ce6d7642ed15f81863a2a inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4176e0c327796d44bf41cdf8f6e48433 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a4176e0c327796d44bf41cdf8f6e48433">Loop</a> (bool ToLoop)=0</td></tr>
<tr class="memdesc:a4176e0c327796d44bf41cdf8f6e48433 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether the playback of the sound should loop or not.  <a href="#a4176e0c327796d44bf41cdf8f6e48433">More...</a><br/></td></tr>
<tr class="separator:a4176e0c327796d44bf41cdf8f6e48433 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a989953ebb914f4a40783058ce8eb67ee inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a989953ebb914f4a40783058ce8eb67ee"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a989953ebb914f4a40783058ce8eb67ee">Pause</a> ()=0</td></tr>
<tr class="memdesc:a989953ebb914f4a40783058ce8eb67ee inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pauses playback of the sound at it's current position in the stream. <br/></td></tr>
<tr class="separator:a989953ebb914f4a40783058ce8eb67ee inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85af24ecb2abde51c7a17736474fbb66 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a85af24ecb2abde51c7a17736474fbb66">Play</a> ()=0</td></tr>
<tr class="memdesc:a85af24ecb2abde51c7a17736474fbb66 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plays the sound with it's current configuration.  <a href="#a85af24ecb2abde51c7a17736474fbb66">More...</a><br/></td></tr>
<tr class="separator:a85af24ecb2abde51c7a17736474fbb66 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cbb08434d0fb0d8728f412e6e211ff5 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a8cbb08434d0fb0d8728f412e6e211ff5">RemoveEffect</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Slot)=0</td></tr>
<tr class="memdesc:a8cbb08434d0fb0d8728f412e6e211ff5 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the <a class="el" href="classMezzanine_1_1Audio_1_1iEffect.xhtml">iEffect</a> in the specified slot.  <a href="#a8cbb08434d0fb0d8728f412e6e211ff5">More...</a><br/></td></tr>
<tr class="separator:a8cbb08434d0fb0d8728f412e6e211ff5 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4290a91b64ffa7beeb7d7b94f7f1736c inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4290a91b64ffa7beeb7d7b94f7f1736c"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a4290a91b64ffa7beeb7d7b94f7f1736c">RemoveFilter</a> ()=0</td></tr>
<tr class="memdesc:a4290a91b64ffa7beeb7d7b94f7f1736c inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes any currently attached filters. <br/></td></tr>
<tr class="separator:a4290a91b64ffa7beeb7d7b94f7f1736c inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99a5c1fa7f8fc173b59e4d6e5c4150b2 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a99a5c1fa7f8fc173b59e4d6e5c4150b2">Seek</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Seconds, bool Relative=false)=0</td></tr>
<tr class="memdesc:a99a5c1fa7f8fc173b59e4d6e5c4150b2 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current position of the stream from which to playback audio.  <a href="#a99a5c1fa7f8fc173b59e4d6e5c4150b2">More...</a><br/></td></tr>
<tr class="separator:a99a5c1fa7f8fc173b59e4d6e5c4150b2 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6616a4eb925208d55e650ed8560382c8 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a6616a4eb925208d55e650ed8560382c8">SetBaseVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Base)=0</td></tr>
<tr class="memdesc:a6616a4eb925208d55e650ed8560382c8 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the current volume of the sound source before effects and other volume settings.  <a href="#a6616a4eb925208d55e650ed8560382c8">More...</a><br/></td></tr>
<tr class="separator:a6616a4eb925208d55e650ed8560382c8 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab962b9cedc56e3d7157f3aaf458fb4b inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#aab962b9cedc56e3d7157f3aaf458fb4b">SetMaxVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> MaxVol)=0</td></tr>
<tr class="memdesc:aab962b9cedc56e3d7157f3aaf458fb4b inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the maximum volume the sound source can achieve.  <a href="#aab962b9cedc56e3d7157f3aaf458fb4b">More...</a><br/></td></tr>
<tr class="separator:aab962b9cedc56e3d7157f3aaf458fb4b inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c1cdee92dec2f5df3d2f19c589e3d53 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a9c1cdee92dec2f5df3d2f19c589e3d53">SetMinVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> MinVol)=0</td></tr>
<tr class="memdesc:a9c1cdee92dec2f5df3d2f19c589e3d53 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the minimum volume the sound source can achieve.  <a href="#a9c1cdee92dec2f5df3d2f19c589e3d53">More...</a><br/></td></tr>
<tr class="separator:a9c1cdee92dec2f5df3d2f19c589e3d53 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6bd47a7460bf458791c553c0e08530 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a7e6bd47a7460bf458791c553c0e08530">SetPitch</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Pitch)=0</td></tr>
<tr class="memdesc:a7e6bd47a7460bf458791c553c0e08530 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the pitch of the sound source.  <a href="#a7e6bd47a7460bf458791c553c0e08530">More...</a><br/></td></tr>
<tr class="separator:a7e6bd47a7460bf458791c553c0e08530 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3769de48d6c5b71e034257a6e51eaea inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#ad3769de48d6c5b71e034257a6e51eaea">SetStream</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)=0</td></tr>
<tr class="memdesc:ad3769de48d6c5b71e034257a6e51eaea inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a new stream for playback by this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>.  <a href="#ad3769de48d6c5b71e034257a6e51eaea">More...</a><br/></td></tr>
<tr class="separator:ad3769de48d6c5b71e034257a6e51eaea inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48e102c3d7b9d9527c13d0e65c491e09 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a48e102c3d7b9d9527c13d0e65c491e09">SetStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, <a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)=0</td></tr>
<tr class="memdesc:a48e102c3d7b9d9527c13d0e65c491e09 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a new stream for playback by this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>.  <a href="#a48e102c3d7b9d9527c13d0e65c491e09">More...</a><br/></td></tr>
<tr class="separator:a48e102c3d7b9d9527c13d0e65c491e09 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec6bf25534d93d870ec5594656122815 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#aec6bf25534d93d870ec5594656122815">SetStream</a> (<a class="el" href="classMezzanine_1_1Audio_1_1iDecoder.xhtml">iDecoder</a> *Decode)=0</td></tr>
<tr class="memdesc:aec6bf25534d93d870ec5594656122815 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a new stream for playback by this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> via a new decoder.  <a href="#aec6bf25534d93d870ec5594656122815">More...</a><br/></td></tr>
<tr class="separator:aec6bf25534d93d870ec5594656122815 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b9b51543b547fc60aa3839dc05c7302 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#a7b9b51543b547fc60aa3839dc05c7302">SetStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, <a class="el" href="classMezzanine_1_1Audio_1_1iDecoder.xhtml">iDecoder</a> *Decode)=0</td></tr>
<tr class="memdesc:a7b9b51543b547fc60aa3839dc05c7302 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a new stream for playback by this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> via a new decoder.  <a href="#a7b9b51543b547fc60aa3839dc05c7302">More...</a><br/></td></tr>
<tr class="separator:a7b9b51543b547fc60aa3839dc05c7302 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae81ab48628c1b2f8d90146311495ecd1 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae81ab48628c1b2f8d90146311495ecd1"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml#ae81ab48628c1b2f8d90146311495ecd1">Stop</a> ()=0</td></tr>
<tr class="memdesc:ae81ab48628c1b2f8d90146311495ecd1 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops playback of the sound and resets it's position back to the start. <br/></td></tr>
<tr class="separator:ae81ab48628c1b2f8d90146311495ecd1 inherit pub_methods_classMezzanine_1_1Audio_1_1iSound"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aed8e1016cca186770083a13c72a0163a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1SoundProxy.xhtml#aed8e1016cca186770083a13c72a0163a">SerializableName</a> ()</td></tr>
<tr class="memdesc:aed8e1016cca186770083a13c72a0163a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag the Renderable class will leave behind as its instances are serialized.  <a href="#aed8e1016cca186770083a13c72a0163a">More...</a><br/></td></tr>
<tr class="separator:aed8e1016cca186770083a13c72a0163a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1WorldProxy"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1WorldProxy')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldProxy.xhtml">Mezzanine::WorldProxy</a></td></tr>
<tr class="memitem:a5b5c9bff9453f9fb7dd347bc553a01e7 inherit pub_static_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a5b5c9bff9453f9fb7dd347bc553a01e7">GetSerializableName</a> ()</td></tr>
<tr class="memdesc:a5b5c9bff9453f9fb7dd347bc553a01e7 inherit pub_static_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag the proxy class will leave behind as its instances are serialized.  <a href="#a5b5c9bff9453f9fb7dd347bc553a01e7">More...</a><br/></td></tr>
<tr class="separator:a5b5c9bff9453f9fb7dd347bc553a01e7 inherit pub_static_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1WorldProxy"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1WorldProxy')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1WorldProxy.xhtml">Mezzanine::WorldProxy</a></td></tr>
<tr class="memitem:a250e738cf4ffa72d9a8b42c6465538b2 inherit pro_attribs_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a250e738cf4ffa72d9a8b42c6465538b2">ParentObject</a></td></tr>
<tr class="memdesc:a250e738cf4ffa72d9a8b42c6465538b2 inherit pro_attribs_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the Object this proxy belongs to.  <a href="#a250e738cf4ffa72d9a8b42c6465538b2">More...</a><br/></td></tr>
<tr class="separator:a250e738cf4ffa72d9a8b42c6465538b2 inherit pro_attribs_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is a proxy class for representing a sound being played in 3D space. </p>

<p>Definition at line <a class="el" href="soundproxy_8h_source.xhtml#l00057">57</a> of file <a class="el" href="soundproxy_8h_source.xhtml">soundproxy.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a58630daa0114ac228137501012401ad4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::AddToWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a93971da74f34533ffac9873d9bf3e06f">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a34a2afb6a3838a9a1979c4797d380760"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::SoundProxy::GetDopplerStrength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Doppler Strength of the sound. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the doppler strength. </dd></dl>

</div>
</div>
<a class="anchor" id="a4e7ce8ee180e868db6a6339f8bd47014"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Audio::SoundProxy::GetDopplerVelocity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the doppler velocity vector. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the override for the doppler velocity vector. </dd></dl>

</div>
</div>
<a class="anchor" id="ac65210c66f6f0fc3ef1271dc46772265"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::SoundProxy::GetInnerConeAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the inner cone angle of the sound source. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the angle of the inner sound cone of the source. </dd></dl>

</div>
</div>
<a class="anchor" id="a79a20eb388de94513e56a0fa2eaf0de2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::SoundProxy::GetMaxDistance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the distance at which sound attenuation will stop. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the distance from the source where attenuation will stop. </dd></dl>

</div>
</div>
<a class="anchor" id="ae5a64070b460cf033914bc437004df13"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::SoundProxy::GetMinDistance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the distance at which sound attenuation will start. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the distance from the source where attenuation will start. </dd></dl>

</div>
</div>
<a class="anchor" id="a75e9d277ff3b0492d81791499f9da16a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::SoundProxy::GetOuterConeAngle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the outer cone angle of the sound source. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the angle of the outer sound cone of the source. </dd></dl>

</div>
</div>
<a class="anchor" id="afeb57d0c27a959fa3502f3e7795aa7a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::SoundProxy::GetOuterConeVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the outer cone volume of the sound source. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns how much the volume of the source is scaled in the outer cone. </dd></dl>

</div>
</div>
<a class="anchor" id="a00a3d12eeee043b15054d6b8dd9e74d4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::SoundProxy::GetRolloffFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Rolloff factor of the sound source. </p>
<p>This function will get the factor used in attenuating the source over distance. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the factor used in attenuating the source over distance. </dd></dl>

</div>
</div>
<a class="anchor" id="a6ab0a3a7af3e213185f1a6dce72e3908"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Audio::SoundProxy::GetVelocity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current velocity of this sound proxy. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing this proxy's current velocity. </dd></dl>

</div>
</div>
<a class="anchor" id="ade17f2c25c28739bb66797f1c9d5871c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::SoundProxy::IsDirectingSound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not this sound proxy is emitting in a specific direction. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if this sound proxy is emitting in a specific direction, false if it's emitting in all directions. </dd></dl>

</div>
</div>
<a class="anchor" id="a4ed6a9e9d0cb6c2a1646d05b7d4feec3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::SoundProxy::IsInWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not this object is inside of it's world. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if this proxy is inserted in it's respective subsystems world. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a407e03a53d2d7136ecf8fecaead8fec1">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a70a621d8844fce1e13bc016a43266f38"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::RemoveFromWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a17d96d43ffaf90b949542d327b967c01">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="aed8e1016cca186770083a13c72a0163a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Audio::SoundProxy::SerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag the Renderable class will leave behind as its instances are serialized. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing the name of this class. </dd></dl>

<p>Definition at line <a class="el" href="soundproxy_8h_source.xhtml#l00174">174</a> of file <a class="el" href="soundproxy_8h_source.xhtml">soundproxy.h</a>.</p>

</div>
</div>
<a class="anchor" id="a26965c74d3c425e752cc3a14d9ad7e0c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetDirectSound </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether or not sounds generated by this sound proxy will be emitted in a specified direction. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>True to enable this sound proxy to direct it's audio, false to have it emit in all directions. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a29a89099a1af92ceab2cf368d53d6041"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetDopplerStrength </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>DopStr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the doppler strength, which impacts the doppler effect. </p>
<p>This function will set the doppler strength of the sound source, which can enhance or diminish the doppler effect given off by this sound source. Default: 1.0 </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DopStr</td><td>The doppler strength to be applied to this sound source. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad5171efe62696a113752264e70350a02"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetDopplerVelocity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>DopVel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the doppler velocity vector. </p>
<p>In most cases you shouldn't need to call this as this is handled by the engine. Is called every time position, velocity, or direction is altered. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DopVel</td><td>A vector3 representing the doppler velocity to be applied. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aac6e4bc80bb150b50b76602d0310fdc5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetInnerConeAngle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>InnerAngle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the inner cone angle of the sound source if you want the sound to be projected as a cone. </p>
<p>This function will set the angle for the inner cone which the sound will be projected. The cone will open up in the direction set by SetDirection(). Sounds are at their loudest only if the listener is within the inner cone. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">InnerAngle</td><td>The angle of the inner cone. Range is: 0.0 to 360.0. Default: 360.0 (broadcast) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2bf8d41015b3dc9140780256de020a4a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetMaxDistance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>MaxDistance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the distance from the sound source where attenuation will stop. </p>
<p>This function will set the distance from the sound source where attenuation effects will stop being applied. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MaxDistance</td><td>The distance at which attenuation effects stop being applied. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9c5cbea105a358a94e8e072ac5a5f9d0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetMinDistance </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>MinDistance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the distance from the sound source where attenuation will start. </p>
<p>This function will set the distance from the sound source where attenuation effects will start being applied. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MinDistance</td><td>The distance at which attenuation effects start being applied. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9e3229e6178ea86625f87adc8e118a70"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetOuterConeAngle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>OuterAngle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the outer cone angle of the sound source if you want the sound to be projected as a cone. </p>
<p>This function will set the angle for the outer cone which the sound will be projected. The cone will open up in the direction set by SetDirection(). Sounds connot be heard if the listener is outside the outer cone. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OuterAngle</td><td>The angle of the outer cone. Range is: 0.0 to 360.0. Default: 360.0 (broadcast) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a10e3034d6db7d56f26ecbb60b58bc44a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetOuterConeVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>OuterVolume</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets how much the volume is scaled in the outer cone. </p>
<p>This function will set how much the volume is scaled by for sounds in the outer cone of the sound source. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OuterVolume</td><td>The scale for volume for sounds in the outer cone. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="acda5b2476fb992a56b3aa161dba75098"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetRolloffFactor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Rolloff</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Rolloff factor used to attenuate the sound over a distance. </p>
<p>This function will set how much the sound source will attenuate over a distance. Larger values will make the sound attenuate faster/shorter distnaces, smaller values will make the sound carry better. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Rolloff</td><td>The factor at which the sound will attenuate. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0656a9c98e07252974ec7801d97615c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::SoundProxy::SetVelocity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Vel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the velocity of this sound proxy. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Vel</td><td>The velocity to be given to this sound proxy. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/Audio/<a class="el" href="soundproxy_8h_source.xhtml">soundproxy.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Sep 16 2013 06:21:47 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
