<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/meshmanager.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September14,2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">meshmanager.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _meshmanager_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _meshmanager_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;vector2.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;meshmanager.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;Graphics/mesh.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;Ogre.h&gt;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">template</span>&lt;&gt; MeshManager* Singleton&lt;MeshManager&gt;::SingletonPtr = NULL;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a6ef158bb2f5d96676df284ab1500f170">   53</a></span>&#160;    <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a6ef158bb2f5d96676df284ab1500f170" title="Class constructor.">MeshManager::MeshManager</a>()</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a830f36f16d0ea53e3bb41d8bdc86076e">   57</a></span>&#160;    <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a6ef158bb2f5d96676df284ab1500f170" title="Class constructor.">MeshManager::MeshManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">        /// @todo This class currently doesn&#39;t initialize anything from XML, if that changes this constructor needs to be expanded.</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"></span>    }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a5022cb5a023a4ec75ca47ea722ecdad1">   62</a></span>&#160;    <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a5022cb5a023a4ec75ca47ea722ecdad1" title="Class destructor.">MeshManager::~MeshManager</a>()</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#a2d47899078ed399f240e5e8567b2558c" title="Removes this manager from any necessary configuration so it can be safely disposed of...">Deinitialize</a>();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#ad6ef502c838312f778c5ca77c706f20d" title="Destroys all the meshes generated by this generator.">DestroyAllGeneratedMeshes</a>();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"></span>    <span class="comment">// Generic Mesh Utility</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a1d047694e22c994c97ef45a121ca372f">   71</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a1d047694e22c994c97ef45a121ca372f" title="Gets a mesh stored in this manager.">MeshManager::GetMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        MeshIterator lit = this-&gt;LoadedMeshes.find(MeshName);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">if</span>(lit != this-&gt;LoadedMeshes.end())</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">return</span> (*lit).second;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        MeshIterator git = this-&gt;GeneratedMeshes.find(MeshName);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">if</span>(git != this-&gt;GeneratedMeshes.end())</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keywordflow">return</span> (*git).second;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#aa807f17cbba66ff45f8ffd5d027dec7e">   82</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#aa807f17cbba66ff45f8ffd5d027dec7e" title="Clears this manager of all meshes, both loaded and generated.">MeshManager::DestroyAllMeshes</a>()</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#ad6ef502c838312f778c5ca77c706f20d" title="Destroys all the meshes generated by this generator.">DestroyAllGeneratedMeshes</a>();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#a95b66f15b74a8eb4f8cdfab411de6289" title="Unloads every mesh that is currently loaded.">UnloadAllLoadedMeshes</a>();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment"></span>    <span class="comment">// Non-Generated Mesh Management</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a1165cfd040bce804af9644dcdfc8deab">   91</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a1165cfd040bce804af9644dcdfc8deab" title="Loads a mesh file from disk and prepares it for use.">MeshManager::LoadMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        MeshIterator it = this-&gt;LoadedMeshes.find(MeshName);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">if</span>( it != this-&gt;LoadedMeshes.end() )</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">return</span> (*it).second;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* Loaded = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>(Ogre::MeshManager::getSingleton().load(MeshName,Group));</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        this-&gt;LoadedMeshes[MeshName] = Loaded;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">return</span> Loaded;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#aa8bf0e0aad71969dd4076cd36e2e8ab3">  101</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#aa8bf0e0aad71969dd4076cd36e2e8ab3" title="Unloads a mesh file.">MeshManager::UnloadMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        MeshIterator it = this-&gt;LoadedMeshes.find(MeshName);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">if</span>( it == this-&gt;LoadedMeshes.end() )</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        Ogre::MeshManager::getSingleton().unload(MeshName);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keyword">delete</span> (*it).second;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        this-&gt;LoadedMeshes.erase(it);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a809d8b615341e55c3ed463b1e18c01db">  111</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a809d8b615341e55c3ed463b1e18c01db" title="Gets the number of currently loaded mesh files.">MeshManager::GetNumLoadedMeshes</a>()</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> this-&gt;LoadedMeshes.size();</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a95b66f15b74a8eb4f8cdfab411de6289">  116</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a95b66f15b74a8eb4f8cdfab411de6289" title="Unloads every mesh that is currently loaded.">MeshManager::UnloadAllLoadedMeshes</a>()</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">for</span>( MeshIterator it = this-&gt;LoadedMeshes.begin() ; it != this-&gt;LoadedMeshes.end() ; it++ )</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keyword">delete</span> (*it).second;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        this-&gt;LoadedMeshes.clear();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        Ogre::MeshManager::getSingleton().unloadAll();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment"></span>    <span class="comment">// Generated Mesh Management</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a0b6d3fef8ecc0e12ff6de14618e788d8">  129</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a0b6d3fef8ecc0e12ff6de14618e788d8" title="Gets the number of meshes this generator has created and are in use.">MeshManager::GetNumGeneratedMeshes</a>()</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">return</span> this-&gt;GeneratedMeshes.size();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a9c9286c940e56c4ba6a02ef58bfc0374">  134</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a9c9286c940e56c4ba6a02ef58bfc0374" title="Destroys a named Mesh, freeing it&#39;s resources.">MeshManager::DestroyGeneratedMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        MeshIterator it = this-&gt;GeneratedMeshes.find(MeshName);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">if</span>(it == this-&gt;GeneratedMeshes.end())</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        Ogre::MeshManager::getSingletonPtr()-&gt;remove((*it).second-&gt;GetName());</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keyword">delete</span> (*it).second;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        this-&gt;GeneratedMeshes.erase(it);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#ad6ef502c838312f778c5ca77c706f20d">  145</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#ad6ef502c838312f778c5ca77c706f20d" title="Destroys all the meshes generated by this generator.">MeshManager::DestroyAllGeneratedMeshes</a>()</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">for</span>( MeshIterator it = this-&gt;GeneratedMeshes.begin() ; it != this-&gt;GeneratedMeshes.end() ; it++ )</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            Ogre::MeshManager::getSingletonPtr()-&gt;remove((*it).second-&gt;GetName());</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keyword">delete</span> (*it).second;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        this-&gt;GeneratedMeshes.clear();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span>    <span class="comment">// Mesh Generation</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a91b20c96dc6c0ebcd888323e9e5f2d17">  158</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a91b20c96dc6c0ebcd888323e9e5f2d17" title="Creates a box graphical mesh.">MeshManager::CreateBoxMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MaterialName, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; HalfExtents)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Half = HalfExtents;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        Ogre::MaterialPtr TheMaterial = Ogre::MaterialManager::getSingleton().getByName(MaterialName);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GroupName = TheMaterial-&gt;getGroup();</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        Ogre::ManualObject* box = <span class="keyword">new</span> Ogre::ManualObject(<span class="stringliteral">&quot;TempMan&quot;</span>);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        box-&gt;begin(MaterialName);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="comment">//Front</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(0,0,1);  box-&gt;textureCoord(0,1);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(0,0,1);  box-&gt;textureCoord(1,1);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);    box-&gt;normal(0,0,1);  box-&gt;textureCoord(1,0);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(0,0,1);  box-&gt;textureCoord(0,0);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="comment">//Back</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(0,0,-1); box-&gt;textureCoord(0,1);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>); box-&gt;normal(0,0,-1); box-&gt;textureCoord(1,1);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(0,0,-1); box-&gt;textureCoord(1,0);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(0,0,-1); box-&gt;textureCoord(0,0);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="comment">//Left</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>); box-&gt;normal(-1,0,0); box-&gt;textureCoord(0,1);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(-1,0,0); box-&gt;textureCoord(1,1);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(-1,0,0); box-&gt;textureCoord(1,0);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(-1,0,0); box-&gt;textureCoord(0,0);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        <span class="comment">//Right</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(1,0,0);  box-&gt;textureCoord(0,1);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(1,0,0);  box-&gt;textureCoord(1,1);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(1,0,0);  box-&gt;textureCoord(1,0);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);    box-&gt;normal(1,0,0);  box-&gt;textureCoord(0,0);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="comment">//Top</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(0,1,0);  box-&gt;textureCoord(0,1);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);    box-&gt;normal(0,1,0);  box-&gt;textureCoord(1,1);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(0,1,0);  box-&gt;textureCoord(1,0);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(0,1,0);  box-&gt;textureCoord(0,0);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="comment">//Bottom</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>); box-&gt;normal(0,-1,0); box-&gt;textureCoord(0,1);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(0,-1,0); box-&gt;textureCoord(1,1);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        box-&gt;position(Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);   box-&gt;normal(0,-1,0); box-&gt;textureCoord(1,0);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        box-&gt;position(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>);  box-&gt;normal(0,-1,0); box-&gt;textureCoord(0,0);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        box-&gt;triangle(0,1,2);    box-&gt;triangle(0,2,3);    <span class="comment">//Front</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        box-&gt;triangle(4,5,6);    box-&gt;triangle(4,6,7);    <span class="comment">//Back</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        box-&gt;triangle(8,9,10);   box-&gt;triangle(8,10,11);  <span class="comment">//Left</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        box-&gt;triangle(12,13,14); box-&gt;triangle(12,14,15); <span class="comment">//Right</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        box-&gt;triangle(16,17,18); box-&gt;triangle(16,18,19); <span class="comment">//Top</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        box-&gt;triangle(20,21,22); box-&gt;triangle(20,22,23); <span class="comment">//Bottom</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        box-&gt;end();</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        Ogre::MeshPtr boxmesh = box-&gt;convertToMesh(MeshName, GroupName);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        boxmesh-&gt;_setBounds(Ogre::AxisAlignedBox(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>));</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> FirstCheck = Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> &gt; Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> ? Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> : Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Largest = FirstCheck &gt; Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> ? FirstCheck : Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        boxmesh-&gt;_setBoundingSphereRadius(1.4 * Largest);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* NewMesh = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>(boxmesh);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        this-&gt;GeneratedMeshes[MeshName] = NewMesh;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keyword">delete</span> box;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">return</span> NewMesh;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#abc098f0666692e80a5e23195dd6d6059">  216</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a91b20c96dc6c0ebcd888323e9e5f2d17" title="Creates a box graphical mesh.">MeshManager::CreateBoxMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>&amp; Colour, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; HalfExtents)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> MatName(MeshName+<span class="stringliteral">&quot;Mat&quot;</span>);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#aabf94057016ff9ad8de101f5189713fd" title="Creates a basic material in code using the provided colour.">CreateColouredMaterial</a>(MatName,Colour);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#a91b20c96dc6c0ebcd888323e9e5f2d17" title="Creates a box graphical mesh.">CreateBoxMesh</a>(MeshName,MatName,HalfExtents);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#aa95df6921ad121eeea7ab073d1d1e5a7">  223</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#aa95df6921ad121eeea7ab073d1d1e5a7" title="Creates a cylinder graphical mesh.">MeshManager::CreateCylinderMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MaterialName, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; HalfExtents, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; AxisOrientation, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; CircleRes, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Segments)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment">/// Start of MIT(Ogre Proceadural) License ///</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment"></span>        Ogre::Quaternion RotationModifier;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">if</span>(AxisOrientation == <a class="code" href="classMezzanine_1_1Vector3.xhtml#aa3d186d62631a38fe6cd553a1a92469a" title="Gets a vector representing the X unit of a Vector3.">Vector3::Unit_X</a>())</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            RotationModifier = Ogre::Quaternion(Ogre::Radian(0.5),Ogre::Vector3::UNIT_Z);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>( AxisOrientation == <a class="code" href="classMezzanine_1_1Vector3.xhtml#a62285c6842027aec46da54553c22bc61" title="Gets a vector representing the Y unit of a vector.">Vector3::Unit_Y</a>() )</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            RotationModifier = Ogre::Quaternion(1,0,0,0);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>( AxisOrientation == <a class="code" href="classMezzanine_1_1Vector3.xhtml#a6a70011d21182d44fd458458b1627ea1" title="Gets a vector representing the Z unit of a vector.">Vector3::Unit_Z</a>() )</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            RotationModifier = Ogre::Quaternion(Ogre::Radian(0.5),Ogre::Vector3::UNIT_X);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Half = HalfExtents;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        Ogre::MaterialPtr TheMaterial = Ogre::MaterialManager::getSingleton().getByName(MaterialName);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GroupName = TheMaterial-&gt;getGroup();</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> deltaAngle = (Ogre::Math::TWO_PI / CircleRes);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> deltaHeight = (Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> * 2)/(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>)Segments;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> radius = Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> offset = 0;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        Ogre::ManualObject* cylinder = <span class="keyword">new</span> Ogre::ManualObject(<span class="stringliteral">&quot;TempMan&quot;</span>);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        cylinder-&gt;begin(MaterialName);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> i = 0 ; i &lt;= Segments ; i++ )</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> j = 0 ; j &lt; CircleRes ; j++ )</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> x0 = radius * cosf(j*deltaAngle);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> z0 = radius * sinf(j*deltaAngle);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                cylinder-&gt;position( RotationModifier * Ogre::Vector3(x0, (i*deltaHeight) - Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>, z0) );</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                cylinder-&gt;normal( RotationModifier * Ogre::Vector3(x0,0,z0).normalisedCopy() );</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                cylinder-&gt;textureCoord(j/(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>)CircleRes, i/(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>)Segments);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                <span class="keywordflow">if</span>(i != Segments)</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                {<span class="comment"></span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">                    /// @todo These if/elses aren&#39;t really a long term solution</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">                    /// as they won&#39;t work for any more then 1 segment.  This needs to be addressed.</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment"></span>                    <span class="keywordflow">if</span>(offset + CircleRes == CircleRes * 2)</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                        cylinder-&gt;index(CircleRes);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                        cylinder-&gt;index(offset + CircleRes + 1);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                    cylinder-&gt;index(offset);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                    cylinder-&gt;index(offset + CircleRes);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    <span class="keywordflow">if</span>(offset + CircleRes == CircleRes * 2)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                        cylinder-&gt;index(0);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                        cylinder-&gt;index(offset + CircleRes + 1);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                    cylinder-&gt;index(offset + 1);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    cylinder-&gt;index(offset);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                offset++;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            }</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="comment">//low cap</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> centerIndex = offset;</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        cylinder-&gt;position( RotationModifier * Ogre::Vector3(0,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,0) );</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        cylinder-&gt;normal( RotationModifier * Ogre::Vector3::NEGATIVE_UNIT_Y );</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        cylinder-&gt;textureCoord(0,1);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        offset++;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> j = 0 ; j &lt;= CircleRes ; j++ )</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> x0 = radius * cosf(j*deltaAngle);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> z0 = radius * sinf(j*deltaAngle);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;            cylinder-&gt;position( RotationModifier * Ogre::Vector3(x0,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>, z0) );</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            cylinder-&gt;normal( RotationModifier * Ogre::Vector3::NEGATIVE_UNIT_Y );</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            cylinder-&gt;textureCoord(j/(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>)CircleRes,0.0);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            <span class="keywordflow">if</span>( j != CircleRes )</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;            {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                cylinder-&gt;index(centerIndex);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                cylinder-&gt;index(offset);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                cylinder-&gt;index(offset+1);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            offset++;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        }</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="comment">// high cap</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        centerIndex = offset;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        cylinder-&gt;position( RotationModifier * Ogre::Vector3(0,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,0) );</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        cylinder-&gt;normal( RotationModifier * Ogre::Vector3::UNIT_Y );</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        cylinder-&gt;textureCoord(0,0);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        offset++;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">for</span>(<a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> j = 0 ; j &lt;= CircleRes ; j++ )</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        {</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> x0 = radius * cosf(j*deltaAngle);</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> z0 = radius * sinf(j*deltaAngle);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            cylinder-&gt;position( RotationModifier * Ogre::Vector3(x0, Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>, z0) );</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            cylinder-&gt;normal( RotationModifier * Ogre::Vector3::UNIT_Y );</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            cylinder-&gt;textureCoord(j/(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>)CircleRes,1);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">if</span>( j != CircleRes )</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            {</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                cylinder-&gt;index(centerIndex);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                cylinder-&gt;index(offset+1);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                cylinder-&gt;index(offset);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            }</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            offset++;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;        cylinder-&gt;end();</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        Ogre::MeshPtr cylindermesh = cylinder-&gt;convertToMesh(MeshName, GroupName);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        cylindermesh-&gt;_setBounds(Ogre::AxisAlignedBox(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>));</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> FirstCheck = Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> &gt; Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> ? Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> : Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Largest = FirstCheck &gt; Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> ? FirstCheck : Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        cylindermesh-&gt;_setBoundingSphereRadius(1.4 * Largest);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* NewMesh = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>(cylindermesh);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        this-&gt;GeneratedMeshes[MeshName] = NewMesh;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keyword">delete</span> cylinder;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">return</span> NewMesh;<span class="comment"></span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">/// End of MIT(Ogre Proceadural) License ///</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment"></span>    }</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div>
<div class="line"><a name="l00339"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a7b930fb52234776cd2d6ccf75b12e201">  339</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#aa95df6921ad121eeea7ab073d1d1e5a7" title="Creates a cylinder graphical mesh.">MeshManager::CreateCylinderMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>&amp; Colour, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; HalfExtents, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; AxisOrientation, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; CircleRes, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Segments)</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    {</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> MatName(MeshName+<span class="stringliteral">&quot;Mat&quot;</span>);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#aabf94057016ff9ad8de101f5189713fd" title="Creates a basic material in code using the provided colour.">CreateColouredMaterial</a>(MatName,Colour);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#aa95df6921ad121eeea7ab073d1d1e5a7" title="Creates a cylinder graphical mesh.">CreateCylinderMesh</a>(MeshName,MatName,HalfExtents,AxisOrientation,CircleRes,Segments);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    }</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a197b7cf623c237396a2c4c3160fdec44">  346</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a197b7cf623c237396a2c4c3160fdec44" title="Creates a sphere graphical mesh.">MeshManager::CreateSphereMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MaterialName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Radius, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Rings, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Segments)</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    {</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;        Ogre::MaterialPtr TheMaterial = Ogre::MaterialManager::getSingleton().getByName(MaterialName);</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GroupName = TheMaterial-&gt;getGroup();</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> RingAngle = (Ogre::Math::PI / Rings);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> SegAngle = (2 * Ogre::Math::PI / Segments);</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> VertIndex = 0;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        Ogre::ManualObject* sphere = <span class="keyword">new</span> Ogre::ManualObject(<span class="stringliteral">&quot;TempMan&quot;</span>);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        sphere-&gt;begin(MaterialName);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> ring = 0 ; ring &lt;= Rings ; ring++ ) {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> r0 = Radius * sinf (ring * RingAngle);</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> y0 = Radius * cosf (ring * RingAngle);</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="comment">// Generate the group of segments for the current ring</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> seg = 0 ; seg &lt;= Segments ; seg++ ) {</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> x0 = r0 * sinf(seg * SegAngle);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> z0 = r0 * cosf(seg * SegAngle);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                <span class="comment">// Add one vertex to the strip which makes up the sphere</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                sphere-&gt;position( x0, y0, z0);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;                sphere-&gt;normal(Ogre::Vector3(x0, y0, z0).normalisedCopy());</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                sphere-&gt;textureCoord((<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>) seg / (<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>) Segments, (<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>) ring / (<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>) Rings);</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                <span class="keywordflow">if</span> (ring != Rings) {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                    <span class="comment">// each vertex (except the last) has six indicies pointing to it</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                    sphere-&gt;index(VertIndex + Segments + 1);</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                    sphere-&gt;index(VertIndex);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                    sphere-&gt;index(VertIndex + Segments);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                    sphere-&gt;index(VertIndex + Segments + 1);</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;                    sphere-&gt;index(VertIndex + 1);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                    sphere-&gt;index(VertIndex);</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                    VertIndex++;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;                }</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            }</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;        }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        sphere-&gt;end();</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        Ogre::MeshPtr spheremesh = sphere-&gt;convertToMesh(MeshName, GroupName);</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        spheremesh-&gt;_setBounds(Ogre::AxisAlignedBox(-Radius,-Radius,-Radius,Radius,Radius,Radius));</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        spheremesh-&gt;_setBoundingSphereRadius(Radius);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* NewMesh = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>(spheremesh);</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;        this-&gt;GeneratedMeshes[MeshName] = NewMesh;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="keyword">delete</span> sphere;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        <span class="keywordflow">return</span> NewMesh;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a90c35db245e6cd837e832a6b8e97e9a5">  395</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a197b7cf623c237396a2c4c3160fdec44" title="Creates a sphere graphical mesh.">MeshManager::CreateSphereMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>&amp; Colour, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Radius, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Rings, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Segments)</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> MatName(MeshName+<span class="stringliteral">&quot;Mat&quot;</span>);</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#aabf94057016ff9ad8de101f5189713fd" title="Creates a basic material in code using the provided colour.">CreateColouredMaterial</a>(MatName,Colour);</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#a197b7cf623c237396a2c4c3160fdec44" title="Creates a sphere graphical mesh.">CreateSphereMesh</a>(MeshName,MatName,Radius,Rings,Segments);</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    }</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keyword">namespace</span>{<span class="comment"></span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment">        /// @internal</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment">        /// @brief used to created simple manual shapes in a quick and dirty way</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment"></span>        <span class="keyword">struct </span>IdealPoint</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Vertex;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Normal;</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a> TextureCoord;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            IdealPoint(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Vertex_, <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Normal_, <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a> TextureCoord_)</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            {</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                Vertex=Vertex_;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                Normal=Normal_;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;                TextureCoord=TextureCoord_;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            }</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        };</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    }</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div>
<div class="line"><a name="l00420"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#ac8fd5b24779287c3aa3cdd6749d648d4">  420</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#ac8fd5b24779287c3aa3cdd6749d648d4" title="Creates a mesh composed of boxes that outline the corner edges of a larger box.">MeshManager::CreateBoxCornerMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MaterialName, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; HalfExtents, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; BoxThickness)</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    {</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Half = HalfExtents;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Full = HalfExtents * 2;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Length = 0.0;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> FirstSizeCheck = HalfExtents.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> &lt; HalfExtents.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> ? HalfExtents.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> : HalfExtents.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Smallest = FirstSizeCheck &lt; HalfExtents.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> ? FirstSizeCheck : HalfExtents.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <span class="keywordflow">if</span>(Smallest * 2 &lt;= FirstSizeCheck) Length = Smallest * 0.5;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="keywordflow">else</span> Length = Smallest * 0.25;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        Ogre::MaterialPtr TheMaterial = Ogre::MaterialManager::getSingleton().getByName(MaterialName);</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GroupName = TheMaterial-&gt;getGroup();</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        Ogre::ManualObject* boxcorner = <span class="keyword">new</span> Ogre::ManualObject(<span class="stringliteral">&quot;TempMan&quot;</span>);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        boxcorner-&gt;begin(MaterialName);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;        <span class="comment">//Create a list of data we can play around with</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        std::vector&lt;IdealPoint&gt; IdealShape; <span class="comment">//Vertex                                                        //Normal            //textureCoord</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        <span class="comment">// Forward Face // 0 /</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,0) ));</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,0.5) ));</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),         <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,0.5) ));</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),         <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,0) ));</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="comment">// Upward Face // 6 */</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,1) ));</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,1) ));</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),         <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>)) ));</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>)) ));</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),         <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,0.5) ));</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),                        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,0.5) ));</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;        <span class="comment">// Left Face // 12 */</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,0,0),    <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1,0) ));</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),                        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,0,0),    <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,0) ));</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),         <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,0,0),    <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,0,0),    <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>),BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),         <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,0,0),    <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>),0.5) ));</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,0,0),    <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1,0.5) ));</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        <span class="comment">// Backward Faces // 18 */</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,0) ));</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),  <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>),BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>),0) ));</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>),0) ));</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>),BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),                                      <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1,0) ));</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),  <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>),BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1 - (BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>),0.5) ));</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1,0.5) ));</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,-1),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(1,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="comment">// Downward Faces // 30 */</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,0) ));</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),  <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,0) ));</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                                      <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,0) ));</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,0) ));</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,0.5) ));</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,0.5) ));</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),  <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,-1,0),     <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <span class="comment">// Right Faces // 42 */</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,0) ));</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),  <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - Length),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0.5,0) ));</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                                      <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,0) ));</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,0) ));</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                 <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>),                       <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(0,0.5) ));</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - Length,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,0.5) ));</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        IdealShape.push_back( IdealPoint(   <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> + BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> - BoxThickness,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> - BoxThickness),  <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,0,0),      <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>(BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,BoxThickness / Full.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>) ));</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;        <span class="comment">// Each of the flips we need to make</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        std::vector&lt;Vector3&gt; Flips;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        Flips.push_back(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,1,1));</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        Flips.push_back(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,1,-1));</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        Flips.push_back(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,-1,1));</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        Flips.push_back(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,1,1));</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        Flips.push_back(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(1,-1,-1));</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        Flips.push_back(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,1,-1));</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        Flips.push_back(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,-1,1));</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        Flips.push_back(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(-1,-1,-1));</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <span class="comment">// flip this set of points against the list of flips</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Vector3&gt;::iterator CurrentFlip=Flips.begin() ; CurrentFlip!=Flips.end() ; ++CurrentFlip )</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        {</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordflow">for</span>(std::vector&lt;IdealPoint&gt;::iterator CurrentVertex=IdealShape.begin(); CurrentVertex!=IdealShape.end(); ++CurrentVertex)</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            {</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                boxcorner-&gt;position( (CurrentVertex-&gt;Vertex * *CurrentFlip).GetOgreVector3() );</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                boxcorner-&gt;normal( (CurrentVertex-&gt;Normal * *CurrentFlip).GetOgreVector3() );</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                boxcorner-&gt;textureCoord( CurrentVertex-&gt;TextureCoord.GetOgreVector2() );</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="comment">// Create Index&#39;s</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> FlipCount = 0 ; FlipCount&lt;Flips.size() ; ++FlipCount )</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        {</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> ShapeIndex = FlipCount*IdealShape.size();</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;            <span class="comment">// Top-Left-Front Forward Face</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="keywordflow">if</span>(1==Flips.at(FlipCount).Z)   <span class="comment">// draw them in backward order if this shape is flipped on the Z axis</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            {</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                <span class="comment">//Forward Face Unflipped</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                boxcorner-&gt;triangle(0+ShapeIndex,1+ShapeIndex,2+ShapeIndex);        <span class="comment">// These things could be replaced by a series of loops, but this was simpler</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                boxcorner-&gt;triangle(0+ShapeIndex,2+ShapeIndex,3+ShapeIndex);</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                boxcorner-&gt;triangle(0+ShapeIndex,3+ShapeIndex,4+ShapeIndex);</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                boxcorner-&gt;triangle(0+ShapeIndex,4+ShapeIndex,5+ShapeIndex);</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                <span class="comment">//Backward Faces Unflipped</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                boxcorner-&gt;triangle(18+ShapeIndex,19+ShapeIndex,20+ShapeIndex);</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;                boxcorner-&gt;triangle(18+ShapeIndex,20+ShapeIndex,21+ShapeIndex);</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                boxcorner-&gt;triangle(22+ShapeIndex,23+ShapeIndex,24+ShapeIndex);</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                boxcorner-&gt;triangle(22+ShapeIndex,24+ShapeIndex,25+ShapeIndex);</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                boxcorner-&gt;triangle(26+ShapeIndex,27+ShapeIndex,28+ShapeIndex);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                boxcorner-&gt;triangle(26+ShapeIndex,28+ShapeIndex,29+ShapeIndex);</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                <span class="comment">//Forward Face Flipped</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                boxcorner-&gt;triangle(0+ShapeIndex,1+ShapeIndex,2+ShapeIndex);</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                boxcorner-&gt;triangle(0+ShapeIndex,3+ShapeIndex,4+ShapeIndex);</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                boxcorner-&gt;triangle(0+ShapeIndex,2+ShapeIndex,3+ShapeIndex);</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                boxcorner-&gt;triangle(0+ShapeIndex,4+ShapeIndex,5+ShapeIndex);</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                <span class="comment">//Backward Faces Flipped</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                boxcorner-&gt;triangle(26+ShapeIndex,28+ShapeIndex,29+ShapeIndex);</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                boxcorner-&gt;triangle(26+ShapeIndex,27+ShapeIndex,28+ShapeIndex);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                boxcorner-&gt;triangle(22+ShapeIndex,24+ShapeIndex,25+ShapeIndex);</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                boxcorner-&gt;triangle(22+ShapeIndex,23+ShapeIndex,24+ShapeIndex);</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                boxcorner-&gt;triangle(18+ShapeIndex,20+ShapeIndex,21+ShapeIndex);</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                boxcorner-&gt;triangle(18+ShapeIndex,19+ShapeIndex,20+ShapeIndex);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            }</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;            <span class="keywordflow">if</span>(1==Flips.at(FlipCount).Y)   <span class="comment">// draw them in backward order if this shape is flipped on the Y axis</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            {</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                <span class="comment">// Upward Face Unflipped</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;                boxcorner-&gt;triangle(6+ShapeIndex,7+ShapeIndex,8+ShapeIndex);</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                boxcorner-&gt;triangle(6+ShapeIndex,8+ShapeIndex,9+ShapeIndex);</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                boxcorner-&gt;triangle(6+ShapeIndex,9+ShapeIndex,10+ShapeIndex);</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                boxcorner-&gt;triangle(6+ShapeIndex,10+ShapeIndex,11+ShapeIndex);</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                <span class="comment">// Downward Faces Unflipped</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                boxcorner-&gt;triangle(30+ShapeIndex,31+ShapeIndex,32+ShapeIndex);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                boxcorner-&gt;triangle(30+ShapeIndex,32+ShapeIndex,33+ShapeIndex);</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                boxcorner-&gt;triangle(34+ShapeIndex,35+ShapeIndex,36+ShapeIndex);</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                boxcorner-&gt;triangle(34+ShapeIndex,36+ShapeIndex,37+ShapeIndex);</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                boxcorner-&gt;triangle(38+ShapeIndex,39+ShapeIndex,40+ShapeIndex);</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                boxcorner-&gt;triangle(38+ShapeIndex,40+ShapeIndex,41+ShapeIndex);</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                <span class="comment">// Upward Face Flipped</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;                boxcorner-&gt;triangle(6+ShapeIndex,10+ShapeIndex,11+ShapeIndex);</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                boxcorner-&gt;triangle(6+ShapeIndex,9+ShapeIndex,10+ShapeIndex);</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;                boxcorner-&gt;triangle(6+ShapeIndex,8+ShapeIndex,9+ShapeIndex);</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                boxcorner-&gt;triangle(6+ShapeIndex,7+ShapeIndex,8+ShapeIndex);</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                <span class="comment">// Downward Faces Flipped</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                boxcorner-&gt;triangle(38+ShapeIndex,40+ShapeIndex,41+ShapeIndex);</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;                boxcorner-&gt;triangle(38+ShapeIndex,39+ShapeIndex,40+ShapeIndex);</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;                boxcorner-&gt;triangle(34+ShapeIndex,36+ShapeIndex,37+ShapeIndex);</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;                boxcorner-&gt;triangle(34+ShapeIndex,35+ShapeIndex,36+ShapeIndex);</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;                boxcorner-&gt;triangle(30+ShapeIndex,32+ShapeIndex,33+ShapeIndex);</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                boxcorner-&gt;triangle(30+ShapeIndex,31+ShapeIndex,32+ShapeIndex);</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;            }</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            <span class="keywordflow">if</span>(1==Flips.at(FlipCount).X)   <span class="comment">// draw them in backward order if this shape is flipped on the X axis</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;                <span class="comment">// Left Face Unflipped</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                boxcorner-&gt;triangle(12+ShapeIndex,13+ShapeIndex,14+ShapeIndex);</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                boxcorner-&gt;triangle(12+ShapeIndex,14+ShapeIndex,15+ShapeIndex);</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                boxcorner-&gt;triangle(12+ShapeIndex,15+ShapeIndex,16+ShapeIndex);</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                boxcorner-&gt;triangle(12+ShapeIndex,16+ShapeIndex,17+ShapeIndex);</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;                <span class="comment">// Right Faces Unflipped</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;                boxcorner-&gt;triangle(42+ShapeIndex,43+ShapeIndex,44+ShapeIndex);</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                boxcorner-&gt;triangle(42+ShapeIndex,44+ShapeIndex,45+ShapeIndex);</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;                boxcorner-&gt;triangle(46+ShapeIndex,47+ShapeIndex,48+ShapeIndex);</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;                boxcorner-&gt;triangle(46+ShapeIndex,48+ShapeIndex,49+ShapeIndex);</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                boxcorner-&gt;triangle(50+ShapeIndex,51+ShapeIndex,52+ShapeIndex);</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                boxcorner-&gt;triangle(50+ShapeIndex,52+ShapeIndex,53+ShapeIndex);</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                <span class="comment">// Left Face Unflipped</span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;                boxcorner-&gt;triangle(12+ShapeIndex,16+ShapeIndex,17+ShapeIndex);</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                boxcorner-&gt;triangle(12+ShapeIndex,15+ShapeIndex,16+ShapeIndex);</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                boxcorner-&gt;triangle(12+ShapeIndex,14+ShapeIndex,15+ShapeIndex);</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;                boxcorner-&gt;triangle(12+ShapeIndex,13+ShapeIndex,14+ShapeIndex);</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;                <span class="comment">// Right Faces Unflipped</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                boxcorner-&gt;triangle(50+ShapeIndex,52+ShapeIndex,53+ShapeIndex);</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;                boxcorner-&gt;triangle(50+ShapeIndex,51+ShapeIndex,52+ShapeIndex);</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;                boxcorner-&gt;triangle(46+ShapeIndex,48+ShapeIndex,49+ShapeIndex);</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                boxcorner-&gt;triangle(46+ShapeIndex,47+ShapeIndex,48+ShapeIndex);</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;                boxcorner-&gt;triangle(42+ShapeIndex,44+ShapeIndex,45+ShapeIndex);</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;                boxcorner-&gt;triangle(42+ShapeIndex,43+ShapeIndex,44+ShapeIndex);</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;            }</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        }</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        boxcorner-&gt;end();</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        Ogre::MeshPtr boxcornermesh = boxcorner-&gt;convertToMesh(MeshName, GroupName);</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        boxcornermesh-&gt;_setBounds(Ogre::AxisAlignedBox(-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,-Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>));</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> FirstCheck = Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> &gt; Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a> ? Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a> : Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Largest = FirstCheck &gt; Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a> ? FirstCheck : Half.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        boxcornermesh-&gt;_setBoundingSphereRadius(1.4 * Largest);</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* NewMesh = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>(boxcornermesh);</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        this-&gt;GeneratedMeshes[MeshName] = NewMesh;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        <span class="keyword">delete</span> boxcorner;</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        <span class="keywordflow">return</span> NewMesh;</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    }</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div>
<div class="line"><a name="l00627"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a22d2a7788dc72426086f94455ed2ec73">  627</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#ac8fd5b24779287c3aa3cdd6749d648d4" title="Creates a mesh composed of boxes that outline the corner edges of a larger box.">MeshManager::CreateBoxCornerMesh</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>&amp; Colour, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; HalfExtents, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; BoxThickness)</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    {</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> MatName(MeshName+<span class="stringliteral">&quot;Mat&quot;</span>);</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#aabf94057016ff9ad8de101f5189713fd" title="Creates a basic material in code using the provided colour.">CreateColouredMaterial</a>(MatName,Colour);</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1MeshManager.xhtml#ac8fd5b24779287c3aa3cdd6749d648d4" title="Creates a mesh composed of boxes that outline the corner edges of a larger box.">CreateBoxCornerMesh</a>(MeshName,MatName,HalfExtents,BoxThickness);</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    }</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;</div>
<div class="line"><a name="l00634"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a65b71c6563beab51514ea4c4a7516b29">  634</a></span>&#160;    <a class="code" href="classMezzanine_1_1Graphics_1_1Mesh.xhtml" title="This class is used to check and modify the properties of a graphics mesh.">Graphics::Mesh</a>* <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a65b71c6563beab51514ea4c4a7516b29" title="Generates a mesh based on a collision shape.">MeshManager::CreateMeshFromShape</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MaterialName, <a class="code" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml" title="This is the base class for all collision shapes.">Physics::CollisionShape</a>* Shape)</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    {</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;        <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    }</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;<span class="comment"></span>    <span class="comment">// Material Utilities - Until we can get a Material Manager</span></div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;</div>
<div class="line"><a name="l00642"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#aabf94057016ff9ad8de101f5189713fd">  642</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; <a class="code" href="classMezzanine_1_1MeshManager.xhtml#aabf94057016ff9ad8de101f5189713fd" title="Creates a basic material in code using the provided colour.">MeshManager::CreateColouredMaterial</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MatName, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>&amp; Colour, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group)</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    {</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        Ogre::ResourceManager::ResourceCreateOrRetrieveResult Result = Ogre::MaterialManager::getSingletonPtr()-&gt;createOrRetrieve(MatName, Group.empty() ? Ogre::ResourceGroupManager::DEFAULT_RESOURCE_GROUP_NAME : Group);</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        Ogre::MaterialPtr NewMaterial = <span class="keyword">static_cast&lt;</span>Ogre::MaterialPtr<span class="keyword">&gt;</span>(Result.first);</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        NewMaterial-&gt;setReceiveShadows(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        Ogre::Pass* pass = NewMaterial-&gt;getTechnique(0)-&gt;getPass(0);</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        pass-&gt;setCullingMode(Ogre::CULL_NONE);</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        pass-&gt;setDepthCheckEnabled(<span class="keyword">true</span>);</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;        pass-&gt;setDepthWriteEnabled(<span class="keyword">false</span>);</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        pass-&gt;setSceneBlending(Ogre::SBT_TRANSPARENT_ALPHA);</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        pass-&gt;setAmbient(Colour.<a class="code" href="classMezzanine_1_1ColourValue.xhtml#a7e0b3548fc11cdcbd89fab3ad53faaf1" title="Creates and returns an Ogre ColourValue class with values equal to this one.">GetOgreColourValue</a>());</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        pass-&gt;setDiffuse(Colour.<a class="code" href="classMezzanine_1_1ColourValue.xhtml#a7e0b3548fc11cdcbd89fab3ad53faaf1" title="Creates and returns an Ogre ColourValue class with values equal to this one.">GetOgreColourValue</a>());</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        NewMaterial-&gt;prepare();</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        NewMaterial-&gt;load();</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;        <span class="keywordflow">return</span> MatName;</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    }</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="comment"></span>    <span class="comment">// Utility</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div>
<div class="line"><a name="l00662"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#ac03c91bea88144bcfa420411bc85f0c7">  662</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#ac03c91bea88144bcfa420411bc85f0c7" title="Configures this manager for use prior to entering the main loop. ">MeshManager::Initialize</a>()</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        { this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a> = <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div>
<div class="line"><a name="l00665"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a2d47899078ed399f240e5e8567b2558c">  665</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a2d47899078ed399f240e5e8567b2558c" title="Removes this manager from any necessary configuration so it can be safely disposed of...">MeshManager::Deinitialize</a>()</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        { this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a> = <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment"></span>    <span class="comment">// Type Identifier Methods</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div>
<div class="line"><a name="l00671"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#aeca3930c7034c8930487ac453c3fe1d4">  671</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#aeca3930c7034c8930487ac453c3fe1d4" title="This returns the type of this manager. ">MeshManager::GetInterfaceType</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> ManagerBase::MT_MeshManager; }</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div>
<div class="line"><a name="l00674"></a><span class="lineno"><a class="code" href="classMezzanine_1_1MeshManager.xhtml#a74c362856cd1bd958a386d53b7a8120b">  674</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1MeshManager.xhtml#a74c362856cd1bd958a386d53b7a8120b" title="This Allows any manager name to be sent to a stream. Primarily used for logging. ">MeshManager::GetImplementationTypeName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultMeshManager&quot;</span>; }</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="comment"></span>    <span class="comment">// DefaultMeshManagerFactory Methods</span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;</div>
<div class="line"><a name="l00680"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a85efeabb0df7e6982694368001a7414e">  680</a></span>&#160;    <a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a85efeabb0df7e6982694368001a7414e" title="Class constructor.">DefaultMeshManagerFactory::DefaultMeshManagerFactory</a>()</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    {</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    }</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div>
<div class="line"><a name="l00684"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#ae66f094a83629468dca34fef1a69e04e">  684</a></span>&#160;    <a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#ae66f094a83629468dca34fef1a69e04e" title="Class destructor.">DefaultMeshManagerFactory::~DefaultMeshManagerFactory</a>()</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    {</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    }</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;</div>
<div class="line"><a name="l00688"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a1761c9aeadfa6cc6482b4cdaef85d0b8">  688</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a1761c9aeadfa6cc6482b4cdaef85d0b8" title="Gets the name of the Manager that is created by this factory. ">DefaultMeshManagerFactory::GetManagerTypeName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultMeshManager&quot;</span>;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    }</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div>
<div class="line"><a name="l00693"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a2c0397aa59f15dc5b770aadd0b8e35ed">  693</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a>* <a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a2c0397aa59f15dc5b770aadd0b8e35ed" title="Creates a manager of the type represented by this factory. ">DefaultMeshManagerFactory::CreateManager</a>(<a class="code" href="namespaceMezzanine.xhtml#ac9f30d4ba179aab9013e0c8fbf55bd28" title="This is a datatype mostly used for describing settings or parameters that can&#39;t be declared in advanc...">NameValuePairList</a>&amp; Params)</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    {</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9" title="Checks to see if the singleton pointer is valid.">MeshManager::SingletonValid</a>())</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        {<span class="comment"></span></div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="comment">            /// @todo Add something to log a warning that the manager exists and was requested to be constructed when we have a logging manager set up.</span></div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="comment"></span>            <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">MeshManager::GetSingletonPtr</a>();</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        }<span class="keywordflow">else</span> <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml" title="This manager handles the storage, generation, and query of of Graphics Meshes.">MeshManager</a>();</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    }</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;</div>
<div class="line"><a name="l00702"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a4fa87a9778190048f7cc18066be58b43">  702</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a>* <a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a2c0397aa59f15dc5b770aadd0b8e35ed" title="Creates a manager of the type represented by this factory. ">DefaultMeshManagerFactory::CreateManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode)</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    {</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9" title="Checks to see if the singleton pointer is valid.">MeshManager::SingletonValid</a>())</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;        {<span class="comment"></span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="comment">            /// @todo Add something to log a warning that the manager exists and was requested to be constructed when we have a logging manager set up.</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="comment"></span>            <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">MeshManager::GetSingletonPtr</a>();</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;        }<span class="keywordflow">else</span> <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1MeshManager.xhtml" title="This manager handles the storage, generation, and query of of Graphics Meshes.">MeshManager</a>(XMLNode);</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    }</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div>
<div class="line"><a name="l00711"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a85eac7a4ca6dc36062f2cee63def0c46">  711</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1DefaultMeshManagerFactory.xhtml#a85eac7a4ca6dc36062f2cee63def0c46" title="Destroys a Manager created by this factory. ">DefaultMeshManagerFactory::DestroyManager</a>(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    {</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        <span class="keyword">delete</span> ToBeDestroyed;</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    }</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 14 2013 00:19:05 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
