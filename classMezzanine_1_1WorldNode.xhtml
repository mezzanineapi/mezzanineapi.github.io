<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::WorldNode Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;15,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1WorldNode.xhtml">WorldNode</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1WorldNode-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::WorldNode Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a helper class which non-physics objects, such as lights, cameras, ribbon trails, and particle effects may be attached to for enhanced effects.  
 <a href="classMezzanine_1_1WorldNode.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="worldnode_8h_source.xhtml">worldnode.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::WorldNode:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1WorldNode__inherit__graph.svg" width="440" height="195"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::WorldNode:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1WorldNode__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acb3be02579f07d95d55d040d10cc12a0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#acb3be02579f07d95d55d040d10cc12a0">WorldNode</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, <a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *SManager)</td></tr>
<tr class="memdesc:acb3be02579f07d95d55d040d10cc12a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard initialization constructor.  <a href="#acb3be02579f07d95d55d040d10cc12a0">More...</a><br/></td></tr>
<tr class="separator:acb3be02579f07d95d55d040d10cc12a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7584e9792b3ceb2bd5effc1ddb50c266"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7584e9792b3ceb2bd5effc1ddb50c266"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a7584e9792b3ceb2bd5effc1ddb50c266">~WorldNode</a> ()</td></tr>
<tr class="memdesc:a7584e9792b3ceb2bd5effc1ddb50c266"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a7584e9792b3ceb2bd5effc1ddb50c266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a065e8789f8b4b49866d1f7ca3a38d0d0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a065e8789f8b4b49866d1f7ca3a38d0d0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a065e8789f8b4b49866d1f7ca3a38d0d0">_UpdateTracking</a> ()</td></tr>
<tr class="memdesc:a065e8789f8b4b49866d1f7ca3a38d0d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates this object to continue tracking another object. <br/></td></tr>
<tr class="separator:a065e8789f8b4b49866d1f7ca3a38d0d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24bedb35bbddea779da919fcff7561ee"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a24bedb35bbddea779da919fcff7561ee">GetAutoTrackingDirection</a> () const </td></tr>
<tr class="memdesc:a24bedb35bbddea779da919fcff7561ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the local direction used to face at the autotracked target.  <a href="#a24bedb35bbddea779da919fcff7561ee">More...</a><br/></td></tr>
<tr class="separator:a24bedb35bbddea779da919fcff7561ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6143ff48ae180f5fdcd8903f2804f105"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a6143ff48ae180f5fdcd8903f2804f105">GetAutoTrackingOffset</a> () const </td></tr>
<tr class="memdesc:a6143ff48ae180f5fdcd8903f2804f105"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the offset from the target applied to the autotracked target.  <a href="#a6143ff48ae180f5fdcd8903f2804f105">More...</a><br/></td></tr>
<tr class="separator:a6143ff48ae180f5fdcd8903f2804f105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6768b6aa1ca9a4a427917b88d8a95295"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml">AttachableBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a6768b6aa1ca9a4a427917b88d8a95295">GetAutoTrackingTarget</a> () const </td></tr>
<tr class="memdesc:a6768b6aa1ca9a4a427917b88d8a95295"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the target currently being tracked.  <a href="#a6768b6aa1ca9a4a427917b88d8a95295">More...</a><br/></td></tr>
<tr class="separator:a6768b6aa1ca9a4a427917b88d8a95295"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27a9f2fb9a638cebb8ee8a328c1a4803"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a27a9f2fb9a638cebb8ee8a328c1a4803">GetFixedYawAxis</a> () const </td></tr>
<tr class="memdesc:a27a9f2fb9a638cebb8ee8a328c1a4803"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Axis used to yaw.  <a href="#a27a9f2fb9a638cebb8ee8a328c1a4803">More...</a><br/></td></tr>
<tr class="separator:a27a9f2fb9a638cebb8ee8a328c1a4803"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4f695676c1c57c277595349cf4984d1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#ae4f695676c1c57c277595349cf4984d1">GetFixedYawAxisEnabled</a> () const </td></tr>
<tr class="memdesc:ae4f695676c1c57c277595349cf4984d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not Fixed Yaw is enabled.  <a href="#ae4f695676c1c57c277595349cf4984d1">More...</a><br/></td></tr>
<tr class="separator:ae4f695676c1c57c277595349cf4984d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7941d8f3347b810d31b511c3b59585f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a7941d8f3347b810d31b511c3b59585f8">GetLocation</a> () const </td></tr>
<tr class="memdesc:a7941d8f3347b810d31b511c3b59585f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Location of this object.  <a href="#a7941d8f3347b810d31b511c3b59585f8">More...</a><br/></td></tr>
<tr class="separator:a7941d8f3347b810d31b511c3b59585f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9538be39292a297f64d15bf1335ee0cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a9538be39292a297f64d15bf1335ee0cf">GetName</a> () const </td></tr>
<tr class="memdesc:a9538be39292a297f64d15bf1335ee0cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this node.  <a href="#a9538be39292a297f64d15bf1335ee0cf">More...</a><br/></td></tr>
<tr class="separator:a9538be39292a297f64d15bf1335ee0cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad250735dcbc77c3c96bd4d6b21e43867"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#ad250735dcbc77c3c96bd4d6b21e43867">GetOrientation</a> () const </td></tr>
<tr class="memdesc:ad250735dcbc77c3c96bd4d6b21e43867"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the orientation of this object.  <a href="#ad250735dcbc77c3c96bd4d6b21e43867">More...</a><br/></td></tr>
<tr class="separator:ad250735dcbc77c3c96bd4d6b21e43867"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82be69b653bb3463bec52a114bbb46ef"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a82be69b653bb3463bec52a114bbb46ef">GetScaling</a> () const </td></tr>
<tr class="memdesc:a82be69b653bb3463bec52a114bbb46ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the scale of this object.  <a href="#a82be69b653bb3463bec52a114bbb46ef">More...</a><br/></td></tr>
<tr class="separator:a82be69b653bb3463bec52a114bbb46ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a604fe6096c4c9b6e3b7614ef4be3d677"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a604fe6096c4c9b6e3b7614ef4be3d677">GetType</a> () const </td></tr>
<tr class="memdesc:a604fe6096c4c9b6e3b7614ef4be3d677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> or Scene object this attachable is.  <a href="#a604fe6096c4c9b6e3b7614ef4be3d677">More...</a><br/></td></tr>
<tr class="separator:a604fe6096c4c9b6e3b7614ef4be3d677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9ec8a56450e749cddedef9748594b6d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#ad9ec8a56450e749cddedef9748594b6d">LookAt</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;LookAt, const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;TS=<a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aeb8fde3835a59be182f10353d961882d">Mezzanine::TS_World</a>, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;LocalDirection=<a class="el" href="classMezzanine_1_1Vector3.xhtml#a455fbf24b646a69bebaf3b7aea0bde5b">Vector3::Neg_Unit_Z</a>())</td></tr>
<tr class="memdesc:ad9ec8a56450e749cddedef9748594b6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Automatically sets the orientation needed to point this node at a location in the world.  <a href="#ad9ec8a56450e749cddedef9748594b6d">More...</a><br/></td></tr>
<tr class="separator:ad9ec8a56450e749cddedef9748594b6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3498ef1f78331824a36a2287b25a5506"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a3498ef1f78331824a36a2287b25a5506">Pitch</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Angle, const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;TS=<a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a>)</td></tr>
<tr class="memdesc:a3498ef1f78331824a36a2287b25a5506"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies a rotation around the X axis.  <a href="#a3498ef1f78331824a36a2287b25a5506">More...</a><br/></td></tr>
<tr class="separator:a3498ef1f78331824a36a2287b25a5506"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfcae16b95b2a9978ff56567af01e0df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#acfcae16b95b2a9978ff56567af01e0df">Roll</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Angle, const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;TS=<a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a>)</td></tr>
<tr class="memdesc:acfcae16b95b2a9978ff56567af01e0df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies a rotation around the Z axis.  <a href="#acfcae16b95b2a9978ff56567af01e0df">More...</a><br/></td></tr>
<tr class="separator:acfcae16b95b2a9978ff56567af01e0df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62f367c6b799f4b8216a72f39f568d35"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a62f367c6b799f4b8216a72f39f568d35">Rotate</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation, const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;TS=<a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a>)</td></tr>
<tr class="memdesc:a62f367c6b799f4b8216a72f39f568d35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies a rotation from a quaternion.  <a href="#a62f367c6b799f4b8216a72f39f568d35">More...</a><br/></td></tr>
<tr class="separator:a62f367c6b799f4b8216a72f39f568d35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9d52b9b88c9005524bc97187125fc43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#aa9d52b9b88c9005524bc97187125fc43">Rotate</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Angle, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Axis, const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;TS=<a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a>)</td></tr>
<tr class="memdesc:aa9d52b9b88c9005524bc97187125fc43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies a rotation from an angle and an axis.  <a href="#aa9d52b9b88c9005524bc97187125fc43">More...</a><br/></td></tr>
<tr class="separator:aa9d52b9b88c9005524bc97187125fc43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a417e459d58c4d612bcbbe98a328c7b50"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a417e459d58c4d612bcbbe98a328c7b50">SetAutoTracking</a> (<a class="el" href="classMezzanine_1_1AttachableBase.xhtml">AttachableBase</a> *Target, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;LocalDirection=<a class="el" href="classMezzanine_1_1Vector3.xhtml#a455fbf24b646a69bebaf3b7aea0bde5b">Vector3::Neg_Unit_Z</a>(), const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Offset=<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>())</td></tr>
<tr class="memdesc:a417e459d58c4d612bcbbe98a328c7b50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this node constantly face another object.  <a href="#a417e459d58c4d612bcbbe98a328c7b50">More...</a><br/></td></tr>
<tr class="separator:a417e459d58c4d612bcbbe98a328c7b50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab088981b0bea9d73e9bfaac5f237abc8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#ab088981b0bea9d73e9bfaac5f237abc8">SetDirection</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Direction, const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;TS=<a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aeb8fde3835a59be182f10353d961882d">Mezzanine::TS_World</a>, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;LocalAxis=<a class="el" href="classMezzanine_1_1Vector3.xhtml#a455fbf24b646a69bebaf3b7aea0bde5b">Vector3::Neg_Unit_Z</a>())</td></tr>
<tr class="memdesc:ab088981b0bea9d73e9bfaac5f237abc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the direction this node is facing.  <a href="#ab088981b0bea9d73e9bfaac5f237abc8">More...</a><br/></td></tr>
<tr class="separator:ab088981b0bea9d73e9bfaac5f237abc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d4066a1b9f9862ea026f15dfa3a3e81"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a3d4066a1b9f9862ea026f15dfa3a3e81">SetFixedYawAxis</a> (bool Enable, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;FixedAxis=<a class="el" href="classMezzanine_1_1Vector3.xhtml#a62285c6842027aec46da54553c22bc61">Vector3::Unit_Y</a>())</td></tr>
<tr class="memdesc:a3d4066a1b9f9862ea026f15dfa3a3e81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tells this node to always yaw around a specific axis. Useful for AutoTracking.  <a href="#a3d4066a1b9f9862ea026f15dfa3a3e81">More...</a><br/></td></tr>
<tr class="separator:a3d4066a1b9f9862ea026f15dfa3a3e81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03feb41f719612123fe8d9055603efe6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a03feb41f719612123fe8d9055603efe6">SetLocalLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a03feb41f719612123fe8d9055603efe6"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a03feb41f719612123fe8d9055603efe6">More...</a><br/></td></tr>
<tr class="separator:a03feb41f719612123fe8d9055603efe6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32259918c2d5695141371ca364a813c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a32259918c2d5695141371ca364a813c2">SetLocalOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation)</td></tr>
<tr class="memdesc:a32259918c2d5695141371ca364a813c2"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a32259918c2d5695141371ca364a813c2">More...</a><br/></td></tr>
<tr class="separator:a32259918c2d5695141371ca364a813c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a636852458b226f1c2f3089f17558e678"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a636852458b226f1c2f3089f17558e678">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location)</td></tr>
<tr class="memdesc:a636852458b226f1c2f3089f17558e678"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a636852458b226f1c2f3089f17558e678">More...</a><br/></td></tr>
<tr class="separator:a636852458b226f1c2f3089f17558e678"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe9db5c3abeb608bf2d589c2a61da546"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#afe9db5c3abeb608bf2d589c2a61da546">SetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation)</td></tr>
<tr class="memdesc:afe9db5c3abeb608bf2d589c2a61da546"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#afe9db5c3abeb608bf2d589c2a61da546">More...</a><br/></td></tr>
<tr class="separator:afe9db5c3abeb608bf2d589c2a61da546"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f7797ef81aaf763cdf011728f6b6b05"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a3f7797ef81aaf763cdf011728f6b6b05">SetScaling</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)</td></tr>
<tr class="memdesc:a3f7797ef81aaf763cdf011728f6b6b05"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a3f7797ef81aaf763cdf011728f6b6b05">More...</a><br/></td></tr>
<tr class="separator:a3f7797ef81aaf763cdf011728f6b6b05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07ee43210a28041f2debf1cea0c5ce2a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldNode.xhtml#a07ee43210a28041f2debf1cea0c5ce2a">Yaw</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Angle, const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;TS=<a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a>)</td></tr>
<tr class="memdesc:a07ee43210a28041f2debf1cea0c5ce2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies a rotation around the Y axis.  <a href="#a07ee43210a28041f2debf1cea0c5ce2a">More...</a><br/></td></tr>
<tr class="separator:a07ee43210a28041f2debf1cea0c5ce2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableParent"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableParent')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableParent.xhtml">Mezzanine::AttachableParent</a></td></tr>
<tr class="memitem:a6ac9d49cd99bddd5b29d734581d02538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ac9d49cd99bddd5b29d734581d02538"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a6ac9d49cd99bddd5b29d734581d02538">AttachableParent</a> ()</td></tr>
<tr class="memdesc:a6ac9d49cd99bddd5b29d734581d02538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a6ac9d49cd99bddd5b29d734581d02538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33694eac156fac95099536c3e70b1c5c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a33694eac156fac95099536c3e70b1c5c"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a33694eac156fac95099536c3e70b1c5c">~AttachableParent</a> ()</td></tr>
<tr class="memdesc:a33694eac156fac95099536c3e70b1c5c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a33694eac156fac95099536c3e70b1c5c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c76fdc43b1cddada62385215ca6c8d4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9c76fdc43b1cddada62385215ca6c8d4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a9c76fdc43b1cddada62385215ca6c8d4">_RecalculateAllChildTransforms</a> ()</td></tr>
<tr class="memdesc:a9c76fdc43b1cddada62385215ca6c8d4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates the transforms of all children of this attachable. <br/></td></tr>
<tr class="separator:a9c76fdc43b1cddada62385215ca6c8d4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a558c6e2dd0a31cd99bb7872394de9c00 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a558c6e2dd0a31cd99bb7872394de9c00">AttachObject</a> (<a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *Target)</td></tr>
<tr class="memdesc:a558c6e2dd0a31cd99bb7872394de9c00 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attaches an attachable element to this object.  <a href="#a558c6e2dd0a31cd99bb7872394de9c00">More...</a><br/></td></tr>
<tr class="separator:a558c6e2dd0a31cd99bb7872394de9c00 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ed49c42b138227094b579638fd06538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">AttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a6ed49c42b138227094b579638fd06538">BeginChild</a> ()</td></tr>
<tr class="memdesc:a6ed49c42b138227094b579638fd06538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an AttachableIterator to the first object.  <a href="#a6ed49c42b138227094b579638fd06538">More...</a><br/></td></tr>
<tr class="separator:a6ed49c42b138227094b579638fd06538 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4693daab5f6ad884fbe64f718c016384 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">ConstAttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a4693daab5f6ad884fbe64f718c016384">BeginChild</a> () const </td></tr>
<tr class="memdesc:a4693daab5f6ad884fbe64f718c016384 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstAttachableIterator to the first object.  <a href="#a4693daab5f6ad884fbe64f718c016384">More...</a><br/></td></tr>
<tr class="separator:a4693daab5f6ad884fbe64f718c016384 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4c567231013730e4259fb164e8e1f0d inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae4c567231013730e4259fb164e8e1f0d"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#ae4c567231013730e4259fb164e8e1f0d">DetachAllChildren</a> ()</td></tr>
<tr class="memdesc:ae4c567231013730e4259fb164e8e1f0d inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detaches all attachables currently attached. <br/></td></tr>
<tr class="separator:ae4c567231013730e4259fb164e8e1f0d inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a500741267623cad0e0748fe0a4b5e69c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a500741267623cad0e0748fe0a4b5e69c">DetachObject</a> (<a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *Target)</td></tr>
<tr class="memdesc:a500741267623cad0e0748fe0a4b5e69c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detaches an attachable element from this object.  <a href="#a500741267623cad0e0748fe0a4b5e69c">More...</a><br/></td></tr>
<tr class="separator:a500741267623cad0e0748fe0a4b5e69c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a5f5c9e1bf1838113405aa3439e14e4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">AttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a6a5f5c9e1bf1838113405aa3439e14e4">EndChild</a> ()</td></tr>
<tr class="memdesc:a6a5f5c9e1bf1838113405aa3439e14e4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get an AttachableIterator to one past the last object.  <a href="#a6a5f5c9e1bf1838113405aa3439e14e4">More...</a><br/></td></tr>
<tr class="separator:a6a5f5c9e1bf1838113405aa3439e14e4 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ccdced33c9b32be3ad71a195c9aff20 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">ConstAttachableIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a6ccdced33c9b32be3ad71a195c9aff20">EndChild</a> () const </td></tr>
<tr class="memdesc:a6ccdced33c9b32be3ad71a195c9aff20 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a ConstAttachableIterator to one past the last object.  <a href="#a6ccdced33c9b32be3ad71a195c9aff20">More...</a><br/></td></tr>
<tr class="separator:a6ccdced33c9b32be3ad71a195c9aff20 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89d0d1d85a40385d1482ae5443d1ecf1 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#a89d0d1d85a40385d1482ae5443d1ecf1">GetAttached</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index) const </td></tr>
<tr class="memdesc:a89d0d1d85a40385d1482ae5443d1ecf1 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a specific attached Item.  <a href="#a89d0d1d85a40385d1482ae5443d1ecf1">More...</a><br/></td></tr>
<tr class="separator:a89d0d1d85a40385d1482ae5443d1ecf1 inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebacb49f238c0421cd790cacd5baba9c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml#aebacb49f238c0421cd790cacd5baba9c">GetNumAttached</a> () const </td></tr>
<tr class="memdesc:aebacb49f238c0421cd790cacd5baba9c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of elements attached to this object.  <a href="#aebacb49f238c0421cd790cacd5baba9c">More...</a><br/></td></tr>
<tr class="separator:aebacb49f238c0421cd790cacd5baba9c inherit pub_methods_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a72bee4c7d028162ececabf6010f9015d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a72bee4c7d028162ececabf6010f9015d">AttachableBase</a> ()</td></tr>
<tr class="memdesc:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a72bee4c7d028162ececabf6010f9015d inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaae9b3fa22b54bafefe5f994ed6eae93 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaae9b3fa22b54bafefe5f994ed6eae93"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#aaae9b3fa22b54bafefe5f994ed6eae93">~AttachableBase</a> ()</td></tr>
<tr class="memdesc:aaae9b3fa22b54bafefe5f994ed6eae93 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:aaae9b3fa22b54bafefe5f994ed6eae93 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a33eb528b2e924ef70a9bab7fd79c70d0">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in global space to the same point in local space.  <a href="#a33eb528b2e924ef70a9bab7fd79c70d0">More...</a><br/></td></tr>
<tr class="separator:a33eb528b2e924ef70a9bab7fd79c70d0 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a39338b566a38828b8c9b1ddf3e2c865e">ConvertGlobalToLocal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in global space to the same rotation in local space.  <a href="#a39338b566a38828b8c9b1ddf3e2c865e">More...</a><br/></td></tr>
<tr class="separator:a39338b566a38828b8c9b1ddf3e2c865e inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#ab8a5b6e1379ff5cedb5758c4aafe61ed">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Location) const </td></tr>
<tr class="memdesc:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a point in local space to the same point in global space.  <a href="#ab8a5b6e1379ff5cedb5758c4aafe61ed">More...</a><br/></td></tr>
<tr class="separator:ab8a5b6e1379ff5cedb5758c4aafe61ed inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a709ad287377d07a576ebaca995392e15">ConvertLocalToGlobal</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Orientation) const </td></tr>
<tr class="memdesc:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a rotation in local space to the same rotation in global space.  <a href="#a709ad287377d07a576ebaca995392e15">More...</a><br/></td></tr>
<tr class="separator:a709ad287377d07a576ebaca995392e15 inherit pub_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1AttachableChild"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1AttachableChild')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">Mezzanine::AttachableChild</a></td></tr>
<tr class="memitem:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa1baf517c478f03c0116ccf6df62f750"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#aa1baf517c478f03c0116ccf6df62f750">AttachableChild</a> ()</td></tr>
<tr class="memdesc:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:aa1baf517c478f03c0116ccf6df62f750 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7413197e41b31ae33df5ff02317548c0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7413197e41b31ae33df5ff02317548c0"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a7413197e41b31ae33df5ff02317548c0">~AttachableChild</a> ()</td></tr>
<tr class="memdesc:a7413197e41b31ae33df5ff02317548c0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a7413197e41b31ae33df5ff02317548c0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#ad34350de631e502a8bc3d4ce25fff4f6">_RecalculateGlobalTransform</a> (bool FromParent=false)</td></tr>
<tr class="memdesc:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates objects global transform from parent.  <a href="#ad34350de631e502a8bc3d4ce25fff4f6">More...</a><br/></td></tr>
<tr class="separator:ad34350de631e502a8bc3d4ce25fff4f6 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a500d824fc29de69ac05ffcdbdaf67e9e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a500d824fc29de69ac05ffcdbdaf67e9e">_RecalculateLocalTransform</a> ()</td></tr>
<tr class="memdesc:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Recalculates this objects local transform based on it's current global position. <br/></td></tr>
<tr class="separator:a500d824fc29de69ac05ffcdbdaf67e9e inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a59bbbc115c028f87db652f32d252ee61">GetLocalLocation</a> () const </td></tr>
<tr class="memdesc:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Location of this object in local space.  <a href="#a59bbbc115c028f87db652f32d252ee61">More...</a><br/></td></tr>
<tr class="separator:a59bbbc115c028f87db652f32d252ee61 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a81104f92420f9558b39144cce4eb7cd0">GetLocalOrientation</a> () const </td></tr>
<tr class="memdesc:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the orientation of this object in local space.  <a href="#a81104f92420f9558b39144cce4eb7cd0">More...</a><br/></td></tr>
<tr class="separator:a81104f92420f9558b39144cce4eb7cd0 inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16e42db1e1a69f5ca41d412fcc3a5aeb inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1AttachableParent.xhtml">AttachableParent</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a16e42db1e1a69f5ca41d412fcc3a5aeb">GetParent</a> () const </td></tr>
<tr class="memdesc:a16e42db1e1a69f5ca41d412fcc3a5aeb inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the parent of this child.  <a href="#a16e42db1e1a69f5ca41d412fcc3a5aeb">More...</a><br/></td></tr>
<tr class="separator:a16e42db1e1a69f5ca41d412fcc3a5aeb inherit pub_methods_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a78db6f8cd8b7efe2f73798b2af54a3ac"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a78db6f8cd8b7efe2f73798b2af54a3ac"></a>
<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><b>AutoTrackDirection</b></td></tr>
<tr class="separator:a78db6f8cd8b7efe2f73798b2af54a3ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d75977ecf332b6c49d717fe926a2c43"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4d75977ecf332b6c49d717fe926a2c43"></a>
<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><b>AutoTrackOffset</b></td></tr>
<tr class="separator:a4d75977ecf332b6c49d717fe926a2c43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac198af3901c8d4af70e06b16e85b9b30"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac198af3901c8d4af70e06b16e85b9b30"></a>
<a class="el" href="classMezzanine_1_1AttachableBase.xhtml">AttachableBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AutoTrackTarget</b></td></tr>
<tr class="separator:ac198af3901c8d4af70e06b16e85b9b30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a269b40d3160b5ffe4e650d7855357401"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a269b40d3160b5ffe4e650d7855357401"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>FixedYaw</b></td></tr>
<tr class="separator:a269b40d3160b5ffe4e650d7855357401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5599bba6092394523a0df5692904c3f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa5599bba6092394523a0df5692904c3f"></a>
<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><b>FixedYawAxis</b></td></tr>
<tr class="separator:aa5599bba6092394523a0df5692904c3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99c96cab509b8e8d68d888beea424046"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a99c96cab509b8e8d68d888beea424046"></a>
<a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Manager</b></td></tr>
<tr class="separator:a99c96cab509b8e8d68d888beea424046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1eed7c94e2740c65c2870e30b716421"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad1eed7c94e2740c65c2870e30b716421"></a>
<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><b>NodeLoc</b></td></tr>
<tr class="separator:ad1eed7c94e2740c65c2870e30b716421"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1649916790a898f3ffde53278e6820b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad1649916790a898f3ffde53278e6820b"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>NodeName</b></td></tr>
<tr class="separator:ad1649916790a898f3ffde53278e6820b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada8bf349fdd73cc5b0c45e8841266d06"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ada8bf349fdd73cc5b0c45e8841266d06"></a>
<a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><b>NodeOri</b></td></tr>
<tr class="separator:ada8bf349fdd73cc5b0c45e8841266d06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafb8f011a5b2451b72444df0eb4b9921"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aafb8f011a5b2451b72444df0eb4b9921"></a>
<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><b>NodeScale</b></td></tr>
<tr class="separator:aafb8f011a5b2451b72444df0eb4b9921"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableParent"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableParent')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableParent.xhtml">Mezzanine::AttachableParent</a></td></tr>
<tr class="memitem:aa9760351def08f532c5ddc9c82fbcbb2 inherit pro_attribs_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa9760351def08f532c5ddc9c82fbcbb2"></a>
AttachableContainer&#160;</td><td class="memItemRight" valign="bottom"><b>Attached</b></td></tr>
<tr class="separator:aa9760351def08f532c5ddc9c82fbcbb2 inherit pro_attribs_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:ab1042d571c1a40f0ab79e33206ab9761 inherit pro_attribs_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab1042d571c1a40f0ab79e33206ab9761"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Updating</b></td></tr>
<tr class="separator:ab1042d571c1a40f0ab79e33206ab9761 inherit pro_attribs_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1AttachableChild"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1AttachableChild')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">Mezzanine::AttachableChild</a></td></tr>
<tr class="memitem:a6940c66cc4725deb27024ddd6c5459b8 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6940c66cc4725deb27024ddd6c5459b8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>GlobalTransformDirty</b></td></tr>
<tr class="separator:a6940c66cc4725deb27024ddd6c5459b8 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a142c9f848101dec654f8eeca88e689b5 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a142c9f848101dec654f8eeca88e689b5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>LocalTransformDirty</b></td></tr>
<tr class="separator:a142c9f848101dec654f8eeca88e689b5 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc604405ff0ac70699a0286b5e4869b9 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc604405ff0ac70699a0286b5e4869b9"></a>
<a class="el" href="classMezzanine_1_1Transform.xhtml">Transform</a>&#160;</td><td class="memItemRight" valign="bottom"><b>LocalXform</b></td></tr>
<tr class="separator:adc604405ff0ac70699a0286b5e4869b9 inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdd3042178a3bdc83c483b55498ae76e inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acdd3042178a3bdc83c483b55498ae76e"></a>
<a class="el" href="classMezzanine_1_1AttachableParent.xhtml">AttachableParent</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Parent</b></td></tr>
<tr class="separator:acdd3042178a3bdc83c483b55498ae76e inherit pro_attribs_classMezzanine_1_1AttachableChild"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1AttachableParent"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1AttachableParent')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1AttachableParent.xhtml">Mezzanine::AttachableParent</a></td></tr>
<tr class="memitem:a6e9c08040897d349a302ff06f647168a inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6e9c08040897d349a302ff06f647168a"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="classMezzanine_1_1AttachableChild.xhtml">AttachableChild</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>AttachableContainer</b></td></tr>
<tr class="separator:a6e9c08040897d349a302ff06f647168a inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29dc368ae43bb6544304c2fadadac55e inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a29dc368ae43bb6544304c2fadadac55e"></a>
typedef <br class="typebreak"/>
AttachableContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>AttachableIterator</b></td></tr>
<tr class="separator:a29dc368ae43bb6544304c2fadadac55e inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f75a92904328d5f68362f4e3b148934 inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7f75a92904328d5f68362f4e3b148934"></a>
typedef <br class="typebreak"/>
AttachableContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstAttachableIterator</b></td></tr>
<tr class="separator:a7f75a92904328d5f68362f4e3b148934 inherit pub_types_classMezzanine_1_1AttachableParent"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1AttachableBase"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1AttachableBase')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1AttachableBase.xhtml">Mezzanine::AttachableBase</a></td></tr>
<tr class="memitem:a0d62e3708056e62911d6ec7c6beb3a97 inherit pro_methods_classMezzanine_1_1AttachableBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a0d62e3708056e62911d6ec7c6beb3a97">GetUpdating</a> (<a class="el" href="classMezzanine_1_1AttachableBase.xhtml">AttachableBase</a> *AB) const </td></tr>
<tr class="memdesc:a0d62e3708056e62911d6ec7c6beb3a97 inherit pro_methods_classMezzanine_1_1AttachableBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the update status of another attachable.  <a href="#a0d62e3708056e62911d6ec7c6beb3a97">More...</a><br/></td></tr>
<tr class="separator:a0d62e3708056e62911d6ec7c6beb3a97 inherit pro_methods_classMezzanine_1_1AttachableBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is a helper class which non-physics objects, such as lights, cameras, ribbon trails, and particle effects may be attached to for enhanced effects. </p>
<p>This class simply contains a group of functions for easy manipulation of movement and orientation as well as attaching elements to them. This class should only be created through the scene manager. <br/>
 There are 4 types of nodes: <br/>
 Center - Works in conjunction with the orbit node and serves as it's center point for the orbit node to rotate around. <br/>
 Orbit - Counterpart to the Center node, this type does the orbiting. <br/>
 Stand - Stationary node that points in one direction, that is it. <br/>
 Free - A node with no rules governing how it moves. <br/>
 Note: There are no rules restricting the use of nodes anyway, this enum is here simply to help indicate the intended use upon creation. </p>

<p>Definition at line <a class="el" href="worldnode_8h_source.xhtml#l00078">78</a> of file <a class="el" href="worldnode_8h_source.xhtml">worldnode.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="acb3be02579f07d95d55d040d10cc12a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::WorldNode::WorldNode </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *&#160;</td>
          <td class="paramname"><em>SManager</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard initialization constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of this node. </td></tr>
    <tr><td class="paramname">SManager</td><td>Pointer to the manager that this node is to be used in. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a24bedb35bbddea779da919fcff7561ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp; Mezzanine::WorldNode::GetAutoTrackingDirection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the local direction used to face at the autotracked target. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a const reference to a vector3 representing the facing direction of the autotracked target. </dd></dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00187">187</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6143ff48ae180f5fdcd8903f2804f105"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp; Mezzanine::WorldNode::GetAutoTrackingOffset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the offset from the target applied to the autotracked target. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a const reference to a vector3 representing the offset from the autotracked target being used. </dd></dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00192">192</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6768b6aa1ca9a4a427917b88d8a95295"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml">AttachableBase</a> * Mezzanine::WorldNode::GetAutoTrackingTarget </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the target currently being tracked. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the target being currently tracked or NULL if none are being tracked. </dd></dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00182">182</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a27a9f2fb9a638cebb8ee8a328c1a4803"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp; Mezzanine::WorldNode::GetFixedYawAxis </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the Axis used to yaw. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a const reference to a vector3 representing the Fixed Axis used. </dd></dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00248">248</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae4f695676c1c57c277595349cf4984d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::WorldNode::GetFixedYawAxisEnabled </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not Fixed Yaw is enabled. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if Fixed Yaw is enabled, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00243">243</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7941d8f3347b810d31b511c3b59585f8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::WorldNode::GetLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Location of this object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the location of this object. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a927f25cb0f2ba3afd289586e7ab0f4e8">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00265">265</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9538be39292a297f64d15bf1335ee0cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp; Mezzanine::WorldNode::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of this node. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name given to this node. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a04b114eccfbf9092b84dfe24e81548b6">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad250735dcbc77c3c96bd4d6b21e43867"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> Mezzanine::WorldNode::GetOrientation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the orientation of this object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a quaternion representing the orientation of this object. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#af18f7d1f20ee332facb314291673a313">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00279">279</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a82be69b653bb3463bec52a114bbb46ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::WorldNode::GetScaling </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the scale of this object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a vector3 representing the scale being applied to this object. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a8e01242f06e5aabc3d53004325f1eeee">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00293">293</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a604fe6096c4c9b6e3b7614ef4be3d677"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#ae8cd04f706f4998be62f454b7119c718">WorldAndSceneObjectType</a> Mezzanine::WorldNode::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the type of <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> or Scene object this attachable is. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the type of <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> or Scene object this attachable is. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a42bb7c2cab933d28dea86d2ec2934c6a">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00298">298</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad9ec8a56450e749cddedef9748594b6d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::LookAt </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>LookAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>TS</em> = <code><a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aeb8fde3835a59be182f10353d961882d">Mezzanine::TS_World</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>LocalDirection</em> = <code><a class="el" href="classMezzanine_1_1Vector3.xhtml#a455fbf24b646a69bebaf3b7aea0bde5b">Vector3::Neg_Unit_Z</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Automatically sets the orientation needed to point this node at a location in the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">LookAt</td><td>The location in the specified transform space to point at. </td></tr>
    <tr><td class="paramname">TS</td><td>The transform space to use for the position to look at. </td></tr>
    <tr><td class="paramname">LocalDirection</td><td>The local direction that will be aligned with the position being looked at. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3498ef1f78331824a36a2287b25a5506"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::Pitch </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>TS</em> = <code><a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Applies a rotation around the X axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Angle</td><td>The angle in radians to rotate. </td></tr>
    <tr><td class="paramname">TS</td><td>The transform space the rotation is to be applied in. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00227">227</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acfcae16b95b2a9978ff56567af01e0df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::Roll </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>TS</em> = <code><a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Applies a rotation around the Z axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Angle</td><td>The angle in radians to rotate. </td></tr>
    <tr><td class="paramname">TS</td><td>The transform space the rotation is to be applied in. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00232">232</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a62f367c6b799f4b8216a72f39f568d35"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::Rotate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Rotation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>TS</em> = <code><a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Applies a rotation from a quaternion. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function differs from <a class="el" href="classMezzanine_1_1WorldNode.xhtml#afe9db5c3abeb608bf2d589c2a61da546">SetOrientation()</a> in that it won't override the previous rotation, but instead will merge this rotation with the existing rotation. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Rotation</td><td>The rotation to be applied. </td></tr>
    <tr><td class="paramname">TS</td><td>The transform space the rotation is to be applied in. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00197">197</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa9d52b9b88c9005524bc97187125fc43"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::Rotate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>TS</em> = <code><a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Applies a rotation from an angle and an axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Angle</td><td>The angle to be applied in radians. </td></tr>
    <tr><td class="paramname">Axis</td><td>The axis on which the angle is to be applied. </td></tr>
    <tr><td class="paramname">TS</td><td>The transform space the rotation is to be applied in. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00215">215</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a417e459d58c4d612bcbbe98a328c7b50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::SetAutoTracking </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1AttachableBase.xhtml">AttachableBase</a> *&#160;</td>
          <td class="paramname"><em>Target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>LocalDirection</em> = <code><a class="el" href="classMezzanine_1_1Vector3.xhtml#a455fbf24b646a69bebaf3b7aea0bde5b">Vector3::Neg_Unit_Z</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Offset</em> = <code><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Makes this node constantly face another object. </p>
<p>This function will make this node update it's orientation every frame automatically so that it's always facing the target object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Target</td><td>The object to be tracked or NULL if you want to disable autotracking. </td></tr>
    <tr><td class="paramname">LocalDirection</td><td>The local axis that is to be facing the other object. </td></tr>
    <tr><td class="paramname">Offset</td><td>A vector3 representing the offset from the objects location to be tracked. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000058">Todo:</a></b></dt><dd>TODO: The <a class="el" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a> Does not Correctly Serialize AutoTracking. </dd></dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab088981b0bea9d73e9bfaac5f237abc8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::SetDirection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Direction</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>TS</em> = <code><a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aeb8fde3835a59be182f10353d961882d">Mezzanine::TS_World</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>LocalAxis</em> = <code><a class="el" href="classMezzanine_1_1Vector3.xhtml#a455fbf24b646a69bebaf3b7aea0bde5b">Vector3::Neg_Unit_Z</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the direction this node is facing. </p>
<dl class="section remark"><dt>Remarks</dt><dd>At first glace it may seem odd why this function accepts two different direction vectors as arguements. This function really just generates a rotation and applies it. The Direction vector is where you want the LocalAxis(which can be any local axis) to be when computing the rotation. So LocalAxis is the base, and Direction is the target. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Direction</td><td>The desired end direction in the specified transform space. </td></tr>
    <tr><td class="paramname">TS</td><td>The transform space to use for the direction specified. </td></tr>
    <tr><td class="paramname">LocalAxis</td><td>The axis in local space to use for lining up with the direction specified. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000057">Todo:</a></b></dt><dd>May want to change this to an exception, maybe. </dd></dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3d4066a1b9f9862ea026f15dfa3a3e81"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::SetFixedYawAxis </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>FixedAxis</em> = <code><a class="el" href="classMezzanine_1_1Vector3.xhtml#a62285c6842027aec46da54553c22bc61">Vector3::Unit_Y</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tells this node to always yaw around a specific axis. Useful for AutoTracking. </p>
<dl class="section remark"><dt>Remarks</dt><dd>It's important to note that this will only be corrected in methods that do not explictly set the orientation, such as with autotracking or use of the <a class="el" href="classMezzanine_1_1WorldNode.xhtml#ad9ec8a56450e749cddedef9748594b6d" title="Automatically sets the orientation needed to point this node at a location in the world...">LookAt()</a> function, or the <a class="el" href="classMezzanine_1_1WorldNode.xhtml#a62f367c6b799f4b8216a72f39f568d35" title="Applies a rotation from a quaternion.">Rotate()</a> function. Explicitly setting the orientation with <a class="el" href="classMezzanine_1_1WorldNode.xhtml#afe9db5c3abeb608bf2d589c2a61da546">SetOrientation()</a> or <a class="el" href="classMezzanine_1_1WorldNode.xhtml#a32259918c2d5695141371ca364a813c2">SetLocalOrientation()</a> will not be corrected. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>Whether to enable to disable the use of a fixed yaw axis. </td></tr>
    <tr><td class="paramname">FixedAxis</td><td>The axis on which yawing will be fixed for any rotations applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00237">237</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a03feb41f719612123fe8d9055603efe6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::SetLocalLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a527ef7ddbf4c3936214eff5af821ae63">Mezzanine::AttachableChild</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00303">303</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a32259918c2d5695141371ca364a813c2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::SetLocalOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Orientation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableChild.xhtml#a3604a2450a1647ae882ef1d9dab1ec5d">Mezzanine::AttachableChild</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00312">312</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a636852458b226f1c2f3089f17558e678"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#ab4f0d73a5c313874766bd038a32f1ae2">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00256">256</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afe9db5c3abeb608bf2d589c2a61da546"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::SetOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Orientation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a8c459c324efb01dc56cead8e7650f22e">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00270">270</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3f7797ef81aaf763cdf011728f6b6b05"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::SetScaling </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Scale</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1AttachableBase.xhtml#a5201923c0685e592dee8cecabc72b508">Mezzanine::AttachableBase</a>.</p>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00284">284</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a07ee43210a28041f2debf1cea0c5ce2a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::WorldNode::Yaw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3">Mezzanine::TransformSpace</a> &amp;&#160;</td>
          <td class="paramname"><em>TS</em> = <code><a class="el" href="namespaceMezzanine.xhtml#ad81c74de3529f1e643bd145173924ed3aa1986039b3e4c80c8564c8916e68e61c">Mezzanine::TS_Local</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Applies a rotation around the Y axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Angle</td><td>The angle in radians to rotate. </td></tr>
    <tr><td class="paramname">TS</td><td>The transform space the rotation is to be applied in. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="worldnode_8cpp_source.xhtml#l00221">221</a> of file <a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="worldnode_8h_source.xhtml">worldnode.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="worldnode_8cpp_source.xhtml">worldnode.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 15 2013 04:00:27 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
