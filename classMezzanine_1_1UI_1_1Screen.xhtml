<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::UI::Screen Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September 2, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1UI.xhtml">UI</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">Screen</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1UI_1_1Screen-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::UI::Screen Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class is a helper class for creating <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a>'s. It is responsible for storing and keeping track of all the elements of a single <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> screen.  
 <a href="classMezzanine_1_1UI_1_1Screen.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="screen_8h_source.xhtml">screen.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::UI::Screen:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1UI_1_1Screen__inherit__graph.svg" width="262" height="232"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::UI::Screen:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1UI_1_1Screen__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ad48b3d3d6fef4e50e538c83f2dceb7ba"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad48b3d3d6fef4e50e538c83f2dceb7ba"></a>
typedef IndexMap::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstIndexIterator</b></td></tr>
<tr class="separator:ad48b3d3d6fef4e50e538c83f2dceb7ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adea171c2340f4aa1a3ea9002725d7edb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adea171c2340f4aa1a3ea9002725d7edb"></a>
typedef <br class="typebreak"/>
IndexMap::const_reverse_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstReverseIndexIterator</b></td></tr>
<tr class="separator:adea171c2340f4aa1a3ea9002725d7edb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18c9716a252cc7abf82dab6aa4d090c1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a18c9716a252cc7abf82dab6aa4d090c1"></a>
typedef <br class="typebreak"/>
WidgetContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstWidgetIterator</b></td></tr>
<tr class="separator:a18c9716a252cc7abf82dab6aa4d090c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d8eb91d7ba375ea5b83fac0b946b24"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a75d8eb91d7ba375ea5b83fac0b946b24"></a>
typedef IndexMap::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>IndexIterator</b></td></tr>
<tr class="separator:a75d8eb91d7ba375ea5b83fac0b946b24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14d6755c6a3895a03fddd73c0ae3b018"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a14d6755c6a3895a03fddd73c0ae3b018"></a>
typedef std::map&lt; <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>, <br class="typebreak"/>
<a class="el" href="structMezzanine_1_1UI_1_1IndexData.xhtml">IndexData</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>IndexMap</b></td></tr>
<tr class="separator:a14d6755c6a3895a03fddd73c0ae3b018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6cfe4f2b4025a5bd7f6a1f6fac8ef50"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad6cfe4f2b4025a5bd7f6a1f6fac8ef50"></a>
typedef IndexMap::reverse_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ReverseIndexIterator</b></td></tr>
<tr class="separator:ad6cfe4f2b4025a5bd7f6a1f6fac8ef50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8482472f6042acdb178f1b9573687f3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae8482472f6042acdb178f1b9573687f3"></a>
typedef std::map&lt; <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>WidgetContainer</b></td></tr>
<tr class="separator:ae8482472f6042acdb178f1b9573687f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8be3b072c89635b689056e0cbd27614c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8be3b072c89635b689056e0cbd27614c"></a>
typedef WidgetContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>WidgetIterator</b></td></tr>
<tr class="separator:a8be3b072c89635b689056e0cbd27614c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5b14cece4f37e9eee8e0ac20dd0fdcfd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a5b14cece4f37e9eee8e0ac20dd0fdcfd">_RedrawAllIndexes</a> (bool Force=false)</td></tr>
<tr class="memdesc:a5b14cece4f37e9eee8e0ac20dd0fdcfd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all verticies for every widget and regenerates them for rendering.  <a href="#a5b14cece4f37e9eee8e0ac20dd0fdcfd">More...</a><br/></td></tr>
<tr class="separator:a5b14cece4f37e9eee8e0ac20dd0fdcfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45d5c3c45ba8f8546e21805a29f7316a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a45d5c3c45ba8f8546e21805a29f7316a">_RedrawIndex</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> &amp;Index)</td></tr>
<tr class="memdesc:a45d5c3c45ba8f8546e21805a29f7316a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the existing verticies and regenerates them for a specific index(widget).  <a href="#a45d5c3c45ba8f8546e21805a29f7316a">More...</a><br/></td></tr>
<tr class="separator:a45d5c3c45ba8f8546e21805a29f7316a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af76f7b0640ad5f7f37cdc5eaf8d5f0cd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#af76f7b0640ad5f7f37cdc5eaf8d5f0cd">_RenderScreen</a> ()</td></tr>
<tr class="memdesc:af76f7b0640ad5f7f37cdc5eaf8d5f0cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manually calls the <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> system to render this screen.  <a href="#af76f7b0640ad5f7f37cdc5eaf8d5f0cd">More...</a><br/></td></tr>
<tr class="separator:af76f7b0640ad5f7f37cdc5eaf8d5f0cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80ed9d29431e152d7d1ab6d7568d2033"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a80ed9d29431e152d7d1ab6d7568d2033">_RenderVertices</a> (bool Force=false)</td></tr>
<tr class="memdesc:a80ed9d29431e152d7d1ab6d7568d2033"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares all vertices for rendering to the screen.  <a href="#a80ed9d29431e152d7d1ab6d7568d2033">More...</a><br/></td></tr>
<tr class="separator:a80ed9d29431e152d7d1ab6d7568d2033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a726bcc191457d35c0897cdd9fdb6050a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a726bcc191457d35c0897cdd9fdb6050a">_RequestIndexRedraw</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> &amp;Index)</td></tr>
<tr class="memdesc:a726bcc191457d35c0897cdd9fdb6050a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flags a widget for redraw before the next render.  <a href="#a726bcc191457d35c0897cdd9fdb6050a">More...</a><br/></td></tr>
<tr class="separator:a726bcc191457d35c0897cdd9fdb6050a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48a51680bf92223a2820215bc408012d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a48a51680bf92223a2820215bc408012d">_SetOrientation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a8892173bd6aaf7d0e34a07b2b30aad33">Mezzanine::OrientationMode</a> &amp;Mode)</td></tr>
<tr class="memdesc:a48a51680bf92223a2820215bc408012d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forces an orientation mode change for this screen.  <a href="#a48a51680bf92223a2820215bc408012d">More...</a><br/></td></tr>
<tr class="separator:a48a51680bf92223a2820215bc408012d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae52d377572a5b2e6b96819334d0fb58b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#ae52d377572a5b2e6b96819334d0fb58b">_Transform</a> (<a class="el" href="classMezzanine_1_1UI_1_1ScreenVertexData.xhtml">ScreenVertexData</a> &amp;Vertices, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Begin, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;End)</td></tr>
<tr class="memdesc:ae52d377572a5b2e6b96819334d0fb58b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the vertex positions so they are in front of the camera in world space.  <a href="#ae52d377572a5b2e6b96819334d0fb58b">More...</a><br/></td></tr>
<tr class="separator:ae52d377572a5b2e6b96819334d0fb58b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa391f3ca2c77ae5493654771f3a20a5a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#aa391f3ca2c77ae5493654771f3a20a5a">AddRootWidget</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;ZOrder, <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *ToAdd)</td></tr>
<tr class="memdesc:aa391f3ca2c77ae5493654771f3a20a5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a widget to the root of this screen for rendering.  <a href="#aa391f3ca2c77ae5493654771f3a20a5a">More...</a><br/></td></tr>
<tr class="separator:aa391f3ca2c77ae5493654771f3a20a5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ccbb6d2424f8d7bf437ebd717af84c1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7ccbb6d2424f8d7bf437ebd717af84c1"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a7ccbb6d2424f8d7bf437ebd717af84c1">CheckViewportSize</a> ()</td></tr>
<tr class="memdesc:a7ccbb6d2424f8d7bf437ebd717af84c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the viewport has changed in size. If so it updates all the <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> elements on the screen. <br/></td></tr>
<tr class="separator:a7ccbb6d2424f8d7bf437ebd717af84c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba94ad01214919f9a7506bdef39aee64"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#aba94ad01214919f9a7506bdef39aee64">CheckWidgetMouseIsOver</a> ()</td></tr>
<tr class="memdesc:aba94ad01214919f9a7506bdef39aee64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the widget the mouse is over if any.  <a href="#aba94ad01214919f9a7506bdef39aee64">More...</a><br/></td></tr>
<tr class="separator:aba94ad01214919f9a7506bdef39aee64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3ba64ca5798dccc3ba6599dda88ce84"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#aa3ba64ca5798dccc3ba6599dda88ce84">CreateButton</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect)</td></tr>
<tr class="memdesc:aa3ba64ca5798dccc3ba6599dda88ce84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a button.  <a href="#aa3ba64ca5798dccc3ba6599dda88ce84">More...</a><br/></td></tr>
<tr class="separator:aa3ba64ca5798dccc3ba6599dda88ce84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89fb300488208051cbc79f94d2f7eb9c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a89fb300488208051cbc79f94d2f7eb9c">CreateButton</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;<a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml">Glyph</a>, <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Text)</td></tr>
<tr class="memdesc:a89fb300488208051cbc79f94d2f7eb9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a text button.  <a href="#a89fb300488208051cbc79f94d2f7eb9c">More...</a><br/></td></tr>
<tr class="separator:a89fb300488208051cbc79f94d2f7eb9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa533da42ca308295aeaa953dab8ff2a1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#aa533da42ca308295aeaa953dab8ff2a1">CreateButton</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, <a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Text)</td></tr>
<tr class="memdesc:aa533da42ca308295aeaa953dab8ff2a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a text button.  <a href="#aa533da42ca308295aeaa953dab8ff2a1">More...</a><br/></td></tr>
<tr class="separator:aa533da42ca308295aeaa953dab8ff2a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac747ebc5a415725c2a35d4ba8ccbdb57"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml">CheckBox</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#ac747ebc5a415725c2a35d4ba8ccbdb57">CreateCheckBox</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;LabelText)</td></tr>
<tr class="memdesc:ac747ebc5a415725c2a35d4ba8ccbdb57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>.  <a href="#ac747ebc5a415725c2a35d4ba8ccbdb57">More...</a><br/></td></tr>
<tr class="separator:ac747ebc5a415725c2a35d4ba8ccbdb57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a027421b8ac4040119bb15366ba104116"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1DropDownList.xhtml">DropDownList</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a027421b8ac4040119bb15366ba104116">CreateDropDownList</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;ScrollStyle)</td></tr>
<tr class="memdesc:a027421b8ac4040119bb15366ba104116"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a drop down list.  <a href="#a027421b8ac4040119bb15366ba104116">More...</a><br/></td></tr>
<tr class="separator:a027421b8ac4040119bb15366ba104116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3e1a3f05cf3adae777b97210b3181f1"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml">EnclosedRenderableContainerWidget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#ad3e1a3f05cf3adae777b97210b3181f1">CreateEnclosedRenderableContainerWidget</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect)</td></tr>
<tr class="memdesc:ad3e1a3f05cf3adae777b97210b3181f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml" title="This is an abstract class for the creation and storage of widgets to be used by other classes...">EnclosedRenderableContainerWidget</a>.  <a href="#ad3e1a3f05cf3adae777b97210b3181f1">More...</a><br/></td></tr>
<tr class="separator:ad3e1a3f05cf3adae777b97210b3181f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ccc1863315b80fadbc278dd14320125"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1ListBox.xhtml">ListBox</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a6ccc1863315b80fadbc278dd14320125">CreateListBox</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;ScrollStyle)</td></tr>
<tr class="memdesc:a6ccc1863315b80fadbc278dd14320125"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a List Box.  <a href="#a6ccc1863315b80fadbc278dd14320125">More...</a><br/></td></tr>
<tr class="separator:a6ccc1863315b80fadbc278dd14320125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f97a212b4e2456597ce0ea47dc9809a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Menu.xhtml">Menu</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a3f97a212b4e2456597ce0ea47dc9809a">CreateMenu</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect)</td></tr>
<tr class="memdesc:a3f97a212b4e2456597ce0ea47dc9809a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1UI_1_1Menu.xhtml" title="This class is a control mechanism for multiple windows in a heirarchy.">Menu</a>.  <a href="#a3f97a212b4e2456597ce0ea47dc9809a">More...</a><br/></td></tr>
<tr class="separator:a3f97a212b4e2456597ce0ea47dc9809a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d2d02489354d899cc203a79f12c5435"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1UI_1_1OpenRenderableContainerWidget.xhtml">OpenRenderableContainerWidget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a3d2d02489354d899cc203a79f12c5435">CreateOpenRenderableContainerWidget</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name)</td></tr>
<tr class="memdesc:a3d2d02489354d899cc203a79f12c5435"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an <a class="el" href="classMezzanine_1_1UI_1_1OpenRenderableContainerWidget.xhtml">OpenRenderableContainerWidget</a>.  <a href="#a3d2d02489354d899cc203a79f12c5435">More...</a><br/></td></tr>
<tr class="separator:a3d2d02489354d899cc203a79f12c5435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab128262f51b77c501fdc5032daf31990"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml">PagedCellGrid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#ab128262f51b77c501fdc5032daf31990">CreatePagedCellGrid</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;SpnRect, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6">UI::SpinnerStyle</a> &amp;SStyle, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;GlyphHeight)</td></tr>
<tr class="memdesc:ab128262f51b77c501fdc5032daf31990"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a paged cell grid.  <a href="#ab128262f51b77c501fdc5032daf31990">More...</a><br/></td></tr>
<tr class="separator:ab128262f51b77c501fdc5032daf31990"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15abb3fb39aff9c1c019f6ba31263741"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml">Scrollbar</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a15abb3fb39aff9c1c019f6ba31263741">CreateScrollbar</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;Style)</td></tr>
<tr class="memdesc:a15abb3fb39aff9c1c019f6ba31263741"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>.  <a href="#a15abb3fb39aff9c1c019f6ba31263741">More...</a><br/></td></tr>
<tr class="separator:a15abb3fb39aff9c1c019f6ba31263741"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a9a356edc6dd4b841cde7ca6661a991"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml">ScrolledCellGrid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a7a9a356edc6dd4b841cde7ca6661a991">CreateScrolledCellGrid</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Thickness, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;Style)</td></tr>
<tr class="memdesc:a7a9a356edc6dd4b841cde7ca6661a991"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a scrolled cell grid.  <a href="#a7a9a356edc6dd4b841cde7ca6661a991">More...</a><br/></td></tr>
<tr class="separator:a7a9a356edc6dd4b841cde7ca6661a991"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d7b3913f52f3608bf162e847f810c66"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml">Spinner</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a2d7b3913f52f3608bf162e847f810c66">CreateSpinner</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6">UI::SpinnerStyle</a> &amp;SStyle, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;GlyphHeight)</td></tr>
<tr class="memdesc:a2d7b3913f52f3608bf162e847f810c66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>.  <a href="#a2d7b3913f52f3608bf162e847f810c66">More...</a><br/></td></tr>
<tr class="separator:a2d7b3913f52f3608bf162e847f810c66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af663ffe1a9389ea9afd3eab3285c2121"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1TabSet.xhtml">TabSet</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#af663ffe1a9389ea9afd3eab3285c2121">CreateTabSet</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;SetRect)</td></tr>
<tr class="memdesc:af663ffe1a9389ea9afd3eab3285c2121"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a tabset.  <a href="#af663ffe1a9389ea9afd3eab3285c2121">More...</a><br/></td></tr>
<tr class="separator:af663ffe1a9389ea9afd3eab3285c2121"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dd8c443aa73c90ab0e2002ceec9792c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml">Window</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a4dd8c443aa73c90ab0e2002ceec9792c">CreateWidgetWindow</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect)</td></tr>
<tr class="memdesc:a4dd8c443aa73c90ab0e2002ceec9792c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml" title="This is a container widget capable of holding any other widget.">Window</a>.  <a href="#a4dd8c443aa73c90ab0e2002ceec9792c">More...</a><br/></td></tr>
<tr class="separator:a4dd8c443aa73c90ab0e2002ceec9792c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95f06e3050ca9d47e42000c343138b7a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">TextureAtlas</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a95f06e3050ca9d47e42000c343138b7a">GetAtlas</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas) const </td></tr>
<tr class="memdesc:a95f06e3050ca9d47e42000c343138b7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an atlas that has been loaded.  <a href="#a95f06e3050ca9d47e42000c343138b7a">More...</a><br/></td></tr>
<tr class="separator:a95f06e3050ca9d47e42000c343138b7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2492d59822b26db89e602fee98bccd7f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1UI_1_1GlyphData.xhtml">GlyphData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a2492d59822b26db89e602fee98bccd7f">GetGlyphData</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;ID, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas) const </td></tr>
<tr class="memdesc:a2492d59822b26db89e602fee98bccd7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the specified <a class="el" href="classMezzanine_1_1UI_1_1GlyphData.xhtml" title="Class used to describe a single glyph or character available for text operations.">GlyphData</a> from an Atlas.  <a href="#a2492d59822b26db89e602fee98bccd7f">More...</a><br/></td></tr>
<tr class="separator:a2492d59822b26db89e602fee98bccd7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2629610299606e478e880cbcf5afe0f2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a2629610299606e478e880cbcf5afe0f2">GetMarkupColour</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas) const </td></tr>
<tr class="memdesc:a2629610299606e478e880cbcf5afe0f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the <a class="el" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> set at the specified index.  <a href="#a2629610299606e478e880cbcf5afe0f2">More...</a><br/></td></tr>
<tr class="separator:a2629610299606e478e880cbcf5afe0f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f1f23c666513a658e7297a0bea49629"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a5f1f23c666513a658e7297a0bea49629">GetName</a> ()</td></tr>
<tr class="memdesc:a5f1f23c666513a658e7297a0bea49629"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of this screen.  <a href="#a5f1f23c666513a658e7297a0bea49629">More...</a><br/></td></tr>
<tr class="separator:a5f1f23c666513a658e7297a0bea49629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01ebf69672971ed4ce3417c0b5d4d4c5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a01ebf69672971ed4ce3417c0b5d4d4c5">GetNumWidgets</a> ()</td></tr>
<tr class="memdesc:a01ebf69672971ed4ce3417c0b5d4d4c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of widgets being used in this screen.  <a href="#a01ebf69672971ed4ce3417c0b5d4d4c5">More...</a><br/></td></tr>
<tr class="separator:a01ebf69672971ed4ce3417c0b5d4d4c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adafbc28919ebb4d2d65e54daa0676177"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#adafbc28919ebb4d2d65e54daa0676177">GetPrimaryAtlas</a> ()</td></tr>
<tr class="memdesc:adafbc28919ebb4d2d65e54daa0676177"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set primary atlas.  <a href="#adafbc28919ebb4d2d65e54daa0676177">More...</a><br/></td></tr>
<tr class="separator:adafbc28919ebb4d2d65e54daa0676177"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae72af325153c01f54abae60d5b0bec63"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#ae72af325153c01f54abae60d5b0bec63">GetSolidUV</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas) const </td></tr>
<tr class="memdesc:ae72af325153c01f54abae60d5b0bec63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the solid UV position from an Atlas.  <a href="#ae72af325153c01f54abae60d5b0bec63">More...</a><br/></td></tr>
<tr class="separator:ae72af325153c01f54abae60d5b0bec63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ed7fed4d0c574b3dd9fa10a71a8b8dd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structMezzanine_1_1UI_1_1Sprite.xhtml">Sprite</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a3ed7fed4d0c574b3dd9fa10a71a8b8dd">GetSprite</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;SpriteName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas) const </td></tr>
<tr class="memdesc:a3ed7fed4d0c574b3dd9fa10a71a8b8dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a sprite from an Atlas.  <a href="#a3ed7fed4d0c574b3dd9fa10a71a8b8dd">More...</a><br/></td></tr>
<tr class="separator:a3ed7fed4d0c574b3dd9fa10a71a8b8dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af713ab0b229c33e0878e1f0d681e731f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#af713ab0b229c33e0878e1f0d681e731f">GetTexelOffsetX</a> () const </td></tr>
<tr class="memdesc:af713ab0b229c33e0878e1f0d681e731f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the X axis Texel Offset for the current rendersystem.  <a href="#af713ab0b229c33e0878e1f0d681e731f">More...</a><br/></td></tr>
<tr class="separator:af713ab0b229c33e0878e1f0d681e731f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b8584eaecf431a164a8d31c55bf38b5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a1b8584eaecf431a164a8d31c55bf38b5">GetTexelOffsetY</a> () const </td></tr>
<tr class="memdesc:a1b8584eaecf431a164a8d31c55bf38b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Y axis Texel Offset for the current rendersystem.  <a href="#a1b8584eaecf431a164a8d31c55bf38b5">More...</a><br/></td></tr>
<tr class="separator:a1b8584eaecf431a164a8d31c55bf38b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c3961e8ca8920786936d2325c32ad96"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a7c3961e8ca8920786936d2325c32ad96">GetTextureSize</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas) const </td></tr>
<tr class="memdesc:a7c3961e8ca8920786936d2325c32ad96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the texture size of the specified Atlas.  <a href="#a7c3961e8ca8920786936d2325c32ad96">More...</a><br/></td></tr>
<tr class="separator:a7c3961e8ca8920786936d2325c32ad96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7e723a811859d8b8fc002cb296293b7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#ae7e723a811859d8b8fc002cb296293b7">GetViewport</a> ()</td></tr>
<tr class="memdesc:ae7e723a811859d8b8fc002cb296293b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Viewport this screen is currently rendering to.  <a href="#ae7e723a811859d8b8fc002cb296293b7">More...</a><br/></td></tr>
<tr class="separator:ae7e723a811859d8b8fc002cb296293b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12199967ad8a0e91cf816083aaa2a5d0"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a12199967ad8a0e91cf816083aaa2a5d0">GetViewportDimensions</a> ()</td></tr>
<tr class="memdesc:a12199967ad8a0e91cf816083aaa2a5d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current viewport dimensions.  <a href="#a12199967ad8a0e91cf816083aaa2a5d0">More...</a><br/></td></tr>
<tr class="separator:a12199967ad8a0e91cf816083aaa2a5d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61953731a028cc008aaf5d9469c9ae8d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a61953731a028cc008aaf5d9469c9ae8d">GetWidget</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name)</td></tr>
<tr class="memdesc:a61953731a028cc008aaf5d9469c9ae8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a widget in this screen by name.  <a href="#a61953731a028cc008aaf5d9469c9ae8d">More...</a><br/></td></tr>
<tr class="separator:a61953731a028cc008aaf5d9469c9ae8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ab5b6926df8b3a6fecd3c8d87f39f36"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a7ab5b6926df8b3a6fecd3c8d87f39f36">GetWidget</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;ZOrder)</td></tr>
<tr class="memdesc:a7ab5b6926df8b3a6fecd3c8d87f39f36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a widget by it's ZOrder among the root widgets on this screen.  <a href="#a7ab5b6926df8b3a6fecd3c8d87f39f36">More...</a><br/></td></tr>
<tr class="separator:a7ab5b6926df8b3a6fecd3c8d87f39f36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad220f00a62a75ab73e4620e853acdca"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aad220f00a62a75ab73e4620e853acdca"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#aad220f00a62a75ab73e4620e853acdca">Hide</a> ()</td></tr>
<tr class="memdesc:aad220f00a62a75ab73e4620e853acdca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forces the screen to hide. <br/></td></tr>
<tr class="separator:aad220f00a62a75ab73e4620e853acdca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe4941cec0c43850bafa4b76397944ae"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#abe4941cec0c43850bafa4b76397944ae">IsVisible</a> ()</td></tr>
<tr class="memdesc:abe4941cec0c43850bafa4b76397944ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the screens visability.  <a href="#abe4941cec0c43850bafa4b76397944ae">More...</a><br/></td></tr>
<tr class="separator:abe4941cec0c43850bafa4b76397944ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae19e1d289996d93af69ff1ee500be2ad"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#ae19e1d289996d93af69ff1ee500be2ad">SetPrimaryAtlas</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas)</td></tr>
<tr class="memdesc:ae19e1d289996d93af69ff1ee500be2ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Atlas to be assumed when one isn't provided for atlas related tasks.  <a href="#ae19e1d289996d93af69ff1ee500be2ad">More...</a><br/></td></tr>
<tr class="separator:ae19e1d289996d93af69ff1ee500be2ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b45ebeb88b02282efa494a8fcb5f8c5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a4b45ebeb88b02282efa494a8fcb5f8c5">SetVisible</a> (bool visible)</td></tr>
<tr class="memdesc:a4b45ebeb88b02282efa494a8fcb5f8c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the screens visability.  <a href="#a4b45ebeb88b02282efa494a8fcb5f8c5">More...</a><br/></td></tr>
<tr class="separator:a4b45ebeb88b02282efa494a8fcb5f8c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d77c9fd4e2da65ed85f13b0bb7eebe4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6d77c9fd4e2da65ed85f13b0bb7eebe4"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a6d77c9fd4e2da65ed85f13b0bb7eebe4">Show</a> ()</td></tr>
<tr class="memdesc:a6d77c9fd4e2da65ed85f13b0bb7eebe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forces the screen to be shown. <br/></td></tr>
<tr class="separator:a6d77c9fd4e2da65ed85f13b0bb7eebe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml">Mezzanine::UI::ExtendedRenderableFactory</a></td></tr>
<tr class="memitem:a8b2f409e581e17f09d90237712fb4f57 inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8b2f409e581e17f09d90237712fb4f57"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml#a8b2f409e581e17f09d90237712fb4f57">ExtendedRenderableFactory</a> ()</td></tr>
<tr class="memdesc:a8b2f409e581e17f09d90237712fb4f57 inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a8b2f409e581e17f09d90237712fb4f57 inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a973d06656d83c7a61abc5ef11dc5931e inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a973d06656d83c7a61abc5ef11dc5931e"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml#a973d06656d83c7a61abc5ef11dc5931e">~ExtendedRenderableFactory</a> ()</td></tr>
<tr class="memdesc:a973d06656d83c7a61abc5ef11dc5931e inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a973d06656d83c7a61abc5ef11dc5931e inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5282518834e069700076417122bdf88 inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1LineList.xhtml">LineList</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml#ae5282518834e069700076417122bdf88">CreateLineList</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name)</td></tr>
<tr class="memdesc:ae5282518834e069700076417122bdf88 inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a linelist.  <a href="#ae5282518834e069700076417122bdf88">More...</a><br/></td></tr>
<tr class="separator:ae5282518834e069700076417122bdf88 inherit pub_methods_classMezzanine_1_1UI_1_1ExtendedRenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1UI_1_1RenderableFactory')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml">Mezzanine::UI::RenderableFactory</a></td></tr>
<tr class="memitem:af668f25aa9f646fb713adbc6d48d3e30 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af668f25aa9f646fb713adbc6d48d3e30"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#af668f25aa9f646fb713adbc6d48d3e30">RenderableFactory</a> ()</td></tr>
<tr class="memdesc:af668f25aa9f646fb713adbc6d48d3e30 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:af668f25aa9f646fb713adbc6d48d3e30 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6b48ee615cf3cf74c54d2bc25932475 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab6b48ee615cf3cf74c54d2bc25932475"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#ab6b48ee615cf3cf74c54d2bc25932475">~RenderableFactory</a> ()</td></tr>
<tr class="memdesc:ab6b48ee615cf3cf74c54d2bc25932475 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:ab6b48ee615cf3cf74c54d2bc25932475 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f5cd9fd18062cf09fd340a931a3d897 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Caption.xhtml">Caption</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a1f5cd9fd18062cf09fd340a931a3d897">CreateCaption</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;<a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml">Glyph</a>, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Text)</td></tr>
<tr class="memdesc:a1f5cd9fd18062cf09fd340a931a3d897 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a caption.  <a href="#a1f5cd9fd18062cf09fd340a931a3d897">More...</a><br/></td></tr>
<tr class="separator:a1f5cd9fd18062cf09fd340a931a3d897 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68a2ca0b5d5ed061ea902f854ea094f9 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Caption.xhtml">Caption</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a68a2ca0b5d5ed061ea902f854ea094f9">CreateCaption</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Text)</td></tr>
<tr class="memdesc:a68a2ca0b5d5ed061ea902f854ea094f9 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a caption.  <a href="#a68a2ca0b5d5ed061ea902f854ea094f9">More...</a><br/></td></tr>
<tr class="separator:a68a2ca0b5d5ed061ea902f854ea094f9 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73168554b1110f10bcd51adbeeb06c60 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1MarkupText.xhtml">MarkupText</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a73168554b1110f10bcd51adbeeb06c60">CreateMarkupText</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;<a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml">Glyph</a>, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Text)</td></tr>
<tr class="memdesc:a73168554b1110f10bcd51adbeeb06c60 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a markup text.  <a href="#a73168554b1110f10bcd51adbeeb06c60">More...</a><br/></td></tr>
<tr class="separator:a73168554b1110f10bcd51adbeeb06c60 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c24739c88cce2c224a90cb7482f4756 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1MarkupText.xhtml">MarkupText</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a5c24739c88cce2c224a90cb7482f4756">CreateMarkupText</a> (<a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;Name, const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LineHeight, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Text)</td></tr>
<tr class="memdesc:a5c24739c88cce2c224a90cb7482f4756 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a markup text.  <a href="#a5c24739c88cce2c224a90cb7482f4756">More...</a><br/></td></tr>
<tr class="separator:a5c24739c88cce2c224a90cb7482f4756 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a5d5fd375e4abfadf07129aad978633 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Rectangle.xhtml">Rectangle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a3a5d5fd375e4abfadf07129aad978633">CreateRectangle</a> (const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;Rect)</td></tr>
<tr class="memdesc:a3a5d5fd375e4abfadf07129aad978633 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a rectangle.  <a href="#a3a5d5fd375e4abfadf07129aad978633">More...</a><br/></td></tr>
<tr class="separator:a3a5d5fd375e4abfadf07129aad978633 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b096c189774ce766d4ed5483232faa3 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a4b096c189774ce766d4ed5483232faa3">DestroyBasicRenderable</a> (<a class="el" href="classMezzanine_1_1UI_1_1BasicRenderable.xhtml">BasicRenderable</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:a4b096c189774ce766d4ed5483232faa3 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a <a class="el" href="classMezzanine_1_1UI_1_1BasicRenderable.xhtml" title="Base class for renderables that generate verticies.">BasicRenderable</a>.  <a href="#a4b096c189774ce766d4ed5483232faa3">More...</a><br/></td></tr>
<tr class="separator:a4b096c189774ce766d4ed5483232faa3 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8515332618305f985126d0b31c0a993 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#ae8515332618305f985126d0b31c0a993">DestroyWidget</a> (<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:ae8515332618305f985126d0b31c0a993 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a widget.  <a href="#ae8515332618305f985126d0b31c0a993">More...</a><br/></td></tr>
<tr class="separator:ae8515332618305f985126d0b31c0a993 inherit pub_methods_classMezzanine_1_1UI_1_1RenderableFactory"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a11ef854bd364f5b2bcc2c0096d4364bd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a11ef854bd364f5b2bcc2c0096d4364bd">Screen</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;name, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Atlas, <a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *WindowViewport)</td></tr>
<tr class="memdesc:a11ef854bd364f5b2bcc2c0096d4364bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal constructor.  <a href="#a11ef854bd364f5b2bcc2c0096d4364bd">More...</a><br/></td></tr>
<tr class="separator:a11ef854bd364f5b2bcc2c0096d4364bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99bd65284d2402f653d121b3412f4aca"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a99bd65284d2402f653d121b3412f4aca"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#a99bd65284d2402f653d121b3412f4aca">~Screen</a> ()</td></tr>
<tr class="memdesc:a99bd65284d2402f653d121b3412f4aca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a99bd65284d2402f653d121b3412f4aca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dc636be46f4ace5ad5e563fd46881e1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2dc636be46f4ace5ad5e563fd46881e1"></a>
virtual <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CheckAndInsert</b> (<a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *ToInsert)</td></tr>
<tr class="separator:a2dc636be46f4ace5ad5e563fd46881e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebf418ad2af79578d85d8d1518a5ed5b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aebf418ad2af79578d85d8d1518a5ed5b"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>CreateVertexBuffer</b> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;InitialSize=32)</td></tr>
<tr class="separator:aebf418ad2af79578d85d8d1518a5ed5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0d9c1fef73d633da2b39bf7e377138b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac0d9c1fef73d633da2b39bf7e377138b"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>DestroyVertexBuffer</b> ()</td></tr>
<tr class="separator:ac0d9c1fef73d633da2b39bf7e377138b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1a97d88e3c1fec1b1be7e613c122404"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#aa1a97d88e3c1fec1b1be7e613c122404">GetSceneManager</a> ()</td></tr>
<tr class="separator:aa1a97d88e3c1fec1b1be7e613c122404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaa56396d965e528eddf950482d7edca"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">Screen</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml#adaa56396d965e528eddf950482d7edca">GetScreen</a> ()</td></tr>
<tr class="memdesc:adaa56396d965e528eddf950482d7edca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the screen that will possess ownership of the created renderables.  <a href="#adaa56396d965e528eddf950482d7edca">More...</a><br/></td></tr>
<tr class="separator:adaa56396d965e528eddf950482d7edca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2db3c8fb07a8a6c58c42cd03b3352bab"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2db3c8fb07a8a6c58c42cd03b3352bab"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>PrepareRenderSystem</b> ()</td></tr>
<tr class="separator:a2db3c8fb07a8a6c58c42cd03b3352bab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af42ac72231ad9c67238d578302503261"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af42ac72231ad9c67238d578302503261"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ResizeVertexBuffer</b> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;RequestedSize)</td></tr>
<tr class="separator:af42ac72231ad9c67238d578302503261"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a95669b21b3305dc23671189a5df1215d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a95669b21b3305dc23671189a5df1215d"></a>
<a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GameViewport</b></td></tr>
<tr class="separator:a95669b21b3305dc23671189a5df1215d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7acd5ff773e2b14fe552b483c9ed9d8b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7acd5ff773e2b14fe552b483c9ed9d8b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IndexRedrawAll</b></td></tr>
<tr class="separator:a7acd5ff773e2b14fe552b483c9ed9d8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a605f2bfeaa58b8f5911c26a4fb010c8a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a605f2bfeaa58b8f5911c26a4fb010c8a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IndexRedrawNeeded</b></td></tr>
<tr class="separator:a605f2bfeaa58b8f5911c26a4fb010c8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53e3fb9d5ec3d8e0d92df05b63c64d4d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a53e3fb9d5ec3d8e0d92df05b63c64d4d"></a>
<a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InverseViewportSize</b></td></tr>
<tr class="separator:a53e3fb9d5ec3d8e0d92df05b63c64d4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0c7e1535305409eebe9e8bc7f8e03f5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad0c7e1535305409eebe9e8bc7f8e03f5"></a>
<a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>KnownViewportSize</b></td></tr>
<tr class="separator:ad0c7e1535305409eebe9e8bc7f8e03f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6067b22466a6acc8aa39eca9328d1a4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab6067b22466a6acc8aa39eca9328d1a4"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Name</b></td></tr>
<tr class="separator:ab6067b22466a6acc8aa39eca9328d1a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a77f0c30cfc0a643b56ce110b10f655"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7a77f0c30cfc0a643b56ce110b10f655"></a>
<a class="el" href="namespaceMezzanine.xhtml#a8892173bd6aaf7d0e34a07b2b30aad33">Mezzanine::OrientationMode</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Orientation</b></td></tr>
<tr class="separator:a7a77f0c30cfc0a643b56ce110b10f655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6473e780df45fd5b1f75fdbd41c5a1f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab6473e780df45fd5b1f75fdbd41c5a1f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>OrientationChanged</b></td></tr>
<tr class="separator:ab6473e780df45fd5b1f75fdbd41c5a1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f6e19e43ee739cb4d7476392ef23cc2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5f6e19e43ee739cb4d7476392ef23cc2"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>PrimaryAtlas</b></td></tr>
<tr class="separator:a5f6e19e43ee739cb4d7476392ef23cc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4834701c0d901766bea1d98059a0a40a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4834701c0d901766bea1d98059a0a40a"></a>
<a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Scale</b></td></tr>
<tr class="separator:a4834701c0d901766bea1d98059a0a40a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff75a117955ffdad76b0ba17971d9ac1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aff75a117955ffdad76b0ba17971d9ac1"></a>
<a class="el" href="structMezzanine_1_1UI_1_1ScreenInternalData.xhtml">ScreenInternalData</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>SID</b></td></tr>
<tr class="separator:aff75a117955ffdad76b0ba17971d9ac1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7706e94290bcc28054f97e0e33fbdad"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa7706e94290bcc28054f97e0e33fbdad"></a>
std::vector&lt; <a class="el" href="structMezzanine_1_1UI_1_1AtlasAndPosition.xhtml">AtlasAndPosition</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>TextureByVertex</b></td></tr>
<tr class="separator:aa7706e94290bcc28054f97e0e33fbdad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3659b98054a12d545caedf52c52b1e12"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3659b98054a12d545caedf52c52b1e12"></a>
<a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><b>VertexBufferSize</b></td></tr>
<tr class="separator:a3659b98054a12d545caedf52c52b1e12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68e6e88fb6d759b0c74d2c3ce27a4b29"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a68e6e88fb6d759b0c74d2c3ce27a4b29"></a>
<a class="el" href="classMezzanine_1_1Matrix4x4.xhtml">Matrix4x4</a>&#160;</td><td class="memItemRight" valign="bottom"><b>VertexTransform</b></td></tr>
<tr class="separator:a68e6e88fb6d759b0c74d2c3ce27a4b29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02412ab0548da0b6a7c46acd0624a253"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a02412ab0548da0b6a7c46acd0624a253"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>ViewportSizeChanged</b></td></tr>
<tr class="separator:a02412ab0548da0b6a7c46acd0624a253"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaad9357e5fa77fa43db4acaad23d29e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afaad9357e5fa77fa43db4acaad23d29e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Visible</b></td></tr>
<tr class="separator:afaad9357e5fa77fa43db4acaad23d29e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00901c240c9e42803b847859a7a5e52b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a00901c240c9e42803b847859a7a5e52b"></a>
WidgetContainer&#160;</td><td class="memItemRight" valign="bottom"><b>Widgets</b></td></tr>
<tr class="separator:a00901c240c9e42803b847859a7a5e52b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f2d37314d2b31e7de8c0aeaf07420b8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1f2d37314d2b31e7de8c0aeaf07420b8"></a>
IndexMap&#160;</td><td class="memItemRight" valign="bottom"><b>WidgetsRoot</b></td></tr>
<tr class="separator:a1f2d37314d2b31e7de8c0aeaf07420b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ab811b36cd63b54fe42b6acb231ea21bc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab811b36cd63b54fe42b6acb231ea21bc"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>UIManager</b></td></tr>
<tr class="separator:ab811b36cd63b54fe42b6acb231ea21bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class is a helper class for creating <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a>'s. It is responsible for storing and keeping track of all the elements of a single <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> screen. </p>
<p><a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a>'s can optionally be divided up into Screens, or "pages". Each screen is batched together for rendering, so keeping the amount of screens to a minimum will improve performance. </p>

<p>Definition at line <a class="el" href="screen_8h_source.xhtml#l00116">116</a> of file <a class="el" href="screen_8h_source.xhtml">screen.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a11ef854bd364f5b2bcc2c0096d4364bd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::UI::Screen::Screen </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> *&#160;</td>
          <td class="paramname"><em>WindowViewport</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Internal constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>The name of this screen. </td></tr>
    <tr><td class="paramname">Atlas</td><td>The name of the primary atlas to be assigned to this screen. This can be overridden later, even by individual <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> elements. </td></tr>
    <tr><td class="paramname">WindowViewport</td><td>The Viewport to which this screen belongs. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a5b14cece4f37e9eee8e0ac20dd0fdcfd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::_RedrawAllIndexes </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Force</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clears all verticies for every widget and regenerates them for rendering. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Force</td><td>Whether or not to force a redraw on all layers regardless of if they need it. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00636">636</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a45d5c3c45ba8f8546e21805a29f7316a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::_RedrawIndex </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clears the existing verticies and regenerates them for a specific index(widget). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The Index corresponding to the widget you want regenerated. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00620">620</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af76f7b0640ad5f7f37cdc5eaf8d5f0cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::_RenderScreen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Manually calls the <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> system to render this screen. </p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00519">519</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a80ed9d29431e152d7d1ab6d7568d2033"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::_RenderVertices </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Force</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prepares all vertices for rendering to the screen. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Force</td><td>Whether or not to force preparation regardless of if they need it. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00667">667</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a726bcc191457d35c0897cdd9fdb6050a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::_RequestIndexRedraw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Flags a widget for redraw before the next render. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The ID or Index of the widget to be flagged for redraw. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00658">658</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a48a51680bf92223a2820215bc408012d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::_SetOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a8892173bd6aaf7d0e34a07b2b30aad33">Mezzanine::OrientationMode</a> &amp;&#160;</td>
          <td class="paramname"><em>Mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Forces an orientation mode change for this screen. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Mode</td><td>The orientation mode to be applied to the <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> on this screen. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00587">587</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae52d377572a5b2e6b96819334d0fb58b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::_Transform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1ScreenVertexData.xhtml">ScreenVertexData</a> &amp;&#160;</td>
          <td class="paramname"><em>Vertices</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Begin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>End</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates the vertex positions so they are in front of the camera in world space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Vertices</td><td>Vector of the vertices to be transformed. </td></tr>
    <tr><td class="paramname">Begin</td><td>The first <a class="el" href="structMezzanine_1_1UI_1_1Vertex.xhtml" title="Basic class describing a vertex in the UI to be rendered.">Vertex</a> to transform in the range. </td></tr>
    <tr><td class="paramname">End</td><td>The last <a class="el" href="structMezzanine_1_1UI_1_1Vertex.xhtml" title="Basic class describing a vertex in the UI to be rendered.">Vertex</a> to transform in the range. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00601">601</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa391f3ca2c77ae5493654771f3a20a5a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::AddRootWidget </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>ZOrder</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> *&#160;</td>
          <td class="paramname"><em>ToAdd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a widget to the root of this screen for rendering. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ZOrder</td><td>The ZOrder the widget will be rendered at on this screen relative to other root widgets. </td></tr>
    <tr><td class="paramname">ToAdd</td><td>The widget to be added. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00435">435</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aba94ad01214919f9a7506bdef39aee64"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> * Mezzanine::UI::Screen::CheckWidgetMouseIsOver </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the widget the mouse is over if any. </p>
<p>This function searches only the visable layers contained in this screen. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the widget the mouse is over, or NULL if there are none. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00339">339</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa3ba64ca5798dccc3ba6599dda88ce84"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> * Mezzanine::UI::Screen::CreateButton </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a button. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created button. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the button. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the button. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a93e0cc47804f17cb6eab1e4894658411">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00357">357</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a89fb300488208051cbc79f94d2f7eb9c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> * Mezzanine::UI::Screen::CreateButton </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Glyph</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a text button. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created button. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the button. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the button. </td></tr>
    <tr><td class="paramname"><a class="el" href="classMezzanine_1_1UI_1_1Glyph.xhtml" title="Class used to describe a single glyph or character available for text operations.">Glyph</a></td><td>One of the glyphs specified in your mta file. Must be valid. </td></tr>
    <tr><td class="paramname">Text</td><td>Any text you want printed on the button. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a0f27a0e0e548f6125b41b8f7a8003690">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00362">362</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa533da42ca308295aeaa953dab8ff2a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Button.xhtml">Button</a> * Mezzanine::UI::Screen::CreateButton </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LineHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a text button. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created button. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the button. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the button. </td></tr>
    <tr><td class="paramname">LineHeight</td><td>The lineheight you want the text to have in relative units. This will automatically select the glyph and scale it for you. </td></tr>
    <tr><td class="paramname">Text</td><td>Any text you want printed on the button. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a41619af3baf880b656c06051f1b47145">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00367">367</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac747ebc5a415725c2a35d4ba8ccbdb57"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml">CheckBox</a> * Mezzanine::UI::Screen::CreateCheckBox </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LineHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>LabelText</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>. </p>
<p>The label uses the Markup Text class, and thus it's light markup text language. You can also pass in a blank string if you don't wish to have a label, you can create a label after construction. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1CheckBox.xhtml" title="This is a simple widget for storing a bool value.">CheckBox</a>. </td></tr>
    <tr><td class="paramname">LineHeight</td><td>The lineheight you want the text to have. If the Rect passed in is relative, this will expect LineHeight to be relative as well. </td></tr>
    <tr><td class="paramname">LabelText</td><td>The text to display with the label. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a68d654cede8f2b9e8641ad1915131d86">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00377">377</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a027421b8ac4040119bb15366ba104116"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1DropDownList.xhtml">DropDownList</a> * Mezzanine::UI::Screen::CreateDropDownList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LineHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>ScrollStyle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a drop down list. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1DropDownList.xhtml" title="A widget that displays one selection from a list that can have it&#39;s visibility toggled.">DropDownList</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The Name for the <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The renderable rect representing the position and size of this widget. </td></tr>
    <tr><td class="paramname">LineHeight</td><td>The lineheight you want the text to have. If the Rect passed in is relative, this will expect LineHeight to be relative as well. </td></tr>
    <tr><td class="paramname">ScrollStyle</td><td>The style of the scrollbar you want for this List Box. See <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a> class for more information. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a16dc3c2c4899c317131effb85ab33d20">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00402">402</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad3e1a3f05cf3adae777b97210b3181f1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml">EnclosedRenderableContainerWidget</a> * Mezzanine::UI::Screen::CreateEnclosedRenderableContainerWidget </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an <a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml" title="This is an abstract class for the creation and storage of widgets to be used by other classes...">EnclosedRenderableContainerWidget</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1EnclosedRenderableContainerWidget.xhtml" title="This is an abstract class for the creation and storage of widgets to be used by other classes...">EnclosedRenderableContainerWidget</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the window. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the window. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#ab4bd23067efa2562cd60651b4c2c066a">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00412">412</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6ccc1863315b80fadbc278dd14320125"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1ListBox.xhtml">ListBox</a> * Mezzanine::UI::Screen::CreateListBox </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>ScrollStyle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a List Box. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created List Box. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the List Box. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the List Box. </td></tr>
    <tr><td class="paramname">ScrollStyle</td><td>The style of scrollbar you want to create, see <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a> documentation for more details. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a79b90e8039b356761084dbb29d71e8af">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00382">382</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3f97a212b4e2456597ce0ea47dc9809a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Menu.xhtml">Menu</a> * Mezzanine::UI::Screen::CreateMenu </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMezzanine_1_1UI_1_1Menu.xhtml" title="This class is a control mechanism for multiple windows in a heirarchy.">Menu</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1Menu.xhtml" title="This class is a control mechanism for multiple windows in a heirarchy.">Menu</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the <a class="el" href="classMezzanine_1_1UI_1_1Menu.xhtml" title="This class is a control mechanism for multiple windows in a heirarchy.">Menu</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1Menu.xhtml" title="This class is a control mechanism for multiple windows in a heirarchy.">Menu</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml#aa2c27ca4da652a218fcc9325e667c524">Mezzanine::UI::ExtendedRenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00422">422</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3d2d02489354d899cc203a79f12c5435"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1OpenRenderableContainerWidget.xhtml">OpenRenderableContainerWidget</a> * Mezzanine::UI::Screen::CreateOpenRenderableContainerWidget </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an <a class="el" href="classMezzanine_1_1UI_1_1OpenRenderableContainerWidget.xhtml">OpenRenderableContainerWidget</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the creates <a class="el" href="classMezzanine_1_1UI_1_1OpenRenderableContainerWidget.xhtml">OpenRenderableContainerWidget</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the <a class="el" href="classMezzanine_1_1UI_1_1OpenRenderableContainerWidget.xhtml">OpenRenderableContainerWidget</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml#a7bde135c9250d5a05171065ae51ac7af">Mezzanine::UI::ExtendedRenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00427">427</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab128262f51b77c501fdc5032daf31990"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml">PagedCellGrid</a> * Mezzanine::UI::Screen::CreatePagedCellGrid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>SpnRect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6">UI::SpinnerStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>SStyle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>GlyphHeight</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a paged cell grid. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use a spinner to navigate through pages ...">PagedCellGrid</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the widget. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1PagedCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use a spinner to navigate through pages ...">PagedCellGrid</a>. </td></tr>
    <tr><td class="paramname">SpnRect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>. </td></tr>
    <tr><td class="paramname">SStyle</td><td>The style of spinner to create. </td></tr>
    <tr><td class="paramname">GlyphHeight</td><td>The desired lineheight of the glyphs to be used with the spinner. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a0861141227568910691db006100348b5">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00397">397</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a15abb3fb39aff9c1c019f6ba31263741"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml">Scrollbar</a> * Mezzanine::UI::Screen::CreateScrollbar </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>Style</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a>. </td></tr>
    <tr><td class="paramname">Style</td><td>The style of scrollbar you want to create, see <a class="el" href="classMezzanine_1_1UI_1_1Scrollbar.xhtml" title="This class is a widget class, to be used alongside any scrollable widget.">Scrollbar</a> documentation for more details. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a79ba617a1d1e62c9937674ad7eda67ee">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00372">372</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7a9a356edc6dd4b841cde7ca6661a991"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml">ScrolledCellGrid</a> * Mezzanine::UI::Screen::CreateScrolledCellGrid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Thickness</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a5998a9bf372a7e92605c0c461736e763">UI::ScrollbarStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>Style</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a scrolled cell grid. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use scrollbars to navigate the cells on ...">ScrolledCellGrid</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the widget. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1ScrolledCellGrid.xhtml" title="This is a specialization of the cell grid that allows you to use scrollbars to navigate the cells on ...">ScrolledCellGrid</a>. </td></tr>
    <tr><td class="paramname">Thickness</td><td>The width of the vertical scrollbar in relative units. The same amount of actual pixels is used to determine the height of the horizontal scrollbar. </td></tr>
    <tr><td class="paramname">Style</td><td>An enum value representing how you want your scrollbar constructed. See class details for more info. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a1b6cafbbfa82896377dc943d9bd493c2">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00392">392</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2d7b3913f52f3608bf162e847f810c66"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml">Spinner</a> * Mezzanine::UI::Screen::CreateSpinner </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1UI.xhtml#a62462d4df783dcdda77e1590a96bc6d6">UI::SpinnerStyle</a> &amp;&#160;</td>
          <td class="paramname"><em>SStyle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>GlyphHeight</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The Name for the <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1Spinner.xhtml" title="This is a simple widget for a numeric variable in a box.">Spinner</a>. </td></tr>
    <tr><td class="paramname">SStyle</td><td>The layout of buttons this widget will have. See SpinnerStyle enum or class description for more details. </td></tr>
    <tr><td class="paramname">GlyphHeight</td><td>The desired relative height of the text you want. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a24782d2f29c615fc681f6f2f453cde55">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00387">387</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af663ffe1a9389ea9afd3eab3285c2121"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1TabSet.xhtml">TabSet</a> * Mezzanine::UI::Screen::CreateTabSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>SetRect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a tabset. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created tabset. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The Name for the <a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>. </td></tr>
    <tr><td class="paramname">SetRect</td><td>The Rect representing the position and size of all the <a class="el" href="classMezzanine_1_1UI_1_1Renderable.xhtml" title="Basic class for all structures that get inserted into the rendering hierarchy.">Renderable</a> Sets generated by the tabset. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#a7320803f1826dbd32cbd2cc74ab5965b">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00407">407</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4dd8c443aa73c90ab0e2002ceec9792c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml">Window</a> * Mezzanine::UI::Screen::CreateWidgetWindow </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml">RenderableRect</a> &amp;&#160;</td>
          <td class="paramname"><em>Rect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml" title="This is a container widget capable of holding any other widget.">Window</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml" title="This is a container widget capable of holding any other widget.">Window</a>. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml" title="This is a container widget capable of holding any other widget.">Window</a>. </td></tr>
    <tr><td class="paramname">Rect</td><td>The Rect representing the position and size of the <a class="el" href="classMezzanine_1_1UI_1_1Window.xhtml" title="This is a container widget capable of holding any other widget.">Window</a>. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1UI_1_1ExtendedRenderableFactory.xhtml#ac0b771a867adc0fd1951d295af1b3e78">Mezzanine::UI::ExtendedRenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00417">417</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a95f06e3050ca9d47e42000c343138b7a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1TextureAtlas.xhtml">TextureAtlas</a> * Mezzanine::UI::Screen::GetAtlas </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an atlas that has been loaded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Atlas</td><td>The name of the Atlas to retrieve, usually stored as a filename. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the requested Texture Atlas. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00496">496</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2492d59822b26db89e602fee98bccd7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1GlyphData.xhtml">GlyphData</a> * Mezzanine::UI::Screen::GetGlyphData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>ID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the specified <a class="el" href="classMezzanine_1_1UI_1_1GlyphData.xhtml" title="Class used to describe a single glyph or character available for text operations.">GlyphData</a> from an Atlas. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ID</td><td>The identification number associated with the loaded <a class="el" href="classMezzanine_1_1UI_1_1GlyphData.xhtml" title="Class used to describe a single glyph or character available for text operations.">GlyphData</a>. </td></tr>
    <tr><td class="paramname">Atlas</td><td>The name of the atlas to check the specified <a class="el" href="classMezzanine_1_1UI_1_1GlyphData.xhtml" title="Class used to describe a single glyph or character available for text operations.">GlyphData</a> ID for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the requested <a class="el" href="classMezzanine_1_1UI_1_1GlyphData.xhtml" title="Class used to describe a single glyph or character available for text operations.">GlyphData</a>. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00486">486</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2629610299606e478e880cbcf5afe0f2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ColourValue.xhtml">ColourValue</a> Mezzanine::UI::Screen::GetMarkupColour </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the <a class="el" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> set at the specified index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the Markup colour to get. </td></tr>
    <tr><td class="paramname">Atlas</td><td>The Atlas to check the markup colours of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> with the colour at the provided index, or White if the Index is invalid(or if that is the colour set, which would be silly). </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00501">501</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5f1f23c666513a658e7297a0bea49629"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp; Mezzanine::UI::Screen::GetName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of this screen. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name of this screen. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00278">278</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a01ebf69672971ed4ce3417c0b5d4d4c5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::UI::Screen::GetNumWidgets </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of widgets being used in this screen. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of widgets this screen is storing. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00458">458</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adafbc28919ebb4d2d65e54daa0676177"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::UI::Screen::GetPrimaryAtlas </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the currently set primary atlas. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the name of the primary atlas that is set. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00471">471</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa1a97d88e3c1fec1b1be7e613c122404"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1SceneManager.xhtml">SceneManager</a> * Mezzanine::UI::Screen::GetSceneManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000103">Todo:</a></b></dt><dd>This function exists (as opposed to storing a pointer that doesn't change) so that if changes in the viewport configuration occur this will pick up on that. However the render queue listener that is added in this class' constructor never gets re-assigned. This needs to be fixed. Until then if a change does occur the <a class="el" href="namespaceMezzanine_1_1UI.xhtml" title="This namespace is for all the classes belonging to the Graphical User Interface Subsystem.">UI</a> will be rendered at a different time then it needs to be, potentially overwritten by the scene render. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adaa56396d965e528eddf950482d7edca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Screen.xhtml">Screen</a> * Mezzanine::UI::Screen::GetScreen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the screen that will possess ownership of the created renderables. </p>

<p>Implements <a class="el" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#ab5cbb2df0500d05f90c005865f93dc27">Mezzanine::UI::RenderableFactory</a>.</p>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00186">186</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae72af325153c01f54abae60d5b0bec63"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> Mezzanine::UI::Screen::GetSolidUV </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the solid UV position from an Atlas. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Atlas</td><td>The name of the Atlas to get the Solid UV from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a> with the location of Solid UV on the Atlas. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00476">476</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3ed7fed4d0c574b3dd9fa10a71a8b8dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1UI_1_1Sprite.xhtml">Sprite</a> * Mezzanine::UI::Screen::GetSprite </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>SpriteName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets a sprite from an Atlas. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">SpriteName</td><td>The name of the sprite to retrieve. </td></tr>
    <tr><td class="paramname">Atlas</td><td>The name of the Atlas to get the sprite from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the requested <a class="el" href="structMezzanine_1_1UI_1_1Sprite.xhtml" title="Basic class used to describe a portion of a texture to be applied to a Quad.">Sprite</a>. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00481">481</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af713ab0b229c33e0878e1f0d681e731f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::UI::Screen::GetTexelOffsetX </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the X axis Texel Offset for the current rendersystem. </p>
<dl class="section return"><dt>Returns</dt><dd>Retruns a real containing the texel offset to be applied to renderables on this screen. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00506">506</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1b8584eaecf431a164a8d31c55bf38b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::UI::Screen::GetTexelOffsetY </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Y axis Texel Offset for the current rendersystem. </p>
<dl class="section return"><dt>Returns</dt><dd>Retruns a real containing the texel offset to be applied to renderables on this screen. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00511">511</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7c3961e8ca8920786936d2325c32ad96"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> Mezzanine::UI::Screen::GetTextureSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the texture size of the specified Atlas. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Atlas</td><td>The name of the atlas to get the texture size of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a> containing the size of the requested Atlas. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00491">491</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae7e723a811859d8b8fc002cb296293b7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Graphics_1_1Viewport.xhtml">Graphics::Viewport</a> * Mezzanine::UI::Screen::GetViewport </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Viewport this screen is currently rendering to. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the Viewport this screen is applied to. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00331">331</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a12199967ad8a0e91cf816083aaa2a5d0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classMezzanine_1_1Vector2.xhtml">Vector2</a> &amp; Mezzanine::UI::Screen::GetViewportDimensions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current viewport dimensions. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a> representing the current viewport dimensions. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00306">306</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a61953731a028cc008aaf5d9469c9ae8d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> * Mezzanine::UI::Screen::GetWidget </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a widget in this screen by name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the widget to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the widget of the specified name. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00444">444</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7ab5b6926df8b3a6fecd3c8d87f39f36"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1UI_1_1Widget.xhtml">Widget</a> * Mezzanine::UI::Screen::GetWidget </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>ZOrder</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a widget by it's ZOrder among the root widgets on this screen. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ZOrder</td><td>The ZOrder of the widget to get. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the widget with the specified ZOrder. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00451">451</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abe4941cec0c43850bafa4b76397944ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::UI::Screen::IsVisible </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the screens visability. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a bool representing the visability of the screen. </dd></dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00291">291</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae19e1d289996d93af69ff1ee500be2ad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::SetPrimaryAtlas </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Atlas</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Atlas to be assumed when one isn't provided for atlas related tasks. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Atlas</td><td>The name of the atlas to be used. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00466">466</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4b45ebeb88b02282efa494a8fcb5f8c5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::UI::Screen::SetVisible </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>visible</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the screens visability. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">visable</td><td>A bool representing the visability of the screen. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="screen_8cpp_source.xhtml#l00283">283</a> of file <a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/UI/<a class="el" href="screen_8h_source.xhtml">screen.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/UI/<a class="el" href="screen_8cpp_source.xhtml">screen.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Sep 13 2013 01:59:19 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
