<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Physics::RigidProxy Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September 2, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Physics.xhtml">Physics</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml">RigidProxy</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Physics_1_1RigidProxy-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Physics::RigidProxy Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a proxy from which rigid body objects are handled.  
 <a href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="rigidproxy_8h_source.xhtml">rigidproxy.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Physics::RigidProxy:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1RigidProxy__inherit__graph.svg" width="198" height="328"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Physics::RigidProxy:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Physics_1_1RigidProxy__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7176bc22177d9431c86427ad034282bb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a7176bc22177d9431c86427ad034282bb">RigidProxy</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Mass)</td></tr>
<tr class="memdesc:a7176bc22177d9431c86427ad034282bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard Constructor.  <a href="#a7176bc22177d9431c86427ad034282bb">More...</a><br/></td></tr>
<tr class="separator:a7176bc22177d9431c86427ad034282bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaef334a4c2513b331a5340c23271e53f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaef334a4c2513b331a5340c23271e53f"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#aaef334a4c2513b331a5340c23271e53f">~RigidProxy</a> ()</td></tr>
<tr class="memdesc:aaef334a4c2513b331a5340c23271e53f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="separator:aaef334a4c2513b331a5340c23271e53f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1afb9c4df7adecc331d29bf2a83d6c1b"><td class="memItemLeft" align="right" valign="top">virtual btCollisionObject *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a1afb9c4df7adecc331d29bf2a83d6c1b">_GetBasePhysicsObject</a> () const </td></tr>
<tr class="memdesc:a1afb9c4df7adecc331d29bf2a83d6c1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor for the internal physics object.  <a href="#a1afb9c4df7adecc331d29bf2a83d6c1b">More...</a><br/></td></tr>
<tr class="separator:a1afb9c4df7adecc331d29bf2a83d6c1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bd8b6083923d594fcab1c48935dabb1"><td class="memItemLeft" align="right" valign="top">virtual btRigidBody *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a7bd8b6083923d594fcab1c48935dabb1">_GetPhysicsObject</a> () const </td></tr>
<tr class="memdesc:a7bd8b6083923d594fcab1c48935dabb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor for the internal rigid body physics object.  <a href="#a7bd8b6083923d594fcab1c48935dabb1">More...</a><br/></td></tr>
<tr class="separator:a7bd8b6083923d594fcab1c48935dabb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefc189cb9976b6beca6e7255a82d3e14"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#aefc189cb9976b6beca6e7255a82d3e14">AddToWorld</a> ()</td></tr>
<tr class="memdesc:aefc189cb9976b6beca6e7255a82d3e14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs all the necessary task to ensure this object is connected to it's respective world and ready for use.  <a href="#aefc189cb9976b6beca6e7255a82d3e14">More...</a><br/></td></tr>
<tr class="separator:aefc189cb9976b6beca6e7255a82d3e14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b658e54e4d1dc6465addd6891b2ce4e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a2b658e54e4d1dc6465addd6891b2ce4e">ApplyForce</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Force)</td></tr>
<tr class="memdesc:a2b658e54e4d1dc6465addd6891b2ce4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Push/Apply force to an object.  <a href="#a2b658e54e4d1dc6465addd6891b2ce4e">More...</a><br/></td></tr>
<tr class="separator:a2b658e54e4d1dc6465addd6891b2ce4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9415c06ba80691b6e2a6036b33a679bd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a9415c06ba80691b6e2a6036b33a679bd">ApplyTorque</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Torque)</td></tr>
<tr class="memdesc:a9415c06ba80691b6e2a6036b33a679bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Spin/Apply Torque to an object.  <a href="#a9415c06ba80691b6e2a6036b33a679bd">More...</a><br/></td></tr>
<tr class="separator:a9415c06ba80691b6e2a6036b33a679bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac018b1380514fe79aaf30661074aef85"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#ac018b1380514fe79aaf30661074aef85">GetAngularDamping</a> () const </td></tr>
<tr class="memdesc:ac018b1380514fe79aaf30661074aef85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Angular damping.  <a href="#ac018b1380514fe79aaf30661074aef85">More...</a><br/></td></tr>
<tr class="separator:ac018b1380514fe79aaf30661074aef85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83fe7230c7abe61bbe7761988cb27ba0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a83fe7230c7abe61bbe7761988cb27ba0">GetAngularMovementFactor</a> () const </td></tr>
<tr class="memdesc:a83fe7230c7abe61bbe7761988cb27ba0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current angular factors being applied to this actor.  <a href="#a83fe7230c7abe61bbe7761988cb27ba0">More...</a><br/></td></tr>
<tr class="separator:a83fe7230c7abe61bbe7761988cb27ba0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4a16cba5ad095f64b193c0a155f5248"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#ad4a16cba5ad095f64b193c0a155f5248">GetAngularVelocity</a> () const </td></tr>
<tr class="memdesc:ad4a16cba5ad095f64b193c0a155f5248"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Angular Velocity of this object.  <a href="#ad4a16cba5ad095f64b193c0a155f5248">More...</a><br/></td></tr>
<tr class="separator:ad4a16cba5ad095f64b193c0a155f5248"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaed3dbe0c32babd4eeba5dfd63117344"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#aaed3dbe0c32babd4eeba5dfd63117344">GetForce</a> () const </td></tr>
<tr class="memdesc:aaed3dbe0c32babd4eeba5dfd63117344"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total Force/Movement on the object.  <a href="#aaed3dbe0c32babd4eeba5dfd63117344">More...</a><br/></td></tr>
<tr class="separator:aaed3dbe0c32babd4eeba5dfd63117344"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afac05d9f6735193f0cb60fb6309da1c4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#afac05d9f6735193f0cb60fb6309da1c4">GetIndividualGravity</a> () const </td></tr>
<tr class="memdesc:afac05d9f6735193f0cb60fb6309da1c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the gravity being applied to this object.  <a href="#afac05d9f6735193f0cb60fb6309da1c4">More...</a><br/></td></tr>
<tr class="separator:afac05d9f6735193f0cb60fb6309da1c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adccb1a2ccec022c2336f0c502499ddce"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#adccb1a2ccec022c2336f0c502499ddce">GetLinearDamping</a> () const </td></tr>
<tr class="memdesc:adccb1a2ccec022c2336f0c502499ddce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the linear damping.  <a href="#adccb1a2ccec022c2336f0c502499ddce">More...</a><br/></td></tr>
<tr class="separator:adccb1a2ccec022c2336f0c502499ddce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26501bf2fb6d280cc55a486c8dbeeaa1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a26501bf2fb6d280cc55a486c8dbeeaa1">GetLinearMovementFactor</a> () const </td></tr>
<tr class="memdesc:a26501bf2fb6d280cc55a486c8dbeeaa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current linear factors being applied to this actor.  <a href="#a26501bf2fb6d280cc55a486c8dbeeaa1">More...</a><br/></td></tr>
<tr class="separator:a26501bf2fb6d280cc55a486c8dbeeaa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2662cc073cc66ce832c84a1710180179"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a2662cc073cc66ce832c84a1710180179">GetLinearVelocity</a> () const </td></tr>
<tr class="memdesc:a2662cc073cc66ce832c84a1710180179"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Linear Velocity of this object.  <a href="#a2662cc073cc66ce832c84a1710180179">More...</a><br/></td></tr>
<tr class="separator:a2662cc073cc66ce832c84a1710180179"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefd99c3fde60cb4494801b2e323e0f5a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#aefd99c3fde60cb4494801b2e323e0f5a">GetLocalInertia</a> () const </td></tr>
<tr class="memdesc:aefd99c3fde60cb4494801b2e323e0f5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current intertia of the object.  <a href="#aefd99c3fde60cb4494801b2e323e0f5a">More...</a><br/></td></tr>
<tr class="separator:aefd99c3fde60cb4494801b2e323e0f5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d070b21d0b815acd0db1fa42a8d3635"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a1d070b21d0b815acd0db1fa42a8d3635">GetMass</a> () const </td></tr>
<tr class="memdesc:a1d070b21d0b815acd0db1fa42a8d3635"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total Mass of the object.  <a href="#a1d070b21d0b815acd0db1fa42a8d3635">More...</a><br/></td></tr>
<tr class="separator:a1d070b21d0b815acd0db1fa42a8d3635"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab826874ba2220906385d7b15981b469b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine_1_1Physics.xhtml#a80c4fbe8d2b2c4817756af89056a769c">Physics::ProxyType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#ab826874ba2220906385d7b15981b469b">GetPhysicsProxyType</a> () const </td></tr>
<tr class="memdesc:ab826874ba2220906385d7b15981b469b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accessor for the type of physics object.  <a href="#ab826874ba2220906385d7b15981b469b">More...</a><br/></td></tr>
<tr class="separator:ab826874ba2220906385d7b15981b469b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a8e1f72c40a06fd4f7466177945581b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a9a8e1f72c40a06fd4f7466177945581b">GetTorque</a> () const </td></tr>
<tr class="memdesc:a9a8e1f72c40a06fd4f7466177945581b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Torque/Rotation.  <a href="#a9a8e1f72c40a06fd4f7466177945581b">More...</a><br/></td></tr>
<tr class="separator:a9a8e1f72c40a06fd4f7466177945581b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab88371ebeef28141b8ac43b434c863e1"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#ab88371ebeef28141b8ac43b434c863e1">RemoveFromWorld</a> ()</td></tr>
<tr class="memdesc:ab88371ebeef28141b8ac43b434c863e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unhooks this proxy from it's respective world.  <a href="#ab88371ebeef28141b8ac43b434c863e1">More...</a><br/></td></tr>
<tr class="separator:ab88371ebeef28141b8ac43b434c863e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a404eb4d327440977c7e16a829e4d64fa"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a404eb4d327440977c7e16a829e4d64fa">SetAngularMovementFactor</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Factor)</td></tr>
<tr class="memdesc:a404eb4d327440977c7e16a829e4d64fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restricts movement on the axis or axies of your choice.  <a href="#a404eb4d327440977c7e16a829e4d64fa">More...</a><br/></td></tr>
<tr class="separator:a404eb4d327440977c7e16a829e4d64fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ee78b2e935d4936c44f15f68b7ab879"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a7ee78b2e935d4936c44f15f68b7ab879">SetAngularVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;AngVel)</td></tr>
<tr class="memdesc:a7ee78b2e935d4936c44f15f68b7ab879"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Angular Velocity of this object.  <a href="#a7ee78b2e935d4936c44f15f68b7ab879">More...</a><br/></td></tr>
<tr class="separator:a7ee78b2e935d4936c44f15f68b7ab879"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af185a92ab825e67d5b43329553033274"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#af185a92ab825e67d5b43329553033274">SetCollisionShape</a> (<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">CollisionShape</a> *Shape)</td></tr>
<tr class="memdesc:af185a92ab825e67d5b43329553033274"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the collision shape to be used.  <a href="#af185a92ab825e67d5b43329553033274">More...</a><br/></td></tr>
<tr class="separator:af185a92ab825e67d5b43329553033274"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87542bcdfcbfcad96147bf837584c9e9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a87542bcdfcbfcad96147bf837584c9e9">SetDamping</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LinDamping, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;AngDamping)</td></tr>
<tr class="memdesc:a87542bcdfcbfcad96147bf837584c9e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Damping for this object.  <a href="#a87542bcdfcbfcad96147bf837584c9e9">More...</a><br/></td></tr>
<tr class="separator:a87542bcdfcbfcad96147bf837584c9e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15d251cbe754def9a64bc0af076c87cc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a15d251cbe754def9a64bc0af076c87cc">SetIndividualGravity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Gravity)</td></tr>
<tr class="memdesc:a15d251cbe754def9a64bc0af076c87cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the gravity for only this object.  <a href="#a15d251cbe754def9a64bc0af076c87cc">More...</a><br/></td></tr>
<tr class="separator:a15d251cbe754def9a64bc0af076c87cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ebe346941f8d50d580ab4f4898ad192"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a3ebe346941f8d50d580ab4f4898ad192">SetLinearMovementFactor</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Factor)</td></tr>
<tr class="memdesc:a3ebe346941f8d50d580ab4f4898ad192"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restricts movement on the axis or axies of your choice.  <a href="#a3ebe346941f8d50d580ab4f4898ad192">More...</a><br/></td></tr>
<tr class="separator:a3ebe346941f8d50d580ab4f4898ad192"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45f05424a4bcc0b51d5b5f1a85ce1f76"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a45f05424a4bcc0b51d5b5f1a85ce1f76">SetLinearVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;LinVel)</td></tr>
<tr class="memdesc:a45f05424a4bcc0b51d5b5f1a85ce1f76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Linear Velocity of this object.  <a href="#a45f05424a4bcc0b51d5b5f1a85ce1f76">More...</a><br/></td></tr>
<tr class="separator:a45f05424a4bcc0b51d5b5f1a85ce1f76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbed96fcb7d17970a3eb09fc28dfcbc9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#acbed96fcb7d17970a3eb09fc28dfcbc9">SetMass</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> NewMass)</td></tr>
<tr class="memdesc:acbed96fcb7d17970a3eb09fc28dfcbc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the mass of the object.  <a href="#acbed96fcb7d17970a3eb09fc28dfcbc9">More...</a><br/></td></tr>
<tr class="separator:acbed96fcb7d17970a3eb09fc28dfcbc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1900cb2a4849e7851d7c3e00153c47a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#aa1900cb2a4849e7851d7c3e00153c47a">SetMass</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> NewMass, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;NewInertia)</td></tr>
<tr class="memdesc:aa1900cb2a4849e7851d7c3e00153c47a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the mass of the object.  <a href="#aa1900cb2a4849e7851d7c3e00153c47a">More...</a><br/></td></tr>
<tr class="separator:aa1900cb2a4849e7851d7c3e00153c47a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml">Mezzanine::Physics::PhysicsProxy</a></td></tr>
<tr class="memitem:a63fbf80af1a4600712ce3c998cbc4fd4 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a63fbf80af1a4600712ce3c998cbc4fd4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a63fbf80af1a4600712ce3c998cbc4fd4">PhysicsProxy</a> ()</td></tr>
<tr class="memdesc:a63fbf80af1a4600712ce3c998cbc4fd4 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard Constructor. <br/></td></tr>
<tr class="separator:a63fbf80af1a4600712ce3c998cbc4fd4 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dd4958f907ab0796a21019450682d6c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6dd4958f907ab0796a21019450682d6c"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a6dd4958f907ab0796a21019450682d6c">~PhysicsProxy</a> ()</td></tr>
<tr class="memdesc:a6dd4958f907ab0796a21019450682d6c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor. <br/></td></tr>
<tr class="separator:a6dd4958f907ab0796a21019450682d6c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a343da8d5f5b73e4bbc018ffd07431377 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a343da8d5f5b73e4bbc018ffd07431377">_GetContactProcessingThreshold</a> () const </td></tr>
<tr class="memdesc:a343da8d5f5b73e4bbc018ffd07431377 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the maximum distance to be considered for processing collisions with this object.  <a href="#a343da8d5f5b73e4bbc018ffd07431377">More...</a><br/></td></tr>
<tr class="separator:a343da8d5f5b73e4bbc018ffd07431377 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad76871ef8897f722aefb4c3b7dd869e1 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ad76871ef8897f722aefb4c3b7dd869e1">_SetContactProcessingThreshold</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Threshold)</td></tr>
<tr class="memdesc:ad76871ef8897f722aefb4c3b7dd869e1 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the maximum distance to be considered for processing collisions with this object.  <a href="#ad76871ef8897f722aefb4c3b7dd869e1">More...</a><br/></td></tr>
<tr class="separator:ad76871ef8897f722aefb4c3b7dd869e1 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abab2b204ae9ac67b9d840785038f8fdb inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a942580f9d14a57c4a192270eb78f7d57">Bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#abab2b204ae9ac67b9d840785038f8fdb">CanLocallyScale</a> () const </td></tr>
<tr class="memdesc:abab2b204ae9ac67b9d840785038f8fdb inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this proxy can have scaling applied to itself (instead of it's shape).  <a href="#abab2b204ae9ac67b9d840785038f8fdb">More...</a><br/></td></tr>
<tr class="separator:abab2b204ae9ac67b9d840785038f8fdb inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21075b3296c2f5de292661475e762673 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine_1_1Physics.xhtml#a17f518115a6221cce3619160261ca407">Physics::ActivationState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a21075b3296c2f5de292661475e762673">GetActivationState</a> () const </td></tr>
<tr class="memdesc:a21075b3296c2f5de292661475e762673 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current activation state of this proxy.  <a href="#a21075b3296c2f5de292661475e762673">More...</a><br/></td></tr>
<tr class="separator:a21075b3296c2f5de292661475e762673 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eccef79efa1fbfcdb16f2676db3ce62 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a5eccef79efa1fbfcdb16f2676db3ce62">GetAnisotropicFriction</a> () const </td></tr>
<tr class="memdesc:a5eccef79efa1fbfcdb16f2676db3ce62 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the anisotropic friction factor.  <a href="#a5eccef79efa1fbfcdb16f2676db3ce62">More...</a><br/></td></tr>
<tr class="separator:a5eccef79efa1fbfcdb16f2676db3ce62 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a031a99d7e92ca6c7c0a2cf473e712f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="namespaceMezzanine_1_1Physics.xhtml#a492c0398afcd0464f6188351e4e11bab">Physics::AnisotropicFrictionFlags</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a7a031a99d7e92ca6c7c0a2cf473e712f">GetAnisotropicFrictionMode</a> () const </td></tr>
<tr class="memdesc:a7a031a99d7e92ca6c7c0a2cf473e712f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current Anisotropic friction mode being applied to this proxy.  <a href="#a7a031a99d7e92ca6c7c0a2cf473e712f">More...</a><br/></td></tr>
<tr class="separator:a7a031a99d7e92ca6c7c0a2cf473e712f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d86f7cb6d277e64bd3d67b142c0828e inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a3d86f7cb6d277e64bd3d67b142c0828e">GetCollisionFlags</a> () const </td></tr>
<tr class="memdesc:a3d86f7cb6d277e64bd3d67b142c0828e inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the collection of flags that help determine collision response for this object.  <a href="#a3d86f7cb6d277e64bd3d67b142c0828e">More...</a><br/></td></tr>
<tr class="separator:a3d86f7cb6d277e64bd3d67b142c0828e inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f57dc0341aa2b9e0ea092581c305570 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a4f57dc0341aa2b9e0ea092581c305570">GetCollisionGroup</a> () const </td></tr>
<tr class="memdesc:a4f57dc0341aa2b9e0ea092581c305570 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the objects collision group.  <a href="#a4f57dc0341aa2b9e0ea092581c305570">More...</a><br/></td></tr>
<tr class="separator:a4f57dc0341aa2b9e0ea092581c305570 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0151e1b745385e0f7895e5f15d5f56b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ad0151e1b745385e0f7895e5f15d5f56b">GetCollisionMask</a> () const </td></tr>
<tr class="memdesc:ad0151e1b745385e0f7895e5f15d5f56b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the object's collision mask.  <a href="#ad0151e1b745385e0f7895e5f15d5f56b">More...</a><br/></td></tr>
<tr class="separator:ad0151e1b745385e0f7895e5f15d5f56b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9495dcc99c88236c06c4d3b35cc0233d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a9495dcc99c88236c06c4d3b35cc0233d">GetCollisionResponse</a> () const </td></tr>
<tr class="memdesc:a9495dcc99c88236c06c4d3b35cc0233d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will this respond to 3d collisions.  <a href="#a9495dcc99c88236c06c4d3b35cc0233d">More...</a><br/></td></tr>
<tr class="separator:a9495dcc99c88236c06c4d3b35cc0233d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80e7ca2664aedbad0ceefb2ae46af9b0 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">CollisionShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a80e7ca2664aedbad0ceefb2ae46af9b0">GetCollisionShape</a> () const </td></tr>
<tr class="memdesc:a80e7ca2664aedbad0ceefb2ae46af9b0 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the collision shape currently in use by this object.  <a href="#a80e7ca2664aedbad0ceefb2ae46af9b0">More...</a><br/></td></tr>
<tr class="separator:a80e7ca2664aedbad0ceefb2ae46af9b0 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bf37c9f8a6554f333f049337e5b3a2a inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a8bf37c9f8a6554f333f049337e5b3a2a">GetDeactivationTime</a> () const </td></tr>
<tr class="memdesc:a8bf37c9f8a6554f333f049337e5b3a2a inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the current deactivation time for this object.  <a href="#a8bf37c9f8a6554f333f049337e5b3a2a">More...</a><br/></td></tr>
<tr class="separator:a8bf37c9f8a6554f333f049337e5b3a2a inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade57416c69f8b5b1e82f7211b4244d32 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ade57416c69f8b5b1e82f7211b4244d32">GetDerivedSerializableName</a> () const </td></tr>
<tr class="memdesc:ade57416c69f8b5b1e82f7211b4244d32 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the most derived serializable name of this <a class="el" href="classMezzanine_1_1WorldProxy.xhtml" title="This is the base class for proxy objects belonging to the various 3D subsystems.">WorldProxy</a>.  <a href="#ade57416c69f8b5b1e82f7211b4244d32">More...</a><br/></td></tr>
<tr class="separator:ade57416c69f8b5b1e82f7211b4244d32 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a101f3c4981e07f98b87ae481b8ac4245 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a101f3c4981e07f98b87ae481b8ac4245">GetFriction</a> () const </td></tr>
<tr class="memdesc:a101f3c4981e07f98b87ae481b8ac4245 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the sliding friction coefficient.  <a href="#a101f3c4981e07f98b87ae481b8ac4245">More...</a><br/></td></tr>
<tr class="separator:a101f3c4981e07f98b87ae481b8ac4245 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad29760e7413df5fee2d41fb4fb24ed77 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ad29760e7413df5fee2d41fb4fb24ed77">GetLocation</a> () const </td></tr>
<tr class="memdesc:ad29760e7413df5fee2d41fb4fb24ed77 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets this objects current location.  <a href="#ad29760e7413df5fee2d41fb4fb24ed77">More...</a><br/></td></tr>
<tr class="separator:ad29760e7413df5fee2d41fb4fb24ed77 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab193e177391f22755a1eb6d07d13ae76 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ab193e177391f22755a1eb6d07d13ae76">GetOrientation</a> () const </td></tr>
<tr class="memdesc:ab193e177391f22755a1eb6d07d13ae76 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets this objects current orientation.  <a href="#ab193e177391f22755a1eb6d07d13ae76">More...</a><br/></td></tr>
<tr class="separator:ab193e177391f22755a1eb6d07d13ae76 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4604724710bc619dbfee5869608f573d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a4604724710bc619dbfee5869608f573d">GetRestitution</a> () const </td></tr>
<tr class="memdesc:a4604724710bc619dbfee5869608f573d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object restitution coefficient.  <a href="#a4604724710bc619dbfee5869608f573d">More...</a><br/></td></tr>
<tr class="separator:a4604724710bc619dbfee5869608f573d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd8e178c311b3f66526b29b29263086c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#acd8e178c311b3f66526b29b29263086c">GetRollingFriction</a> () const </td></tr>
<tr class="memdesc:acd8e178c311b3f66526b29b29263086c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the rolling friction coefficient.  <a href="#acd8e178c311b3f66526b29b29263086c">More...</a><br/></td></tr>
<tr class="separator:acd8e178c311b3f66526b29b29263086c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6c122590516bfabd50b25541ff66bd4 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#aa6c122590516bfabd50b25541ff66bd4">GetScale</a> () const </td></tr>
<tr class="memdesc:aa6c122590516bfabd50b25541ff66bd4 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the scaling currently being applied to this object.  <a href="#aa6c122590516bfabd50b25541ff66bd4">More...</a><br/></td></tr>
<tr class="separator:aa6c122590516bfabd50b25541ff66bd4 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3cb32fd4ded679f6a5c1d32dbdbcef7 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ad3cb32fd4ded679f6a5c1d32dbdbcef7">IsActive</a> () const </td></tr>
<tr class="memdesc:ad3cb32fd4ded679f6a5c1d32dbdbcef7 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the object is active in the simulation.  <a href="#ad3cb32fd4ded679f6a5c1d32dbdbcef7">More...</a><br/></td></tr>
<tr class="separator:ad3cb32fd4ded679f6a5c1d32dbdbcef7 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae69249a6d9ac14a48abf0fc927900a0a inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a942580f9d14a57c4a192270eb78f7d57">Bool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ae69249a6d9ac14a48abf0fc927900a0a">IsAnisotropicFrictionModeSet</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mode) const </td></tr>
<tr class="memdesc:ae69249a6d9ac14a48abf0fc927900a0a inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not anisotropic friction is being used in a specified mode.  <a href="#ae69249a6d9ac14a48abf0fc927900a0a">More...</a><br/></td></tr>
<tr class="separator:ae69249a6d9ac14a48abf0fc927900a0a inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b1865135a6fa338dcf172ed9fca6533 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a1b1865135a6fa338dcf172ed9fca6533">IsInWorld</a> () const </td></tr>
<tr class="memdesc:a1b1865135a6fa338dcf172ed9fca6533 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this object is inside of it's world.  <a href="#a1b1865135a6fa338dcf172ed9fca6533">More...</a><br/></td></tr>
<tr class="separator:a1b1865135a6fa338dcf172ed9fca6533 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b0cd0b9e19b48ce341708a8abafbbdc inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a4b0cd0b9e19b48ce341708a8abafbbdc">IsKinematic</a> () const </td></tr>
<tr class="memdesc:a4b0cd0b9e19b48ce341708a8abafbbdc inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the object kinematic.  <a href="#a4b0cd0b9e19b48ce341708a8abafbbdc">More...</a><br/></td></tr>
<tr class="separator:a4b0cd0b9e19b48ce341708a8abafbbdc inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a464b11c078a3c9027177b01cb6eae86d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a464b11c078a3c9027177b01cb6eae86d">IsStatic</a> () const </td></tr>
<tr class="memdesc:a464b11c078a3c9027177b01cb6eae86d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the object static.  <a href="#a464b11c078a3c9027177b01cb6eae86d">More...</a><br/></td></tr>
<tr class="separator:a464b11c078a3c9027177b01cb6eae86d inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1ecc23bd90eae4b5d8997bf760d9f24 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#af1ecc23bd90eae4b5d8997bf760d9f24">IsStaticOrKinematic</a> () const </td></tr>
<tr class="memdesc:af1ecc23bd90eae4b5d8997bf760d9f24 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the object is either static or kinematic.  <a href="#af1ecc23bd90eae4b5d8997bf760d9f24">More...</a><br/></td></tr>
<tr class="separator:af1ecc23bd90eae4b5d8997bf760d9f24 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10626d236aea69bbf784a7746ea522ac inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a10626d236aea69bbf784a7746ea522ac">Pitch</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)</td></tr>
<tr class="memdesc:a10626d236aea69bbf784a7746ea522ac inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the X axis.  <a href="#a10626d236aea69bbf784a7746ea522ac">More...</a><br/></td></tr>
<tr class="separator:a10626d236aea69bbf784a7746ea522ac inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92fcdf47d1eb3140f6f5b9e40bc1625f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a92fcdf47d1eb3140f6f5b9e40bc1625f">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;SelfRoot)</td></tr>
<tr class="memdesc:a92fcdf47d1eb3140f6f5b9e40bc1625f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> <a class="el" href="classMezzanine_1_1Node.xhtml">Node</a> and overwrite this object with it.  <a href="#a92fcdf47d1eb3140f6f5b9e40bc1625f">More...</a><br/></td></tr>
<tr class="separator:a92fcdf47d1eb3140f6f5b9e40bc1625f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add09356a645dbb22f1bde76f07576cbe inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#add09356a645dbb22f1bde76f07576cbe">ProtoDeSerializeProperties</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;SelfRoot)</td></tr>
<tr class="memdesc:add09356a645dbb22f1bde76f07576cbe inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> <a class="el" href="classMezzanine_1_1Node.xhtml">Node</a> and overwrite the properties of this object with it.  <a href="#add09356a645dbb22f1bde76f07576cbe">More...</a><br/></td></tr>
<tr class="separator:add09356a645dbb22f1bde76f07576cbe inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01b8a2b4d6ca69bf65250e98b9ebc63f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a01b8a2b4d6ca69bf65250e98b9ebc63f">ProtoDeSerializeShape</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;SelfRoot)</td></tr>
<tr class="memdesc:a01b8a2b4d6ca69bf65250e98b9ebc63f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> <a class="el" href="classMezzanine_1_1Node.xhtml">Node</a> and overwrite the shape of this object with it.  <a href="#a01b8a2b4d6ca69bf65250e98b9ebc63f">More...</a><br/></td></tr>
<tr class="separator:a01b8a2b4d6ca69bf65250e98b9ebc63f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd79eb2336cc349af785a65cb410ae87 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#abd79eb2336cc349af785a65cb410ae87">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;ParentNode) const </td></tr>
<tr class="memdesc:abd79eb2336cc349af785a65cb410ae87 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#abd79eb2336cc349af785a65cb410ae87">More...</a><br/></td></tr>
<tr class="separator:abd79eb2336cc349af785a65cb410ae87 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d5e4859a029c3f43c48050ffb4b9c1c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a9d5e4859a029c3f43c48050ffb4b9c1c">ProtoSerializeProperties</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;SelfRoot) const </td></tr>
<tr class="memdesc:a9d5e4859a029c3f43c48050ffb4b9c1c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert the properties of this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#a9d5e4859a029c3f43c48050ffb4b9c1c">More...</a><br/></td></tr>
<tr class="separator:a9d5e4859a029c3f43c48050ffb4b9c1c inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad995b7fd70a39de70e8a30940073f83 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#aad995b7fd70a39de70e8a30940073f83">ProtoSerializeShape</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;SelfRoot) const </td></tr>
<tr class="memdesc:aad995b7fd70a39de70e8a30940073f83 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert the shape of this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#aad995b7fd70a39de70e8a30940073f83">More...</a><br/></td></tr>
<tr class="separator:aad995b7fd70a39de70e8a30940073f83 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39c7f8277d5d88bfbc27744874775a18 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a39c7f8277d5d88bfbc27744874775a18">Roll</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)</td></tr>
<tr class="memdesc:a39c7f8277d5d88bfbc27744874775a18 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the Z axis.  <a href="#a39c7f8277d5d88bfbc27744874775a18">More...</a><br/></td></tr>
<tr class="separator:a39c7f8277d5d88bfbc27744874775a18 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34dd4309b0befa01be8ae451022f41ee inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a34dd4309b0befa01be8ae451022f41ee">Rotate</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Axis, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)</td></tr>
<tr class="memdesc:a34dd4309b0befa01be8ae451022f41ee inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates the object from it's existing rotation.  <a href="#a34dd4309b0befa01be8ae451022f41ee">More...</a><br/></td></tr>
<tr class="separator:a34dd4309b0befa01be8ae451022f41ee inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d9f7ea9b9304c1c2076ed86861cf94e inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a7d9f7ea9b9304c1c2076ed86861cf94e">Rotate</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)</td></tr>
<tr class="memdesc:a7d9f7ea9b9304c1c2076ed86861cf94e inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates the object from it's existing rotation.  <a href="#a7d9f7ea9b9304c1c2076ed86861cf94e">More...</a><br/></td></tr>
<tr class="separator:a7d9f7ea9b9304c1c2076ed86861cf94e inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24ccb983b48163c89dbf311de7594a90 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a24ccb983b48163c89dbf311de7594a90">Scale</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)</td></tr>
<tr class="memdesc:a24ccb983b48163c89dbf311de7594a90 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the object from it's current size.  <a href="#a24ccb983b48163c89dbf311de7594a90">More...</a><br/></td></tr>
<tr class="separator:a24ccb983b48163c89dbf311de7594a90 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a611089f99118ae94d73274beb069e30b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a611089f99118ae94d73274beb069e30b">Scale</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)</td></tr>
<tr class="memdesc:a611089f99118ae94d73274beb069e30b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the object from it's current size.  <a href="#a611089f99118ae94d73274beb069e30b">More...</a><br/></td></tr>
<tr class="separator:a611089f99118ae94d73274beb069e30b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6c31bd37245ba2af2544bcf3288683f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#af6c31bd37245ba2af2544bcf3288683f">SetActivationState</a> (const <a class="el" href="namespaceMezzanine_1_1Physics.xhtml#a17f518115a6221cce3619160261ca407">Physics::ActivationState</a> State, bool Force=false)</td></tr>
<tr class="memdesc:af6c31bd37245ba2af2544bcf3288683f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the activation state of the world object.  <a href="#af6c31bd37245ba2af2544bcf3288683f">More...</a><br/></td></tr>
<tr class="separator:af6c31bd37245ba2af2544bcf3288683f inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a168d3fabf4990a24b2efb2e91f94572b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a168d3fabf4990a24b2efb2e91f94572b">SetAnisotropicFriction</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Friction, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mode)</td></tr>
<tr class="memdesc:a168d3fabf4990a24b2efb2e91f94572b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the anisotropic friction factor.  <a href="#a168d3fabf4990a24b2efb2e91f94572b">More...</a><br/></td></tr>
<tr class="separator:a168d3fabf4990a24b2efb2e91f94572b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77d7aa21ff90d12b1c45c1c1e7ca1bce inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a77d7aa21ff90d12b1c45c1c1e7ca1bce">SetCollisionFlags</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Flags)</td></tr>
<tr class="memdesc:a77d7aa21ff90d12b1c45c1c1e7ca1bce inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the collection of flags that help determine collision response for this object.  <a href="#a77d7aa21ff90d12b1c45c1c1e7ca1bce">More...</a><br/></td></tr>
<tr class="separator:a77d7aa21ff90d12b1c45c1c1e7ca1bce inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4d7c1657c720dba675de02aa6a3bc14 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#af4d7c1657c720dba675de02aa6a3bc14">SetCollisionGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Group)</td></tr>
<tr class="memdesc:af4d7c1657c720dba675de02aa6a3bc14 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets which collision group this proxy belongs to, which determines it's collision behavior.  <a href="#af4d7c1657c720dba675de02aa6a3bc14">More...</a><br/></td></tr>
<tr class="separator:af4d7c1657c720dba675de02aa6a3bc14 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8a82279f36b240b29bb4b0b972e0d05 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ae8a82279f36b240b29bb4b0b972e0d05">SetCollisionGroupAndMask</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Group, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mask)</td></tr>
<tr class="memdesc:ae8a82279f36b240b29bb4b0b972e0d05 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the collision group and mask for the proxy to determine what it should collide with.  <a href="#ae8a82279f36b240b29bb4b0b972e0d05">More...</a><br/></td></tr>
<tr class="separator:ae8a82279f36b240b29bb4b0b972e0d05 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae602999ca7f2e7cf87832b7d2a1c85f9 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ae602999ca7f2e7cf87832b7d2a1c85f9">SetCollisionMask</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mask)</td></tr>
<tr class="memdesc:ae602999ca7f2e7cf87832b7d2a1c85f9 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the collision mask of this proxy, which determines which groups it will collide with.  <a href="#ae602999ca7f2e7cf87832b7d2a1c85f9">More...</a><br/></td></tr>
<tr class="separator:ae602999ca7f2e7cf87832b7d2a1c85f9 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3ffd001430adae862dd23e5d38bcbc9 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#af3ffd001430adae862dd23e5d38bcbc9">SetCollisionResponse</a> (bool Enable)</td></tr>
<tr class="memdesc:af3ffd001430adae862dd23e5d38bcbc9 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object to be able to collide with other objects in the world.  <a href="#af3ffd001430adae862dd23e5d38bcbc9">More...</a><br/></td></tr>
<tr class="separator:af3ffd001430adae862dd23e5d38bcbc9 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af730b22f0a0a73ee3f4d6e89a7d6f8e2 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#af730b22f0a0a73ee3f4d6e89a7d6f8e2">SetDeactivationTime</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> <a class="el" href="structMezzanine_1_1Time.xhtml">Time</a>)</td></tr>
<tr class="memdesc:af730b22f0a0a73ee3f4d6e89a7d6f8e2 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the amount of time this object needs to have no forces enacted upon it to be deactivated.  <a href="#af730b22f0a0a73ee3f4d6e89a7d6f8e2">More...</a><br/></td></tr>
<tr class="separator:af730b22f0a0a73ee3f4d6e89a7d6f8e2 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfc0736a59bbc79aa142f28e5dcf0ba7 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#adfc0736a59bbc79aa142f28e5dcf0ba7">SetFriction</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Friction)</td></tr>
<tr class="memdesc:adfc0736a59bbc79aa142f28e5dcf0ba7 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the sliding friction coefficient.  <a href="#adfc0736a59bbc79aa142f28e5dcf0ba7">More...</a><br/></td></tr>
<tr class="separator:adfc0736a59bbc79aa142f28e5dcf0ba7 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0ee636127380bb12fbedf31facbd862 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ab0ee636127380bb12fbedf31facbd862">SetKinematic</a> ()</td></tr>
<tr class="memdesc:ab0ee636127380bb12fbedf31facbd862 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the state of the object to Kinematic.  <a href="#ab0ee636127380bb12fbedf31facbd862">More...</a><br/></td></tr>
<tr class="separator:ab0ee636127380bb12fbedf31facbd862 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b5bec5b04620f10872ffffaa83e65ef inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a2b5bec5b04620f10872ffffaa83e65ef">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Loc)</td></tr>
<tr class="memdesc:a2b5bec5b04620f10872ffffaa83e65ef inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location of this object in parent space.  <a href="#a2b5bec5b04620f10872ffffaa83e65ef">More...</a><br/></td></tr>
<tr class="separator:a2b5bec5b04620f10872ffffaa83e65ef inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e13699c8ff5465e606726fd9b591733 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a1e13699c8ff5465e606726fd9b591733">SetLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)</td></tr>
<tr class="memdesc:a1e13699c8ff5465e606726fd9b591733 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location of this object in parent space via Reals.  <a href="#a1e13699c8ff5465e606726fd9b591733">More...</a><br/></td></tr>
<tr class="separator:a1e13699c8ff5465e606726fd9b591733 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3558fa69d0c863f867e640b27f619c9b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a3558fa69d0c863f867e640b27f619c9b">SetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Ori)</td></tr>
<tr class="memdesc:a3558fa69d0c863f867e640b27f619c9b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of this object in parent space.  <a href="#a3558fa69d0c863f867e640b27f619c9b">More...</a><br/></td></tr>
<tr class="separator:a3558fa69d0c863f867e640b27f619c9b inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08fbe4267b3b22bd18b4dfc8720f2c45 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a08fbe4267b3b22bd18b4dfc8720f2c45">SetOrientation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> W)</td></tr>
<tr class="memdesc:a08fbe4267b3b22bd18b4dfc8720f2c45 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of this object in parent space via Reals.  <a href="#a08fbe4267b3b22bd18b4dfc8720f2c45">More...</a><br/></td></tr>
<tr class="separator:a08fbe4267b3b22bd18b4dfc8720f2c45 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b6875f0453184b919d7978bfba4e172 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a8b6875f0453184b919d7978bfba4e172">SetRestitution</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Restitution)</td></tr>
<tr class="memdesc:a8b6875f0453184b919d7978bfba4e172 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the restitution coefficient.  <a href="#a8b6875f0453184b919d7978bfba4e172">More...</a><br/></td></tr>
<tr class="separator:a8b6875f0453184b919d7978bfba4e172 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4d95097eaab83e9d0bf94b082ab1b06 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#aa4d95097eaab83e9d0bf94b082ab1b06">SetRollingFriction</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Friction)</td></tr>
<tr class="memdesc:aa4d95097eaab83e9d0bf94b082ab1b06 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the rolling friction coefficient.  <a href="#aa4d95097eaab83e9d0bf94b082ab1b06">More...</a><br/></td></tr>
<tr class="separator:aa4d95097eaab83e9d0bf94b082ab1b06 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac31d6912be34499b78b7561ef43bef30 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ac31d6912be34499b78b7561ef43bef30">SetScale</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Sc)</td></tr>
<tr class="memdesc:ac31d6912be34499b78b7561ef43bef30 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scaling to be applied to this object.  <a href="#ac31d6912be34499b78b7561ef43bef30">More...</a><br/></td></tr>
<tr class="separator:ac31d6912be34499b78b7561ef43bef30 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11302d21c6d358b16b5b3e31598563fb inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a11302d21c6d358b16b5b3e31598563fb">SetScale</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)</td></tr>
<tr class="memdesc:a11302d21c6d358b16b5b3e31598563fb inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scaling to be applied to this object via Reals.  <a href="#a11302d21c6d358b16b5b3e31598563fb">More...</a><br/></td></tr>
<tr class="separator:a11302d21c6d358b16b5b3e31598563fb inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa021fdb845d3577769cb601a5ca295c5 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#aa021fdb845d3577769cb601a5ca295c5">SetStatic</a> ()</td></tr>
<tr class="memdesc:aa021fdb845d3577769cb601a5ca295c5 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the state of the object to Static.  <a href="#aa021fdb845d3577769cb601a5ca295c5">More...</a><br/></td></tr>
<tr class="separator:aa021fdb845d3577769cb601a5ca295c5 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4addbae29f6520856fb9770590408fc5 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a4addbae29f6520856fb9770590408fc5">Translate</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Trans)</td></tr>
<tr class="memdesc:a4addbae29f6520856fb9770590408fc5 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves this object from it's current location.  <a href="#a4addbae29f6520856fb9770590408fc5">More...</a><br/></td></tr>
<tr class="separator:a4addbae29f6520856fb9770590408fc5 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eb46a4aab40d737d664e01f4b800940 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a6eb46a4aab40d737d664e01f4b800940">Translate</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)</td></tr>
<tr class="memdesc:a6eb46a4aab40d737d664e01f4b800940 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves this object from it's current location.  <a href="#a6eb46a4aab40d737d664e01f4b800940">More...</a><br/></td></tr>
<tr class="separator:a6eb46a4aab40d737d664e01f4b800940 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e337d206712f0d7b9c02bc14f7ed968 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a7e337d206712f0d7b9c02bc14f7ed968">Yaw</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)</td></tr>
<tr class="memdesc:a7e337d206712f0d7b9c02bc14f7ed968 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the Y axis.  <a href="#a7e337d206712f0d7b9c02bc14f7ed968">More...</a><br/></td></tr>
<tr class="separator:a7e337d206712f0d7b9c02bc14f7ed968 inherit pub_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1WorldProxy"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1WorldProxy')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldProxy.xhtml">Mezzanine::WorldProxy</a></td></tr>
<tr class="memitem:a0a50b646753d76a683853f831932611b inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0a50b646753d76a683853f831932611b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a0a50b646753d76a683853f831932611b">WorldProxy</a> ()</td></tr>
<tr class="memdesc:a0a50b646753d76a683853f831932611b inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a0a50b646753d76a683853f831932611b inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae903d7c54b446393e7d2e22d330e89a5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae903d7c54b446393e7d2e22d330e89a5"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#ae903d7c54b446393e7d2e22d330e89a5">~WorldProxy</a> ()</td></tr>
<tr class="memdesc:ae903d7c54b446393e7d2e22d330e89a5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:ae903d7c54b446393e7d2e22d330e89a5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34d1af1b7d367a0bc1fa1609162db9f5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a34d1af1b7d367a0bc1fa1609162db9f5">_Bind</a> (<a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *NewParent)</td></tr>
<tr class="memdesc:a34d1af1b7d367a0bc1fa1609162db9f5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binds this proxy to a <a class="el" href="classMezzanine_1_1WorldObject.xhtml" title="This is the base class from which classes that are insertable into the physical world.">WorldObject</a>.  <a href="#a34d1af1b7d367a0bc1fa1609162db9f5">More...</a><br/></td></tr>
<tr class="separator:a34d1af1b7d367a0bc1fa1609162db9f5 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb4300d31245bb616e7416dd6310a809 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1WorldManager.xhtml">WorldManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#abb4300d31245bb616e7416dd6310a809">GetCreator</a> () const =0</td></tr>
<tr class="memdesc:abb4300d31245bb616e7416dd6310a809 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to this proxies creator.  <a href="#abb4300d31245bb616e7416dd6310a809">More...</a><br/></td></tr>
<tr class="separator:abb4300d31245bb616e7416dd6310a809 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98781f6b27dd4611404c0d6fb06535c9 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a98781f6b27dd4611404c0d6fb06535c9">GetParentObject</a> () const </td></tr>
<tr class="memdesc:a98781f6b27dd4611404c0d6fb06535c9 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a pointer to the parent object controlling this proxy.  <a href="#a98781f6b27dd4611404c0d6fb06535c9">More...</a><br/></td></tr>
<tr class="separator:a98781f6b27dd4611404c0d6fb06535c9 inherit pub_methods_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a8da5ab459976cdf943278201697cfd04"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#a8da5ab459976cdf943278201697cfd04">CreateRigidObject</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Mass)</td></tr>
<tr class="memdesc:a8da5ab459976cdf943278201697cfd04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data related to sticky behavior, if any is enabled.  <a href="#a8da5ab459976cdf943278201697cfd04">More...</a><br/></td></tr>
<tr class="separator:a8da5ab459976cdf943278201697cfd04"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:acc8259ea9b15140941173c72cc15c1a1"><td class="memItemLeft" align="right" valign="top">btRigidBody *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1RigidProxy.xhtml#acc8259ea9b15140941173c72cc15c1a1">PhysicsRigidBody</a></td></tr>
<tr class="memdesc:acc8259ea9b15140941173c72cc15c1a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">RigidBody object used by the internal physics.  <a href="#acc8259ea9b15140941173c72cc15c1a1">More...</a><br/></td></tr>
<tr class="separator:acc8259ea9b15140941173c72cc15c1a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml">Mezzanine::Physics::PhysicsProxy</a></td></tr>
<tr class="memitem:ae85957f245b9e955b2bbbe0ef2058f30 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ae85957f245b9e955b2bbbe0ef2058f30">BodyScale</a></td></tr>
<tr class="memdesc:ae85957f245b9e955b2bbbe0ef2058f30 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vector3 storing the scaling applied to this body.  <a href="#ae85957f245b9e955b2bbbe0ef2058f30">More...</a><br/></td></tr>
<tr class="separator:ae85957f245b9e955b2bbbe0ef2058f30 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19e4e14646ef4ce1945cb2ac7041423c inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a19e4e14646ef4ce1945cb2ac7041423c">CollisionGroup</a></td></tr>
<tr class="memdesc:a19e4e14646ef4ce1945cb2ac7041423c inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">The classifications pertaining to this object in regards to collisions.  <a href="#a19e4e14646ef4ce1945cb2ac7041423c">More...</a><br/></td></tr>
<tr class="separator:a19e4e14646ef4ce1945cb2ac7041423c inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8999b3ac508ffa0375409c707993f09 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ae8999b3ac508ffa0375409c707993f09">CollisionMask</a></td></tr>
<tr class="memdesc:ae8999b3ac508ffa0375409c707993f09 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores the kind of <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Objects that can collide with each other.  <a href="#ae8999b3ac508ffa0375409c707993f09">More...</a><br/></td></tr>
<tr class="separator:ae8999b3ac508ffa0375409c707993f09 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc7e8655c424d511040cbf6f100b5e64 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">CollisionShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#abc7e8655c424d511040cbf6f100b5e64">ProxyShape</a></td></tr>
<tr class="memdesc:abc7e8655c424d511040cbf6f100b5e64 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">The physics shape of this proxy.  <a href="#abc7e8655c424d511040cbf6f100b5e64">More...</a><br/></td></tr>
<tr class="separator:abc7e8655c424d511040cbf6f100b5e64 inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48dc8fc1aea598d69645e05ffdf8361b inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">btCollisionShape *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a48dc8fc1aea598d69645e05ffdf8361b">ScalerShape</a></td></tr>
<tr class="memdesc:a48dc8fc1aea598d69645e05ffdf8361b inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is an internal only shape that provides the ability for a collision shape to be scaled locally (to this object alone).  <a href="#a48dc8fc1aea598d69645e05ffdf8361b">More...</a><br/></td></tr>
<tr class="separator:a48dc8fc1aea598d69645e05ffdf8361b inherit pro_attribs_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1WorldProxy"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1WorldProxy')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1WorldProxy.xhtml">Mezzanine::WorldProxy</a></td></tr>
<tr class="memitem:a250e738cf4ffa72d9a8b42c6465538b2 inherit pro_attribs_classMezzanine_1_1WorldProxy"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a250e738cf4ffa72d9a8b42c6465538b2">ParentObject</a></td></tr>
<tr class="memdesc:a250e738cf4ffa72d9a8b42c6465538b2 inherit pro_attribs_classMezzanine_1_1WorldProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the Object this proxy belongs to.  <a href="#a250e738cf4ffa72d9a8b42c6465538b2">More...</a><br/></td></tr>
<tr class="separator:a250e738cf4ffa72d9a8b42c6465538b2 inherit pro_attribs_classMezzanine_1_1WorldProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1Physics_1_1PhysicsProxy')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml">Mezzanine::Physics::PhysicsProxy</a></td></tr>
<tr class="memitem:a0ee3fd4d37eb7c85a4895d3c41d6ce6c inherit pub_static_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a0ee3fd4d37eb7c85a4895d3c41d6ce6c">GetSerializableName</a> ()</td></tr>
<tr class="memdesc:a0ee3fd4d37eb7c85a4895d3c41d6ce6c inherit pub_static_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag the Renderable class will leave behind as its instances are serialized.  <a href="#a0ee3fd4d37eb7c85a4895d3c41d6ce6c">More...</a><br/></td></tr>
<tr class="separator:a0ee3fd4d37eb7c85a4895d3c41d6ce6c inherit pub_static_methods_classMezzanine_1_1Physics_1_1PhysicsProxy"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is a proxy from which rigid body objects are handled. </p>
<p>This class is used to hold and configure the physics information for a rigid body. This class holds physics information from the physics sub-library and serves as a means to interact with it. Direct interaction with the internal physics object is discouraged. </p>

<p>Definition at line <a class="el" href="rigidproxy_8h_source.xhtml#l00104">104</a> of file <a class="el" href="rigidproxy_8h_source.xhtml">rigidproxy.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a7176bc22177d9431c86427ad034282bb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Physics::RigidProxy::RigidProxy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Mass</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Mass</td><td>The mass of the rigid body. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00058">58</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a1afb9c4df7adecc331d29bf2a83d6c1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">btCollisionObject * Mezzanine::Physics::RigidProxy::_GetBasePhysicsObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Accessor for the internal physics object. </p>

<p>Implements <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ac409b95e62f39f23deebd9b6ba9f6c2d">Mezzanine::Physics::PhysicsProxy</a>.</p>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00302">302</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7bd8b6083923d594fcab1c48935dabb1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">btRigidBody * Mezzanine::Physics::RigidProxy::_GetPhysicsObject </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Accessor for the internal rigid body physics object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the internal object this proxy is based on. </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00294">294</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aefc189cb9976b6beca6e7255a82d3e14"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::AddToWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Performs all the necessary task to ensure this object is connected to it's respective world and ready for use. </p>

<p>Implements <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a5a273eff8150caa9700e2c6f969a9be1">Mezzanine::Physics::PhysicsProxy</a>.</p>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2b658e54e4d1dc6465addd6891b2ce4e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::ApplyForce </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Force</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Push/Apply force to an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Force</td><td>The amount and direction of the force in a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00217">217</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9415c06ba80691b6e2a6036b33a679bd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::ApplyTorque </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Torque</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Spin/Apply Torque to an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Torque</td><td>The amount and direction of the torque in a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00222">222</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8da5ab459976cdf943278201697cfd04"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::CreateRigidObject </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Mass</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Data related to sticky behavior, if any is enabled. </p>
<p>Used to create the physics representation of the rigid body.</p>
<p>Creates the rigid body used by the internal physics library. This is called automatically by the constructor and should not be called manually. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Mass</td><td>The mass of the rigid body to be created. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac018b1380514fe79aaf30661074aef85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::RigidProxy::GetAngularDamping </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Angular damping. </p>
<dl class="section return"><dt>Returns</dt><dd>A Real that has the Angular damping. </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00167">167</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a83fe7230c7abe61bbe7761988cb27ba0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::RigidProxy::GetAngularMovementFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current angular factors being applied to this actor. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the factors on the 3 angular axes. </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00137">137</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad4a16cba5ad095f64b193c0a155f5248"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::RigidProxy::GetAngularVelocity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Angular Velocity of this object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the currently set Angular Velocity of this object. </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00188">188</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaed3dbe0c32babd4eeba5dfd63117344"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::RigidProxy::GetForce </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the total Force/Movement on the object. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the force of the entire object </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00205">205</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afac05d9f6735193f0cb60fb6309da1c4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::RigidProxy::GetIndividualGravity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the gravity being applied to this object. </p>
<p>This is the gravity applied to this object, which may or may not be the same as the world gravity. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the gravity currently being applied to this object. </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00199">199</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adccb1a2ccec022c2336f0c502499ddce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::RigidProxy::GetLinearDamping </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the linear damping. </p>
<dl class="section return"><dt>Returns</dt><dd>A Real that has the Linear damping. </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00162">162</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a26501bf2fb6d280cc55a486c8dbeeaa1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::RigidProxy::GetLinearMovementFactor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the current linear factors being applied to this actor. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the factors on the 3 linear axes. </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00148">148</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2662cc073cc66ce832c84a1710180179"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::RigidProxy::GetLinearVelocity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Linear Velocity of this object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the currently set Linear Velocity of this object. </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00177">177</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aefd99c3fde60cb4494801b2e323e0f5a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::RigidProxy::GetLocalInertia </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the current intertia of the object. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Inertia </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00232">232</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1d070b21d0b815acd0db1fa42a8d3635"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Physics::RigidProxy::GetMass </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the total Mass of the object. </p>
<dl class="section return"><dt>Returns</dt><dd>A Real with the Mass of the object </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00227">227</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab826874ba2220906385d7b15981b469b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine_1_1Physics.xhtml#a80c4fbe8d2b2c4817756af89056a769c">Physics::ProxyType</a> Mezzanine::Physics::RigidProxy::GetPhysicsProxyType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Accessor for the type of physics object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns enum value for the type of proxy this object is. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a8ac8ddf57366b4f294469da89e914f11">Mezzanine::Physics::PhysicsProxy</a>.</p>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9a8e1f72c40a06fd4f7466177945581b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::Physics::RigidProxy::GetTorque </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Torque/Rotation. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Torque </dd></dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00211">211</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab88371ebeef28141b8ac43b434c863e1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::RemoveFromWorld </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unhooks this proxy from it's respective world. </p>

<p>Implements <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#abc420940924654d77e1adc792b3e3591">Mezzanine::Physics::PhysicsProxy</a>.</p>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a404eb4d327440977c7e16a829e4d64fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetAngularMovementFactor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restricts movement on the axis or axies of your choice. </p>
<p>This function can lock or limit any and all axes you define. 0.0 means no angular movement on that axis. 1.0 means normal movement. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Factor</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing the Factors for the 3 angular axes. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00132">132</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7ee78b2e935d4936c44f15f68b7ab879"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetAngularVelocity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>AngVel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Angular Velocity of this object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">AngVel</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the Angular Velocity to be set. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af185a92ab825e67d5b43329553033274"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetCollisionShape </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">CollisionShape</a> *&#160;</td>
          <td class="paramname"><em>Shape</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the collision shape to be used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Shape</td><td>The shape to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a125686861d43b00ed835ef2f32362ece">Mezzanine::Physics::PhysicsProxy</a>.</p>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a87542bcdfcbfcad96147bf837584c9e9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetDamping </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LinDamping</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>AngDamping</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Damping for this object. </p>
<p>Both of Linear Damping and Angular Damping default to zero. This is useful if you wish to simulate something like air resistance. Values can range from 0.0 to 1.0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">LinDamping</td><td>Real representing the amount of Linear Damping(Movement) to be applied. </td></tr>
    <tr><td class="paramname">AngDamping</td><td>Real representing the amount of Angular Damping(Rotation) to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00157">157</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a15d251cbe754def9a64bc0af076c87cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetIndividualGravity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Gravity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the gravity for only this object. </p>
<p>This value will override the world gravity. Should be called after adding to the world. When the object is added to the world the world gravity is applied to it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Gravity</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the direction and strength of gravity to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00194">194</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3ebe346941f8d50d580ab4f4898ad192"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetLinearMovementFactor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restricts movement on the axis or axies of your choice. </p>
<p>This function can lock or limit any and all axes you define. 0.0 means no linear movement on that axis. 1.0 means normal movement. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Factor</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> containing the Factors for the 3 linear axes. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00143">143</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a45f05424a4bcc0b51d5b5f1a85ce1f76"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetLinearVelocity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>LinVel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Linear Velocity of this object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">LinVel</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the Linear Velocity to be set. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acbed96fcb7d17970a3eb09fc28dfcbc9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetMass </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>NewMass</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the mass of the object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">NewMass</td><td>The amount of mass this should have. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00237">237</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa1900cb2a4849e7851d7c3e00153c47a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Physics::RigidProxy::SetMass </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>NewMass</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>NewInertia</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the mass of the object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">NewMass</td><td>The amount of mass this should have. </td></tr>
    <tr><td class="paramname">NewInertia</td><td>The new inertia the object has. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="rigidproxy_8cpp_source.xhtml#l00242">242</a> of file <a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="acc8259ea9b15140941173c72cc15c1a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">btRigidBody* Mezzanine::Physics::RigidProxy::PhysicsRigidBody</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>RigidBody object used by the internal physics. </p>

<p>Definition at line <a class="el" href="rigidproxy_8h_source.xhtml#l00109">109</a> of file <a class="el" href="rigidproxy_8h_source.xhtml">rigidproxy.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/Physics/<a class="el" href="rigidproxy_8h_source.xhtml">rigidproxy.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/Physics/<a class="el" href="rigidproxy_8cpp_source.xhtml">rigidproxy.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Sep 13 2013 01:59:18 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
