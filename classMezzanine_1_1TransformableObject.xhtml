<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::TransformableObject Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September14,2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml">TransformableObject</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classMezzanine_1_1TransformableObject-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::TransformableObject Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This is an interface for all 3D objects that can have their full transforms manipulated.  
 <a href="classMezzanine_1_1TransformableObject.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="transformableobject_8h_source.xhtml">transformableobject.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::TransformableObject:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1TransformableObject__inherit__graph.svg" width="100%" height="474"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a19db95dd2c1d51cae4eff5bc455654f3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a19db95dd2c1d51cae4eff5bc455654f3">GetLocation</a> () const =0</td></tr>
<tr class="memdesc:a19db95dd2c1d51cae4eff5bc455654f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets this objects current location.  <a href="#a19db95dd2c1d51cae4eff5bc455654f3">More...</a><br/></td></tr>
<tr class="separator:a19db95dd2c1d51cae4eff5bc455654f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd0ba2a6c736ee8d0671dc3a5d51f8f1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#afd0ba2a6c736ee8d0671dc3a5d51f8f1">GetOrientation</a> () const =0</td></tr>
<tr class="memdesc:afd0ba2a6c736ee8d0671dc3a5d51f8f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets this objects current orientation.  <a href="#afd0ba2a6c736ee8d0671dc3a5d51f8f1">More...</a><br/></td></tr>
<tr class="separator:afd0ba2a6c736ee8d0671dc3a5d51f8f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71a88f0e6234ddbeceefec8bbedf8d80"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a71a88f0e6234ddbeceefec8bbedf8d80">GetScale</a> () const =0</td></tr>
<tr class="memdesc:a71a88f0e6234ddbeceefec8bbedf8d80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the scaling currently being applied to this object.  <a href="#a71a88f0e6234ddbeceefec8bbedf8d80">More...</a><br/></td></tr>
<tr class="separator:a71a88f0e6234ddbeceefec8bbedf8d80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cc10a74822ab5f6b6bb1b47d3e24420"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a5cc10a74822ab5f6b6bb1b47d3e24420">Pitch</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)=0</td></tr>
<tr class="memdesc:a5cc10a74822ab5f6b6bb1b47d3e24420"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the X axis.  <a href="#a5cc10a74822ab5f6b6bb1b47d3e24420">More...</a><br/></td></tr>
<tr class="separator:a5cc10a74822ab5f6b6bb1b47d3e24420"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a21a0a5652ae6363b8604368e6a8348"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a0a21a0a5652ae6363b8604368e6a8348">Roll</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)=0</td></tr>
<tr class="memdesc:a0a21a0a5652ae6363b8604368e6a8348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the Z axis.  <a href="#a0a21a0a5652ae6363b8604368e6a8348">More...</a><br/></td></tr>
<tr class="separator:a0a21a0a5652ae6363b8604368e6a8348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5046369fb08bfc624b54e5c460ded394"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a5046369fb08bfc624b54e5c460ded394">Rotate</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Axis, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)=0</td></tr>
<tr class="memdesc:a5046369fb08bfc624b54e5c460ded394"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates the object from it's existing rotation.  <a href="#a5046369fb08bfc624b54e5c460ded394">More...</a><br/></td></tr>
<tr class="separator:a5046369fb08bfc624b54e5c460ded394"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cba0ef5961d4ce897a49c3c70256d6b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a3cba0ef5961d4ce897a49c3c70256d6b">Rotate</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Rotation)=0</td></tr>
<tr class="memdesc:a3cba0ef5961d4ce897a49c3c70256d6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates the object from it's existing rotation.  <a href="#a3cba0ef5961d4ce897a49c3c70256d6b">More...</a><br/></td></tr>
<tr class="separator:a3cba0ef5961d4ce897a49c3c70256d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7d9ba9f40dcd62742bc735fe3b85b1a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#aa7d9ba9f40dcd62742bc735fe3b85b1a">Scale</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Scale)=0</td></tr>
<tr class="memdesc:aa7d9ba9f40dcd62742bc735fe3b85b1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the object from it's current size.  <a href="#aa7d9ba9f40dcd62742bc735fe3b85b1a">More...</a><br/></td></tr>
<tr class="separator:aa7d9ba9f40dcd62742bc735fe3b85b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a066ec50fd49e34794ac15babcba4c1dd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a066ec50fd49e34794ac15babcba4c1dd">Scale</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)=0</td></tr>
<tr class="memdesc:a066ec50fd49e34794ac15babcba4c1dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the object from it's current size.  <a href="#a066ec50fd49e34794ac15babcba4c1dd">More...</a><br/></td></tr>
<tr class="separator:a066ec50fd49e34794ac15babcba4c1dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf629c7c78e9cb6e8841216efe3b3c6e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#aaf629c7c78e9cb6e8841216efe3b3c6e">SetLocation</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Loc)=0</td></tr>
<tr class="memdesc:aaf629c7c78e9cb6e8841216efe3b3c6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location of this object in parent space.  <a href="#aaf629c7c78e9cb6e8841216efe3b3c6e">More...</a><br/></td></tr>
<tr class="separator:aaf629c7c78e9cb6e8841216efe3b3c6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a020a1ff559a7bba073c3fce8ffbe4c77"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a020a1ff559a7bba073c3fce8ffbe4c77">SetLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)=0</td></tr>
<tr class="memdesc:a020a1ff559a7bba073c3fce8ffbe4c77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the location of this object in parent space via Reals.  <a href="#a020a1ff559a7bba073c3fce8ffbe4c77">More...</a><br/></td></tr>
<tr class="separator:a020a1ff559a7bba073c3fce8ffbe4c77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3768666c30f5e094803a81f8f65e969"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#ad3768666c30f5e094803a81f8f65e969">SetOrientation</a> (const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;Ori)=0</td></tr>
<tr class="memdesc:ad3768666c30f5e094803a81f8f65e969"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of this object in parent space.  <a href="#ad3768666c30f5e094803a81f8f65e969">More...</a><br/></td></tr>
<tr class="separator:ad3768666c30f5e094803a81f8f65e969"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82f208f29ffbb576671b884bd6ae7970"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a82f208f29ffbb576671b884bd6ae7970">SetOrientation</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> W)=0</td></tr>
<tr class="memdesc:a82f208f29ffbb576671b884bd6ae7970"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the orientation of this object in parent space via Reals.  <a href="#a82f208f29ffbb576671b884bd6ae7970">More...</a><br/></td></tr>
<tr class="separator:a82f208f29ffbb576671b884bd6ae7970"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa5fe986b55579d48a25a0bf92cc58e5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#aaa5fe986b55579d48a25a0bf92cc58e5">SetScale</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Sc)=0</td></tr>
<tr class="memdesc:aaa5fe986b55579d48a25a0bf92cc58e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scaling to be applied to this object.  <a href="#aaa5fe986b55579d48a25a0bf92cc58e5">More...</a><br/></td></tr>
<tr class="separator:aaa5fe986b55579d48a25a0bf92cc58e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba33e9a778e3d69cb929b8bfec23b13a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#aba33e9a778e3d69cb929b8bfec23b13a">SetScale</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)=0</td></tr>
<tr class="memdesc:aba33e9a778e3d69cb929b8bfec23b13a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scaling to be applied to this object via Reals.  <a href="#aba33e9a778e3d69cb929b8bfec23b13a">More...</a><br/></td></tr>
<tr class="separator:aba33e9a778e3d69cb929b8bfec23b13a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68043198e7086abe12ad2aeaaaebf4bc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#a68043198e7086abe12ad2aeaaaebf4bc">Translate</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Trans)=0</td></tr>
<tr class="memdesc:a68043198e7086abe12ad2aeaaaebf4bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves this object from it's current location.  <a href="#a68043198e7086abe12ad2aeaaaebf4bc">More...</a><br/></td></tr>
<tr class="separator:a68043198e7086abe12ad2aeaaaebf4bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab816d09ad89e6110d48d384e5b946acb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#ab816d09ad89e6110d48d384e5b946acb">Translate</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> X, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Y, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Z)=0</td></tr>
<tr class="memdesc:ab816d09ad89e6110d48d384e5b946acb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves this object from it's current location.  <a href="#ab816d09ad89e6110d48d384e5b946acb">More...</a><br/></td></tr>
<tr class="separator:ab816d09ad89e6110d48d384e5b946acb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af693bf9982ebfb1ed86e60d03963d40b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1TransformableObject.xhtml#af693bf9982ebfb1ed86e60d03963d40b">Yaw</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Angle)=0</td></tr>
<tr class="memdesc:af693bf9982ebfb1ed86e60d03963d40b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotate the object around the Y axis.  <a href="#af693bf9982ebfb1ed86e60d03963d40b">More...</a><br/></td></tr>
<tr class="separator:af693bf9982ebfb1ed86e60d03963d40b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is an interface for all 3D objects that can have their full transforms manipulated. </p>

<p>Definition at line <a class="el" href="transformableobject_8h_source.xhtml#l00053">53</a> of file <a class="el" href="transformableobject_8h_source.xhtml">transformableobject.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a19db95dd2c1d51cae4eff5bc455654f3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::TransformableObject::GetLocation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets this objects current location. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the current rotation of this object in parent space. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ad29760e7413df5fee2d41fb4fb24ed77">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a9c8ee30f0b4373777d43be935b82a967">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="afd0ba2a6c736ee8d0671dc3a5d51f8f1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> Mezzanine::TransformableObject::GetOrientation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets this objects current orientation. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> representing the current orientation of this object in parent space. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ab193e177391f22755a1eb6d07d13ae76">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#acfa40c23c18700f3a915d29aace98798">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a71a88f0e6234ddbeceefec8bbedf8d80"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::TransformableObject::GetScale </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the scaling currently being applied to this object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the amount this object is being scaled. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#aa6c122590516bfabd50b25541ff66bd4">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a57375fc83bde7097435867f7eb4189ef">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a5cc10a74822ab5f6b6bb1b47d3e24420"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Pitch </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Angle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Rotate the object around the X axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Angle</td><td>The angle to rotate this object in radians. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a10626d236aea69bbf784a7746ea522ac">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a34cae3e8a5290eba1c28cc475e5ed922">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a0a21a0a5652ae6363b8604368e6a8348"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Roll </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Angle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Rotate the object around the Z axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Angle</td><td>The angle to rotate this object in radians. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a39c7f8277d5d88bfbc27744874775a18">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a500be6a131f849944fc4e3c541ec9ca7">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a5046369fb08bfc624b54e5c460ded394"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Rotate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Axis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Angle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Rotates the object from it's existing rotation. </p>
<dl class="section note"><dt>Note</dt><dd>This method has an additive effect with the objects current rotation. Unlike "SetOrientation" this method does not replace the existing orientation with what you provide. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Axis</td><td>The axis on which this object will be rotated. </td></tr>
    <tr><td class="paramname">Angle</td><td>The angle to rotate this object in radians. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a34dd4309b0befa01be8ae451022f41ee">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#aacaf90e920f4df3ae493e6635f12b9da">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a3cba0ef5961d4ce897a49c3c70256d6b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Rotate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Rotation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Rotates the object from it's existing rotation. </p>
<dl class="section note"><dt>Note</dt><dd>This method has an additive effect with the objects current rotation. Unlike "SetOrientation" this method does not replace the existing orientation with what you provide. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Rotation</td><td>The rotation to apply to this object. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a7d9f7ea9b9304c1c2076ed86861cf94e">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a119073c976bedb00126f23bb39a73cab">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="aa7d9ba9f40dcd62742bc735fe3b85b1a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Scale </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Scale</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Scales the object from it's current size. </p>
<dl class="section note"><dt>Note</dt><dd>This method has an additive effect with the objects' current scaling. Unlike "SetScale" this method does not replace the existing scale with what you provide. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Scale</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the scaling to apply to this object. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a24ccb983b48163c89dbf311de7594a90">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a869c69504a4f0266e02de46dd1bfe68a">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a066ec50fd49e34794ac15babcba4c1dd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Scale </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Scales the object from it's current size. </p>
<dl class="section note"><dt>Note</dt><dd>This method has an additive effect with the objects' current scaling. Unlike "SetScale" this method does not replace the existing scale with what you provide. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X</td><td>The scaling factor to apply on the X axis. </td></tr>
    <tr><td class="paramname">Y</td><td>The scaling factor to apply on the Y axis. </td></tr>
    <tr><td class="paramname">Z</td><td>The scaling factor to apply on the Z axis. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a611089f99118ae94d73274beb069e30b">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#aa561d305f6b5e25ac8ac9d142736b9fc">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="aaf629c7c78e9cb6e8841216efe3b3c6e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Loc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the location of this object in parent space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the location this object is to be set to. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a2b5bec5b04620f10872ffffaa83e65ef">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a6d9bfdc2c27adbd6fdc2a3bf06182e76">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a020a1ff559a7bba073c3fce8ffbe4c77"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::SetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the location of this object in parent space via Reals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X</td><td>The position on the X axis where this object is to be set. </td></tr>
    <tr><td class="paramname">Y</td><td>The position on the Y axis where this object is to be set. </td></tr>
    <tr><td class="paramname">Z</td><td>The position on the Z axis where this object is to be set. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a1e13699c8ff5465e606726fd9b591733">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a33598960cd9f8a35946b208d7ac821d8">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="ad3768666c30f5e094803a81f8f65e969"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::SetOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Quaternion.xhtml">Quaternion</a> &amp;&#160;</td>
          <td class="paramname"><em>Ori</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the orientation of this object in parent space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Orientation</td><td>A <a class="el" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> representing the rotation this object is to be set to. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a3558fa69d0c863f867e640b27f619c9b">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#ae192e4a88529d7da69b2bc1ca0c46e70">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a82f208f29ffbb576671b884bd6ae7970"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::SetOrientation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Z</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>W</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the orientation of this object in parent space via Reals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X</td><td>The X component of the Axis. </td></tr>
    <tr><td class="paramname">Y</td><td>The Y component of the Axis. </td></tr>
    <tr><td class="paramname">Z</td><td>The Z component of the Axis. </td></tr>
    <tr><td class="paramname">W</td><td>Rotation on the Axis X, Y and Z defined. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a08fbe4267b3b22bd18b4dfc8720f2c45">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#ac7b778dbf9e7ee3dd43712ae9d7bbb33">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="aaa5fe986b55579d48a25a0bf92cc58e5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::SetScale </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Sc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the scaling to be applied to this object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Scale</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the amount of scaling to apply to this object. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#ac31d6912be34499b78b7561ef43bef30">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a07dd319a825b6105348fb02e5d7d752d">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="aba33e9a778e3d69cb929b8bfec23b13a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::SetScale </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the scaling to be applied to this object via Reals. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X</td><td>The scaling factor to apply on the X axis. </td></tr>
    <tr><td class="paramname">Y</td><td>The scaling factor to apply on the Y axis. </td></tr>
    <tr><td class="paramname">Z</td><td>The scaling factor to apply on the Z axis. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a11302d21c6d358b16b5b3e31598563fb">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a7dd61669faab66193ffab114a4a80a86">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="a68043198e7086abe12ad2aeaaaebf4bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Translate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Trans</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Moves this object from it's current location. </p>
<dl class="section note"><dt>Note</dt><dd>This method has an additive effect with the objects current location. Unlike "SetLocation" this method does not replace the existing location with what you provide. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Trans</td><td>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the amount of movement to apply to this object. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a4addbae29f6520856fb9770590408fc5">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#ad95c5c1de8bfd5f36ad91da703b7ded5">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="ab816d09ad89e6110d48d384e5b946acb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Translate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Moves this object from it's current location. </p>
<dl class="section note"><dt>Note</dt><dd>This method has an additive effect with the objects current location. Unlike "SetLocation" this method does not replace the existing location with what you provide. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X</td><td>The amount of movement to apply on the X axis. </td></tr>
    <tr><td class="paramname">Y</td><td>The amount of movement to apply on the Y axis. </td></tr>
    <tr><td class="paramname">Z</td><td>The amount of movement to apply on the Z axis. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a6eb46a4aab40d737d664e01f4b800940">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#a8c4b51c3aafc53cf3cd69889773dfe26">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<a class="anchor" id="af693bf9982ebfb1ed86e60d03963d40b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::TransformableObject::Yaw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Angle</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Rotate the object around the Y axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Angle</td><td>The angle to rotate this object in radians. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Physics_1_1PhysicsProxy.xhtml#a7e337d206712f0d7b9c02bc14f7ed968">Mezzanine::Physics::PhysicsProxy</a>, and <a class="el" href="classMezzanine_1_1WorldProxy.xhtml#abb2e6509d0d5378e8988a201aa5764be">Mezzanine::WorldProxy</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="transformableobject_8h_source.xhtml">transformableobject.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 14 2013 01:00:20 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
