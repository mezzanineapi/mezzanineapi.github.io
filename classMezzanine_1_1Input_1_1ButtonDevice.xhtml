<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Input::ButtonDevice Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September14,2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Input.xhtml">Input</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml">ButtonDevice</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Input_1_1ButtonDevice-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Input::ButtonDevice Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a base class for all input devices with buttons.  
 <a href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="buttondevice_8h_source.xhtml">buttondevice.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Input::ButtonDevice:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Input_1_1ButtonDevice__inherit__graph.svg" width="635" height="214"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Input::ButtonDevice:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Input_1_1ButtonDevice__coll__graph.svg" width="100%" height="474"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acc8cffc0c136b2333e7e508302cfebad"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acc8cffc0c136b2333e7e508302cfebad"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#acc8cffc0c136b2333e7e508302cfebad">ButtonDevice</a> ()</td></tr>
<tr class="memdesc:acc8cffc0c136b2333e7e508302cfebad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:acc8cffc0c136b2333e7e508302cfebad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa584bfe285aff1a386f7650af964799"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aaa584bfe285aff1a386f7650af964799"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#aaa584bfe285aff1a386f7650af964799">~ButtonDevice</a> ()</td></tr>
<tr class="memdesc:aaa584bfe285aff1a386f7650af964799"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:aaa584bfe285aff1a386f7650af964799"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f990e453eb632055ae5cfd3933a083a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a3f990e453eb632055ae5cfd3933a083a">_Update</a> (const MetaCodeContainer &amp;DeltaCodes, MetaCodeContainer &amp;GeneratedCodes)</td></tr>
<tr class="memdesc:a3f990e453eb632055ae5cfd3933a083a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates this device with the newest data.  <a href="#a3f990e453eb632055ae5cfd3933a083a">More...</a><br/></td></tr>
<tr class="separator:a3f990e453eb632055ae5cfd3933a083a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d46c631f1adcdc2671c8cceda1f7244"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a1d46c631f1adcdc2671c8cceda1f7244">CheckButtonState</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button, const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;State) const </td></tr>
<tr class="memdesc:a1d46c631f1adcdc2671c8cceda1f7244"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if a button on this device is a specific state.  <a href="#a1d46c631f1adcdc2671c8cceda1f7244">More...</a><br/></td></tr>
<tr class="separator:a1d46c631f1adcdc2671c8cceda1f7244"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ef711758b1e7241ce96c0cb308af5b8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a2ef711758b1e7241ce96c0cb308af5b8">CheckButtonState</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button, const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;State) const </td></tr>
<tr class="memdesc:a2ef711758b1e7241ce96c0cb308af5b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if a button on this device is a specific state.  <a href="#a2ef711758b1e7241ce96c0cb308af5b8">More...</a><br/></td></tr>
<tr class="separator:a2ef711758b1e7241ce96c0cb308af5b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a025baa0bb5ae0014735711d29ea56519"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a025baa0bb5ae0014735711d29ea56519">GetButtonState</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const =0</td></tr>
<tr class="memdesc:a025baa0bb5ae0014735711d29ea56519"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the state of the requested button.  <a href="#a025baa0bb5ae0014735711d29ea56519">More...</a><br/></td></tr>
<tr class="separator:a025baa0bb5ae0014735711d29ea56519"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a180ff943adb3f5f4d6832ccf6ed1df"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a0a180ff943adb3f5f4d6832ccf6ed1df">GetButtonState</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const =0</td></tr>
<tr class="memdesc:a0a180ff943adb3f5f4d6832ccf6ed1df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the state of the requested button.  <a href="#a0a180ff943adb3f5f4d6832ccf6ed1df">More...</a><br/></td></tr>
<tr class="separator:a0a180ff943adb3f5f4d6832ccf6ed1df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47e10ac6320312b6a06b115c9ea18d19"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a47e10ac6320312b6a06b115c9ea18d19">GetNumButtons</a> () const </td></tr>
<tr class="memdesc:a47e10ac6320312b6a06b115c9ea18d19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of buttons on this device.  <a href="#a47e10ac6320312b6a06b115c9ea18d19">More...</a><br/></td></tr>
<tr class="separator:a47e10ac6320312b6a06b115c9ea18d19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a024a0f95f23eaa0cd60dbdb73b209749"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a024a0f95f23eaa0cd60dbdb73b209749">IsButtonLifting</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a024a0f95f23eaa0cd60dbdb73b209749"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted this frame.  <a href="#a024a0f95f23eaa0cd60dbdb73b209749">More...</a><br/></td></tr>
<tr class="separator:a024a0f95f23eaa0cd60dbdb73b209749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a891c852472323a9cdd309d4ff6707f7c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a891c852472323a9cdd309d4ff6707f7c">IsButtonLifting</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:a891c852472323a9cdd309d4ff6707f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted this frame.  <a href="#a891c852472323a9cdd309d4ff6707f7c">More...</a><br/></td></tr>
<tr class="separator:a891c852472323a9cdd309d4ff6707f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a584491e9252ed75c12ee541fe1f9c4b7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a584491e9252ed75c12ee541fe1f9c4b7">IsButtonPressed</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a584491e9252ed75c12ee541fe1f9c4b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button is pressed down.  <a href="#a584491e9252ed75c12ee541fe1f9c4b7">More...</a><br/></td></tr>
<tr class="separator:a584491e9252ed75c12ee541fe1f9c4b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd2c061657aa55cb97aefa278b75b225"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#afd2c061657aa55cb97aefa278b75b225">IsButtonPressed</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:afd2c061657aa55cb97aefa278b75b225"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button is pressed down.  <a href="#afd2c061657aa55cb97aefa278b75b225">More...</a><br/></td></tr>
<tr class="separator:afd2c061657aa55cb97aefa278b75b225"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c2e2a2032ff0b917956c7cc438fe364"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a2c2e2a2032ff0b917956c7cc438fe364">IsButtonPressing</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a2c2e2a2032ff0b917956c7cc438fe364"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was pressed this frame.  <a href="#a2c2e2a2032ff0b917956c7cc438fe364">More...</a><br/></td></tr>
<tr class="separator:a2c2e2a2032ff0b917956c7cc438fe364"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e4b8488157c166e5b964eb8eeb7f314"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a5e4b8488157c166e5b964eb8eeb7f314">IsButtonPressing</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;Button) const </td></tr>
<tr class="memdesc:a5e4b8488157c166e5b964eb8eeb7f314"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was pressed this frame.  <a href="#a5e4b8488157c166e5b964eb8eeb7f314">More...</a><br/></td></tr>
<tr class="separator:a5e4b8488157c166e5b964eb8eeb7f314"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2db6b7631bca7031d6bfb27325daa7f4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a2db6b7631bca7031d6bfb27325daa7f4">IsButtonTransitioning</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Button) const </td></tr>
<tr class="memdesc:a2db6b7631bca7031d6bfb27325daa7f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted or pressed this frame.  <a href="#a2db6b7631bca7031d6bfb27325daa7f4">More...</a><br/></td></tr>
<tr class="separator:a2db6b7631bca7031d6bfb27325daa7f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f9186d83558ea694e25441bd3e695fc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a1f9186d83558ea694e25441bd3e695fc">IsButtonTransitioning</a> (const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;Button) const </td></tr>
<tr class="memdesc:a1f9186d83558ea694e25441bd3e695fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not a device button was lifted or pressed this frame.  <a href="#a1f9186d83558ea694e25441bd3e695fc">More...</a><br/></td></tr>
<tr class="separator:a1f9186d83558ea694e25441bd3e695fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Input_1_1Device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Input_1_1Device')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml">Mezzanine::Input::Device</a></td></tr>
<tr class="memitem:a9d4723b175746531847007864df7a5d1 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9d4723b175746531847007864df7a5d1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a9d4723b175746531847007864df7a5d1">Device</a> ()</td></tr>
<tr class="memdesc:a9d4723b175746531847007864df7a5d1 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a9d4723b175746531847007864df7a5d1 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af06c5fb7dcd85a5f5e432716beff064f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af06c5fb7dcd85a5f5e432716beff064f"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#af06c5fb7dcd85a5f5e432716beff064f">~Device</a> ()</td></tr>
<tr class="memdesc:af06c5fb7dcd85a5f5e432716beff064f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:af06c5fb7dcd85a5f5e432716beff064f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae68990ee68effdd7c78d217263b6312c inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#ae68990ee68effdd7c78d217263b6312c">AddInputSequence</a> (const MetaCodeContainer &amp;Codes, const <a class="el" href="namespaceMezzanine.xhtml#a590a2f3eb4a187e1b25209e546e540e1">Int32</a> &amp;SequenceID)</td></tr>
<tr class="memdesc:ae68990ee68effdd7c78d217263b6312c inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a custom sequence of inputs that this system will look for and generate <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>'s for when they occur. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">If</td><td>the vector of <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>'s doesn't end with a null <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>, an exception will be thrown. An exception can also be thrown if the ID provided is the max value of an Int32. </td></tr>
  </table>
  </dd>
</dl>
 <a href="#ae68990ee68effdd7c78d217263b6312c">More...</a><br/></td></tr>
<tr class="separator:ae68990ee68effdd7c78d217263b6312c inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27a447c8ff9f333637cc1cf3aac81e7b inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a27a447c8ff9f333637cc1cf3aac81e7b">GetDeviceIndex</a> () const =0</td></tr>
<tr class="memdesc:a27a447c8ff9f333637cc1cf3aac81e7b inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the device index of this controller.  <a href="#a27a447c8ff9f333637cc1cf3aac81e7b">More...</a><br/></td></tr>
<tr class="separator:a27a447c8ff9f333637cc1cf3aac81e7b inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e6e1f3c253ec03933c151b90f45102f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a590a2f3eb4a187e1b25209e546e540e1">Int32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a9e6e1f3c253ec03933c151b90f45102f">GetIDofInputSequence</a> (const MetaCodeContainer &amp;Codes)</td></tr>
<tr class="memdesc:a9e6e1f3c253ec03933c151b90f45102f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the ID of the provided sequence of <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>'s. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">If</td><td>the vector of <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>'s doesn't end with a null <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>, an exception will be thrown. </td></tr>
  </table>
  </dd>
</dl>
 <a href="#a9e6e1f3c253ec03933c151b90f45102f">More...</a><br/></td></tr>
<tr class="separator:a9e6e1f3c253ec03933c151b90f45102f inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a322f65d510b15920cbcb4edc832fcc1b inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a322f65d510b15920cbcb4edc832fcc1b">InputSequenceExists</a> (const MetaCodeContainer &amp;Codes)</td></tr>
<tr class="memdesc:a322f65d510b15920cbcb4edc832fcc1b inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the provided sequence of <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>'s is already being checked for. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">If</td><td>the vector of <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>'s doesn't end with a null <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>, an exception will be thrown. </td></tr>
  </table>
  </dd>
</dl>
 <a href="#a322f65d510b15920cbcb4edc832fcc1b">More...</a><br/></td></tr>
<tr class="separator:a322f65d510b15920cbcb4edc832fcc1b inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9827ced5a7dec7733ecbe244e8d9b2d5 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a9827ced5a7dec7733ecbe244e8d9b2d5">RemoveAllInputSequences</a> ()</td></tr>
<tr class="memdesc:a9827ced5a7dec7733ecbe244e8d9b2d5 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all stored input sequences.  <a href="#a9827ced5a7dec7733ecbe244e8d9b2d5">More...</a><br/></td></tr>
<tr class="separator:a9827ced5a7dec7733ecbe244e8d9b2d5 inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cce4f4782d81789134f79e03ba2932a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a1cce4f4782d81789134f79e03ba2932a">RemoveInputSequence</a> (const MetaCodeContainer &amp;Codes)</td></tr>
<tr class="memdesc:a1cce4f4782d81789134f79e03ba2932a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the specified custom sequence of <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>'s. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">If</td><td>the vector of <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>'s doesn't end with a null <a class="el" href="classMezzanine_1_1Input_1_1MetaCode.xhtml" title="This Determines the kind of user input.">MetaCode</a>, an exception will be thrown. </td></tr>
  </table>
  </dd>
</dl>
 <a href="#a1cce4f4782d81789134f79e03ba2932a">More...</a><br/></td></tr>
<tr class="separator:a1cce4f4782d81789134f79e03ba2932a inherit pub_methods_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a6edbe5baf295cd90b4821eeb6432d38a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a6edbe5baf295cd90b4821eeb6432d38a">AddPressedButtons</a> (MetaCodeContainer &amp;GeneratedCodes) const =0</td></tr>
<tr class="memdesc:a6edbe5baf295cd90b4821eeb6432d38a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds MetaCodes belonging to all the buttons that are currently pressed for this device.  <a href="#a6edbe5baf295cd90b4821eeb6432d38a">More...</a><br/></td></tr>
<tr class="separator:a6edbe5baf295cd90b4821eeb6432d38a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2392dc968c869aef93597738f05f9ec7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a2392dc968c869aef93597738f05f9ec7">UpdateButtonTransitions</a> ()</td></tr>
<tr class="memdesc:a2392dc968c869aef93597738f05f9ec7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates transitioning buttons.  <a href="#a2392dc968c869aef93597738f05f9ec7">More...</a><br/></td></tr>
<tr class="separator:a2392dc968c869aef93597738f05f9ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a04b329ab950bd2128a32ee73109381"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a1a04b329ab950bd2128a32ee73109381">UpdateImpl</a> (const MetaCodeContainer &amp;DeltaCodes, MetaCodeContainer &amp;GeneratedCodes)=0</td></tr>
<tr class="memdesc:a1a04b329ab950bd2128a32ee73109381"><td class="mdescLeft">&#160;</td><td class="mdescRight">Internal implementation of the device update.  <a href="#a1a04b329ab950bd2128a32ee73109381">More...</a><br/></td></tr>
<tr class="separator:a1a04b329ab950bd2128a32ee73109381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49dc210aef387f2bcdd5240b4bb3c3d0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Input_1_1ButtonDevice.xhtml#a49dc210aef387f2bcdd5240b4bb3c3d0">VerifySequenceImpl</a> (const MetaCodeContainer &amp;Sequence) const =0</td></tr>
<tr class="memdesc:a49dc210aef387f2bcdd5240b4bb3c3d0"><td class="mdescLeft">&#160;</td><td class="mdescRight"> <a href="#a49dc210aef387f2bcdd5240b4bb3c3d0">More...</a><br/></td></tr>
<tr class="separator:a49dc210aef387f2bcdd5240b4bb3c3d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a7719a1f2e59e8356385f9515b2c50ef0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7719a1f2e59e8356385f9515b2c50ef0"></a>
std::vector&lt; <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Buttons</b></td></tr>
<tr class="separator:a7719a1f2e59e8356385f9515b2c50ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd85a0e5e1707336053cf58540f357fc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afd85a0e5e1707336053cf58540f357fc"></a>
std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>TransitioningIndexes</b></td></tr>
<tr class="separator:afd85a0e5e1707336053cf58540f357fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1Input_1_1Device"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1Input_1_1Device')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml">Mezzanine::Input::Device</a></td></tr>
<tr class="memitem:aa60e99031787d8405d25a6715b5de331 inherit pro_attribs_classMezzanine_1_1Input_1_1Device"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa60e99031787d8405d25a6715b5de331"></a>
<a class="el" href="classMezzanine_1_1Input_1_1SequenceContainer.xhtml">SequenceContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Sequences</b></td></tr>
<tr class="separator:aa60e99031787d8405d25a6715b5de331 inherit pro_attribs_classMezzanine_1_1Input_1_1Device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is a base class for all input devices with buttons. </p>

<p>Definition at line <a class="el" href="buttondevice_8h_source.xhtml#l00056">56</a> of file <a class="el" href="buttondevice_8h_source.xhtml">buttondevice.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a3f990e453eb632055ae5cfd3933a083a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Input::ButtonDevice::_Update </td>
          <td>(</td>
          <td class="paramtype">const MetaCodeContainer &amp;&#160;</td>
          <td class="paramname"><em>DeltaCodes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MetaCodeContainer &amp;&#160;</td>
          <td class="paramname"><em>GeneratedCodes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates this device with the newest data. </p>

<p>Implements <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a40f8d14fbbeaea74023ad6e2c1b05ebb">Mezzanine::Input::Device</a>.</p>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6edbe5baf295cd90b4821eeb6432d38a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Input::ButtonDevice::AddPressedButtons </td>
          <td>(</td>
          <td class="paramtype">MetaCodeContainer &amp;&#160;</td>
          <td class="paramname"><em>GeneratedCodes</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds MetaCodes belonging to all the buttons that are currently pressed for this device. </p>

<p>Implemented in <a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a17dd8fdebb413938c4e3309518f817c1">Mezzanine::Input::Mouse</a>, <a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a99b0d9493977e4a777344d08a08b7013">Mezzanine::Input::Controller</a>, and <a class="el" href="classMezzanine_1_1Input_1_1Keyboard.xhtml#af77992f6aa0f44c25cfb8770bd3fb5f3">Mezzanine::Input::Keyboard</a>.</p>

</div>
</div>
<a class="anchor" id="a1d46c631f1adcdc2671c8cceda1f7244"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::CheckButtonState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Button</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td>
          <td class="paramname"><em>State</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks to see if a button on this device is a specific state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
    <tr><td class="paramname">State</td><td>The button state to check for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the requested button is the specified state, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00120">120</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2ef711758b1e7241ce96c0cb308af5b8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::CheckButtonState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Button</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td>
          <td class="paramname"><em>State</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks to see if a button on this device is a specific state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
    <tr><td class="paramname">State</td><td>The button state to check for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the requested button is the specified state, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00125">125</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a025baa0bb5ae0014735711d29ea56519"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a>&amp; Mezzanine::Input::ButtonDevice::GetButtonState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the state of the requested button. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function accepts a button number, and as such expects a number from 1 to 20. </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the actual state of the requested button. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#aac65d35498228be7de475a93c01ddeed">Mezzanine::Input::Controller</a>, <a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#aead7d6f78f6ad18cb967cf6d241c4ceb">Mezzanine::Input::Mouse</a>, and <a class="el" href="classMezzanine_1_1Input_1_1Keyboard.xhtml#ace9e34e48d28905a2fb3f136d7f5df87">Mezzanine::Input::Keyboard</a>.</p>

</div>
</div>
<a class="anchor" id="a0a180ff943adb3f5f4d6832ccf6ed1df"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a>&amp; Mezzanine::Input::ButtonDevice::GetButtonState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the state of the requested button. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the actual state of the requested button. </dd></dl>

<p>Implemented in <a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a6749d473a0129055c839e8436fe1aaca">Mezzanine::Input::Controller</a>, <a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#aa4fdb908b10a4ef5404556fe5c2b8e77">Mezzanine::Input::Mouse</a>, and <a class="el" href="classMezzanine_1_1Input_1_1Keyboard.xhtml#a1a9a41965f3e69d96035294f417b5d43">Mezzanine::Input::Keyboard</a>.</p>

</div>
</div>
<a class="anchor" id="a47e10ac6320312b6a06b115c9ea18d19"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Mezzanine::Input::ButtonDevice::GetNumButtons </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of buttons on this device. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt16 representing the number of buttons on this device. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00073">73</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a024a0f95f23eaa0cd60dbdb73b209749"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::IsButtonLifting </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not a device button was lifted this frame. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function accepts a button number. Check the number of buttons on this device to get the acceptable range. 1 is the minimum value. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the specified button is being lifted this frame, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a891c852472323a9cdd309d4ff6707f7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::IsButtonLifting </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not a device button was lifted this frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the specified button is being lifted this frame, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00103">103</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a584491e9252ed75c12ee541fe1f9c4b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::IsButtonPressed </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not a device button is pressed down. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function accepts a button number. Check the number of buttons on this device to get the acceptable range. 1 is the minimum value. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns whether or not the requested button is pressed down. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afd2c061657aa55cb97aefa278b75b225"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::IsButtonPressed </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not a device button is pressed down. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns whether or not the requested button is pressed down. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2c2e2a2032ff0b917956c7cc438fe364"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::IsButtonPressing </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not a device button was pressed this frame. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function accepts a button number. Check the number of buttons on this device to get the acceptable range. 1 is the minimum value. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the specified button is being pressed this frame, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5e4b8488157c166e5b964eb8eeb7f314"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::IsButtonPressing </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#ab722ac9d149cd84c0db5080b46a3721a">Input::InputCode</a> &amp;&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not a device button was pressed this frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the specified button is being pressed this frame, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2db6b7631bca7031d6bfb27325daa7f4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::IsButtonTransitioning </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not a device button was lifted or pressed this frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the requested button is pressing or lifting, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1f9186d83558ea694e25441bd3e695fc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Input::ButtonDevice::IsButtonTransitioning </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61">Input::ButtonState</a> &amp;&#160;</td>
          <td class="paramname"><em>Button</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets whether or not a device button was lifted or pressed this frame. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Button</td><td>The button to check the state of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the requested button is pressing or lifting, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2392dc968c869aef93597738f05f9ec7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Input::ButtonDevice::UpdateButtonTransitions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates transitioning buttons. </p>

<p>Definition at line <a class="el" href="buttondevice_8cpp_source.xhtml#l00057">57</a> of file <a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1a04b329ab950bd2128a32ee73109381"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Input::ButtonDevice::UpdateImpl </td>
          <td>(</td>
          <td class="paramtype">const MetaCodeContainer &amp;&#160;</td>
          <td class="paramname"><em>DeltaCodes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">MetaCodeContainer &amp;&#160;</td>
          <td class="paramname"><em>GeneratedCodes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Internal implementation of the device update. </p>

<p>Implemented in <a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a636b26138143c59b4f73d0f8ffc193f5">Mezzanine::Input::Mouse</a>, <a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#a89788df06499f9902d34972c8fa8fdca">Mezzanine::Input::Controller</a>, and <a class="el" href="classMezzanine_1_1Input_1_1Keyboard.xhtml#a31c9cdd45b90fe60cb5e2361dc575ec2">Mezzanine::Input::Keyboard</a>.</p>

</div>
</div>
<a class="anchor" id="a49dc210aef387f2bcdd5240b4bb3c3d0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Input::ButtonDevice::VerifySequenceImpl </td>
          <td>(</td>
          <td class="paramtype">const MetaCodeContainer &amp;&#160;</td>
          <td class="paramname"><em>Sequence</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p></p>

<p>Implements <a class="el" href="classMezzanine_1_1Input_1_1Device.xhtml#a5d06f761012d69e28b9e9e52aacc1848">Mezzanine::Input::Device</a>.</p>

<p>Implemented in <a class="el" href="classMezzanine_1_1Input_1_1Mouse.xhtml#a6f5db33d75c90c030af7fbe0a2eba626">Mezzanine::Input::Mouse</a>, <a class="el" href="classMezzanine_1_1Input_1_1Controller.xhtml#adcebfd0c3fae46dfbbb0dd22ca2e0ac2">Mezzanine::Input::Controller</a>, and <a class="el" href="classMezzanine_1_1Input_1_1Keyboard.xhtml#a917e24d74fef4058cfdaf9c7f7928b76">Mezzanine::Input::Keyboard</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/Input/<a class="el" href="buttondevice_8h_source.xhtml">buttondevice.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/Input/<a class="el" href="buttondevice_8cpp_source.xhtml">buttondevice.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 14 2013 01:15:22 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
