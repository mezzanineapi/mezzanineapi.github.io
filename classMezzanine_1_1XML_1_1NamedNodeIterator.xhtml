<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::XML::NamedNodeIterator Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;15,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1XML.xhtml">XML</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classMezzanine_1_1XML_1_1NamedNodeIterator-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::XML::NamedNodeIterator Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Child node iterator (a forward iterator over a collection of <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>) only iterates over nodes with a given name.  
 <a href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="nodeiterator_8h_source.xhtml">nodeiterator.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a131c05d0965132f0be4f1fdda2e3c887"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a131c05d0965132f0be4f1fdda2e3c887"></a>
typedef ptrdiff_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a131c05d0965132f0be4f1fdda2e3c887">difference_type</a></td></tr>
<tr class="memdesc:a131c05d0965132f0be4f1fdda2e3c887"><td class="mdescLeft">&#160;</td><td class="mdescRight">An Iterator trait. <br/></td></tr>
<tr class="separator:a131c05d0965132f0be4f1fdda2e3c887"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade7f8d7214969c4ba92eb306f647d2d9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ade7f8d7214969c4ba92eb306f647d2d9"></a>
typedef std::forward_iterator_tag&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#ade7f8d7214969c4ba92eb306f647d2d9">iterator_category</a></td></tr>
<tr class="memdesc:ade7f8d7214969c4ba92eb306f647d2d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">An Iterator trait. <br/></td></tr>
<tr class="separator:ade7f8d7214969c4ba92eb306f647d2d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8da8ca2c0a4072cf26ec9df61f523eaf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8da8ca2c0a4072cf26ec9df61f523eaf"></a>
typedef <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a8da8ca2c0a4072cf26ec9df61f523eaf">pointer</a></td></tr>
<tr class="memdesc:a8da8ca2c0a4072cf26ec9df61f523eaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">An Iterator trait. <br/></td></tr>
<tr class="separator:a8da8ca2c0a4072cf26ec9df61f523eaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc2d5f0cb857b6a758eaa4e5e69d9b4f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abc2d5f0cb857b6a758eaa4e5e69d9b4f"></a>
typedef <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#abc2d5f0cb857b6a758eaa4e5e69d9b4f">reference</a></td></tr>
<tr class="memdesc:abc2d5f0cb857b6a758eaa4e5e69d9b4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">An Iterator trait. <br/></td></tr>
<tr class="separator:abc2d5f0cb857b6a758eaa4e5e69d9b4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a57551bac05596ebe931d9aced96176"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0a57551bac05596ebe931d9aced96176"></a>
typedef <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a0a57551bac05596ebe931d9aced96176">value_type</a></td></tr>
<tr class="memdesc:a0a57551bac05596ebe931d9aced96176"><td class="mdescLeft">&#160;</td><td class="mdescRight">An Iterator trait. <br/></td></tr>
<tr class="separator:a0a57551bac05596ebe931d9aced96176"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2d8878f149d8244365874fde768193d2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2d8878f149d8244365874fde768193d2"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a2d8878f149d8244365874fde768193d2">NamedNodeIterator</a> ()</td></tr>
<tr class="memdesc:a2d8878f149d8244365874fde768193d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. <br/></td></tr>
<tr class="separator:a2d8878f149d8244365874fde768193d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d1965e0068b43aa0802d74cfa3648b0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4d1965e0068b43aa0802d74cfa3648b0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a4d1965e0068b43aa0802d74cfa3648b0">NamedNodeIterator</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node, const <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Name)</td></tr>
<tr class="memdesc:a4d1965e0068b43aa0802d74cfa3648b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct an iterator which points to the specified node. <br/></td></tr>
<tr class="separator:a4d1965e0068b43aa0802d74cfa3648b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a6e50b28b9400ebad5b43b4a9e0d168"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a7a6e50b28b9400ebad5b43b4a9e0d168">operator!=</a> (const <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a> &amp;rhs) const </td></tr>
<tr class="memdesc:a7a6e50b28b9400ebad5b43b4a9e0d168"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> to another <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> for inequality.  <a href="#a7a6e50b28b9400ebad5b43b4a9e0d168">More...</a><br/></td></tr>
<tr class="separator:a7a6e50b28b9400ebad5b43b4a9e0d168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a4dbddef88611c3bc5d917e472139a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a0a4dbddef88611c3bc5d917e472139a8">operator*</a> () const </td></tr>
<tr class="memdesc:a0a4dbddef88611c3bc5d917e472139a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deferences this Iterator.  <a href="#a0a4dbddef88611c3bc5d917e472139a8">More...</a><br/></td></tr>
<tr class="separator:a0a4dbddef88611c3bc5d917e472139a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3faa37d3ea342c8b15a46e22d53bbbf"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#af3faa37d3ea342c8b15a46e22d53bbbf">operator++</a> ()</td></tr>
<tr class="memdesc:af3faa37d3ea342c8b15a46e22d53bbbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increment the iterator to the next member of the container.  <a href="#af3faa37d3ea342c8b15a46e22d53bbbf">More...</a><br/></td></tr>
<tr class="separator:af3faa37d3ea342c8b15a46e22d53bbbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eabb8b8a08f8ddeeb1e911627c29b3b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a5eabb8b8a08f8ddeeb1e911627c29b3b">operator++</a> (int)</td></tr>
<tr class="memdesc:a5eabb8b8a08f8ddeeb1e911627c29b3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increment the iterator to the next member of the container.  <a href="#a5eabb8b8a08f8ddeeb1e911627c29b3b">More...</a><br/></td></tr>
<tr class="separator:a5eabb8b8a08f8ddeeb1e911627c29b3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64689ebb81497e3a9959a5b3a0559806"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#a64689ebb81497e3a9959a5b3a0559806">operator-&gt;</a> () const </td></tr>
<tr class="memdesc:a64689ebb81497e3a9959a5b3a0559806"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pointer the <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> this points to.  <a href="#a64689ebb81497e3a9959a5b3a0559806">More...</a><br/></td></tr>
<tr class="separator:a64689ebb81497e3a9959a5b3a0559806"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad60de448c44750129a11f505c8a7904e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml#ad60de448c44750129a11f505c8a7904e">operator==</a> (const <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a> &amp;rhs) const </td></tr>
<tr class="memdesc:ad60de448c44750129a11f505c8a7904e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> to another <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> for equality.  <a href="#ad60de448c44750129a11f505c8a7904e">More...</a><br/></td></tr>
<tr class="separator:ad60de448c44750129a11f505c8a7904e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Child node iterator (a forward iterator over a collection of <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>) only iterates over nodes with a given name. </p>
<p><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac0ec690c89564f34967b5563fc335ffa" title="Get a Child node iterator that references the first child Node.">Node::begin()</a> and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a73b0f3df319f02e7fe7e2f71cdbef111" title="Get an Attribute iterator that references the first Attribute on this Node.">Node::attributes_begin()</a> return iterators that point to the first node/attribute, respectively; <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aabffeb501cfdd732dc2ce6b1bda6c56f" title="Get a Child node iterator that references one past the last child Node.">Node::end()</a> and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a617646c65216350a24dec35ac6784aa8" title="Get an Attribute iterator that references the one past the last Attribute on this Node...">Node::attributes_end()</a> return past-the-end iterator for node/attribute list, respectively - this iterator can't be dereferenced, but decrementing it results in an iterator pointing to the last element in the list (except for empty lists, where decrementing past-the-end iterator results in undefined behavior). Past-the-end iterator is commonly used as a termination value for iteration loops. If you want to get an iterator that points to an existing handle, you can construct the iterator with the handle as a single constructor argument, like so: xml_node_iterator(node). For xml_attribute_iterator, you'll have to provide both an attribute and its parent node.<br/>
<br/>
 <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#ac0ec690c89564f34967b5563fc335ffa" title="Get a Child node iterator that references the first child Node.">Node::begin()</a> and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#aabffeb501cfdd732dc2ce6b1bda6c56f" title="Get a Child node iterator that references one past the last child Node.">Node::end()</a> return equal iterators if called on null <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>; such iterators can't be dereferenced. <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a73b0f3df319f02e7fe7e2f71cdbef111" title="Get an Attribute iterator that references the first Attribute on this Node.">Node::attributes_begin()</a> and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a617646c65216350a24dec35ac6784aa8" title="Get an Attribute iterator that references the one past the last Attribute on this Node...">Node::attributes_end()</a> behave the same way. For correct iterator usage this means that child node/attribute collections of null nodes appear to be empty.<br/>
<br/>
 Both types of iterators have bidirectional iterator semantics (i.e. they can be incremented and decremented, but efficient random access is not supported) and support all usual iterator operations - comparison, dereference, etc. The iterators are invalidated if the node/attribute objects they're pointing to are removed from the tree; adding nodes/attributes does not invalidate any iterators. </p>

<p>Definition at line <a class="el" href="nodeiterator_8h_source.xhtml#l00159">159</a> of file <a class="el" href="nodeiterator_8h_source.xhtml">nodeiterator.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7a6e50b28b9400ebad5b43b4a9e0d168"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::XML::NamedNodeIterator::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compares this <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> to another <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> for inequality. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td>The Right Hand Side <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>False if the internal data stored in <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> this <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> refers to is the same as the metadata in the other <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a>'s <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, True otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="a0a4dbddef88611c3bc5d917e472139a8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>&amp; Mezzanine::XML::NamedNodeIterator::operator* </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deferences this Iterator. </p>
<dl class="section return"><dt>Returns</dt><dd>a <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> reference to the node pointed at by this <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="af3faa37d3ea342c8b15a46e22d53bbbf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a>&amp; Mezzanine::XML::NamedNodeIterator::operator++ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Increment the iterator to the next member of the container. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a const <a class="el" href="classMezzanine_1_1XML_1_1NodeIterator.xhtml" title="Child node iterator (a bidirectional iterator over a collection of Node)">NodeIterator</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="a5eabb8b8a08f8ddeeb1e911627c29b3b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a> Mezzanine::XML::NamedNodeIterator::operator++ </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Increment the iterator to the next member of the container. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1XML_1_1NodeIterator.xhtml" title="Child node iterator (a bidirectional iterator over a collection of Node)">NodeIterator</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="a64689ebb81497e3a9959a5b3a0559806"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a>* Mezzanine::XML::NamedNodeIterator::operator-&gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the pointer the <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> this points to. </p>
<dl class="section return"><dt>Returns</dt><dd>A pointer to the <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> this <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> references. </dd></dl>

</div>
</div>
<a class="anchor" id="ad60de448c44750129a11f505c8a7904e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::XML::NamedNodeIterator::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml">NamedNodeIterator</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compares this <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> to another <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> for equality. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rhs</td><td>The Right Hand Side <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>False if the internal data stored in <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> this <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a> refers to is the same as the metadata in the other <a class="el" href="classMezzanine_1_1XML_1_1NamedNodeIterator.xhtml" title="Child node iterator (a forward iterator over a collection of Node) only iterates over nodes with a gi...">NamedNodeIterator</a>'s <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a>, True otherwise. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/XML/<a class="el" href="nodeiterator_8h_source.xhtml">nodeiterator.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 15 2013 02:46:45 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
