<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::ActorManager Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September14,2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1ActorManager.xhtml">ActorManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1ActorManager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::ActorManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A manager responsible for the storage and management of all actors that exist in a world.  
 <a href="classMezzanine_1_1ActorManager.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="actormanager_8h_source.xhtml">actormanager.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::ActorManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ActorManager__inherit__graph.svg" width="198" height="195"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::ActorManager:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ActorManager__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a37d7ae09a6bba4189d638abddb435465"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a37d7ae09a6bba4189d638abddb435465"></a>
typedef std::vector&lt; <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a37d7ae09a6bba4189d638abddb435465">ActorContainer</a></td></tr>
<tr class="memdesc:a37d7ae09a6bba4189d638abddb435465"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic container type for <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> storage by this class. <br/></td></tr>
<tr class="separator:a37d7ae09a6bba4189d638abddb435465"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66d6083f76c9a1b7eea231f7c8421f2c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a66d6083f76c9a1b7eea231f7c8421f2c"></a>
typedef ActorContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a66d6083f76c9a1b7eea231f7c8421f2c">ActorIterator</a></td></tr>
<tr class="memdesc:a66d6083f76c9a1b7eea231f7c8421f2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator type for <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> instances stored by this class. <br/></td></tr>
<tr class="separator:a66d6083f76c9a1b7eea231f7c8421f2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a723f57029bb555a068c122522cd4aec4"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a723f57029bb555a068c122522cd4aec4"></a>
typedef <br class="typebreak"/>
ActorContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a723f57029bb555a068c122522cd4aec4">ConstActorIterator</a></td></tr>
<tr class="memdesc:a723f57029bb555a068c122522cd4aec4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const Iterator type for <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> instances stored by this class. <br/></td></tr>
<tr class="separator:a723f57029bb555a068c122522cd4aec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa9074e3c8dd87865e957c4d76fbc5e25"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa9074e3c8dd87865e957c4d76fbc5e25"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#aa9074e3c8dd87865e957c4d76fbc5e25">ActorManager</a> ()</td></tr>
<tr class="memdesc:aa9074e3c8dd87865e957c4d76fbc5e25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:aa9074e3c8dd87865e957c4d76fbc5e25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af01011777296ba4f2768b6d41500923d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#af01011777296ba4f2768b6d41500923d">ActorManager</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode)</td></tr>
<tr class="memdesc:af01011777296ba4f2768b6d41500923d"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor.  <a href="#af01011777296ba4f2768b6d41500923d">More...</a><br/></td></tr>
<tr class="separator:af01011777296ba4f2768b6d41500923d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb09f9f1b4766dd2ca9e645bb505ac2f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="acb09f9f1b4766dd2ca9e645bb505ac2f"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#acb09f9f1b4766dd2ca9e645bb505ac2f">~ActorManager</a> ()</td></tr>
<tr class="memdesc:acb09f9f1b4766dd2ca9e645bb505ac2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:acb09f9f1b4766dd2ca9e645bb505ac2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af801d07590853b3ae0c52574a340ea44"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#af801d07590853b3ae0c52574a340ea44">AddActor</a> (<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *Actor)</td></tr>
<tr class="memdesc:af801d07590853b3ae0c52574a340ea44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a pre-created actor to the manager.  <a href="#af801d07590853b3ae0c52574a340ea44">More...</a><br/></td></tr>
<tr class="separator:af801d07590853b3ae0c52574a340ea44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace44b869832e0780599daa58cc1d344a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#ace44b869832e0780599daa58cc1d344a">Deinitialize</a> ()</td></tr>
<tr class="memdesc:ace44b869832e0780599daa58cc1d344a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes this manager from any necessary configuration so it can be safely disposed of.  <a href="#ace44b869832e0780599daa58cc1d344a">More...</a><br/></td></tr>
<tr class="separator:ace44b869832e0780599daa58cc1d344a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e4daba372199d0d140fd590a4d0f501"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a5e4daba372199d0d140fd590a4d0f501">DestroyActor</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:a5e4daba372199d0d140fd590a4d0f501"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an actor at the specified index.  <a href="#a5e4daba372199d0d140fd590a4d0f501">More...</a><br/></td></tr>
<tr class="separator:a5e4daba372199d0d140fd590a4d0f501"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39d628c0ee0eaa225df741835f1061e7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a39d628c0ee0eaa225df741835f1061e7">DestroyActor</a> (<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:a39d628c0ee0eaa225df741835f1061e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an actor.  <a href="#a39d628c0ee0eaa225df741835f1061e7">More...</a><br/></td></tr>
<tr class="separator:a39d628c0ee0eaa225df741835f1061e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac71886ad26a513d1b53f0e2d6049539c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac71886ad26a513d1b53f0e2d6049539c"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#ac71886ad26a513d1b53f0e2d6049539c">DestroyAllActors</a> ()</td></tr>
<tr class="memdesc:ac71886ad26a513d1b53f0e2d6049539c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all actors currently within this manager. <br/></td></tr>
<tr class="separator:ac71886ad26a513d1b53f0e2d6049539c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf14eea72e9dedc673456bfe78ac26d7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#aaf14eea72e9dedc673456bfe78ac26d7">GetActor</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index) const </td></tr>
<tr class="memdesc:aaf14eea72e9dedc673456bfe78ac26d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an Actor by Index.  <a href="#aaf14eea72e9dedc673456bfe78ac26d7">More...</a><br/></td></tr>
<tr class="separator:aaf14eea72e9dedc673456bfe78ac26d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67b685eb0f23829b7a32bf0d5395df6e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a67b685eb0f23829b7a32bf0d5395df6e">GetActor</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name) const </td></tr>
<tr class="memdesc:a67b685eb0f23829b7a32bf0d5395df6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an Actor by Name.  <a href="#a67b685eb0f23829b7a32bf0d5395df6e">More...</a><br/></td></tr>
<tr class="separator:a67b685eb0f23829b7a32bf0d5395df6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a337d11fb77243f6db59592ffc8f28fe8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ActorUpdateWorkUnit.xhtml">ActorUpdateWorkUnit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a337d11fb77243f6db59592ffc8f28fe8">GetActorUpdateWork</a> ()</td></tr>
<tr class="memdesc:a337d11fb77243f6db59592ffc8f28fe8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the work unit responsible for updating actors stored by this manager.  <a href="#a337d11fb77243f6db59592ffc8f28fe8">More...</a><br/></td></tr>
<tr class="separator:a337d11fb77243f6db59592ffc8f28fe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7af48b21ac3abd5363aec10393b268c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#ab7af48b21ac3abd5363aec10393b268c">GetImplementationTypeName</a> () const </td></tr>
<tr class="memdesc:ab7af48b21ac3abd5363aec10393b268c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Allows any manager name to be sent to a stream. Primarily used for logging.  <a href="#ab7af48b21ac3abd5363aec10393b268c">More...</a><br/></td></tr>
<tr class="separator:ab7af48b21ac3abd5363aec10393b268c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae118a3f023985b35c1da32210c0b4ea2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#ae118a3f023985b35c1da32210c0b4ea2">GetInterfaceType</a> () const </td></tr>
<tr class="memdesc:ae118a3f023985b35c1da32210c0b4ea2"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the type of this manager.  <a href="#ae118a3f023985b35c1da32210c0b4ea2">More...</a><br/></td></tr>
<tr class="separator:ae118a3f023985b35c1da32210c0b4ea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5bee94dfa8c103b2bb9ace4f9ab20fc"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#ab5bee94dfa8c103b2bb9ace4f9ab20fc">GetNumActors</a> () const </td></tr>
<tr class="memdesc:ab5bee94dfa8c103b2bb9ace4f9ab20fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of actors stored in this manager.  <a href="#ab5bee94dfa8c103b2bb9ace4f9ab20fc">More...</a><br/></td></tr>
<tr class="separator:ab5bee94dfa8c103b2bb9ace4f9ab20fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b5b383066473d09243d13ad702c4868"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a3b5b383066473d09243d13ad702c4868">Initialize</a> ()</td></tr>
<tr class="memdesc:a3b5b383066473d09243d13ad702c4868"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures this manager for use prior to entering the main loop.  <a href="#a3b5b383066473d09243d13ad702c4868">More...</a><br/></td></tr>
<tr class="separator:a3b5b383066473d09243d13ad702c4868"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64828a88938ee9d8e88da43e4aea0c1f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a64828a88938ee9d8e88da43e4aea0c1f">Pause</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> PL)</td></tr>
<tr class="memdesc:a64828a88938ee9d8e88da43e4aea0c1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the pause state of this manager, or has no effect depending on the value passed in.  <a href="#a64828a88938ee9d8e88da43e4aea0c1f">More...</a><br/></td></tr>
<tr class="separator:a64828a88938ee9d8e88da43e4aea0c1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac74758ad6d5c03b20105d641f0e37de3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#ac74758ad6d5c03b20105d641f0e37de3">RemoveActor</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index)</td></tr>
<tr class="memdesc:ac74758ad6d5c03b20105d641f0e37de3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes an actor from this manager without destroying it.  <a href="#ac74758ad6d5c03b20105d641f0e37de3">More...</a><br/></td></tr>
<tr class="separator:ac74758ad6d5c03b20105d641f0e37de3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c28bea0eb64822ce94ce38762aedc1e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a5c28bea0eb64822ce94ce38762aedc1e">RemoveActor</a> (<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *ToBeRemoved)</td></tr>
<tr class="memdesc:a5c28bea0eb64822ce94ce38762aedc1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes an actor from this manager without destroying it.  <a href="#a5c28bea0eb64822ce94ce38762aedc1e">More...</a><br/></td></tr>
<tr class="separator:a5c28bea0eb64822ce94ce38762aedc1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ca8342617fa221b0548ff9bc6bf4477"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ca8342617fa221b0548ff9bc6bf4477"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a6ca8342617fa221b0548ff9bc6bf4477">RemoveAllActors</a> ()</td></tr>
<tr class="memdesc:a6ca8342617fa221b0548ff9bc6bf4477"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all actors from this manager without destroying them. <br/></td></tr>
<tr class="separator:a6ca8342617fa221b0548ff9bc6bf4477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1WorldManager"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1WorldManager')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldManager.xhtml">Mezzanine::WorldManager</a></td></tr>
<tr class="memitem:a6320f79153f709a46378e30a728d0d74 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6320f79153f709a46378e30a728d0d74"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a6320f79153f709a46378e30a728d0d74">WorldManager</a> ()</td></tr>
<tr class="memdesc:a6320f79153f709a46378e30a728d0d74 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a6320f79153f709a46378e30a728d0d74 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93a174fb52b61df6c20f37b7a2e215bf inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a93a174fb52b61df6c20f37b7a2e215bf"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a93a174fb52b61df6c20f37b7a2e215bf">~WorldManager</a> ()</td></tr>
<tr class="memdesc:a93a174fb52b61df6c20f37b7a2e215bf inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a93a174fb52b61df6c20f37b7a2e215bf inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a3c9d7719bdfff980ff3d5c1aa4558c inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a8a3c9d7719bdfff980ff3d5c1aa4558c">_SetWorld</a> (<a class="el" href="classMezzanine_1_1World.xhtml">World</a> *Parent)</td></tr>
<tr class="memdesc:a8a3c9d7719bdfff980ff3d5c1aa4558c inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the world this manager belongs to. </p>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">If</td><td>this manager is already initialized, this method will throw an "INVALID_STATE_EXCEPTION". </td></tr>
  </table>
  </dd>
</dl>
 <a href="#a8a3c9d7719bdfff980ff3d5c1aa4558c">More...</a><br/></td></tr>
<tr class="separator:a8a3c9d7719bdfff980ff3d5c1aa4558c inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af566d5c3c88c05c6b149c97b76d8d2b7 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1World.xhtml">World</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#af566d5c3c88c05c6b149c97b76d8d2b7">GetWorld</a> () const </td></tr>
<tr class="memdesc:af566d5c3c88c05c6b149c97b76d8d2b7 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the world this manager belongs to.  <a href="#af566d5c3c88c05c6b149c97b76d8d2b7">More...</a><br/></td></tr>
<tr class="separator:af566d5c3c88c05c6b149c97b76d8d2b7 inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6761538d30323851f493aed70c1528da inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a6761538d30323851f493aed70c1528da">IsPaused</a> () const </td></tr>
<tr class="memdesc:a6761538d30323851f493aed70c1528da inherit pub_methods_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager is currently paused.  <a href="#a6761538d30323851f493aed70c1528da">More...</a><br/></td></tr>
<tr class="separator:a6761538d30323851f493aed70c1528da inherit pub_methods_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee3249f71f330394e81e349370d57a8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6ee3249f71f330394e81e349370d57a8">ManagerBase</a> ()</td></tr>
<tr class="memdesc:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a04cb832dc79f4559cc5b2f57cabfa70d"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a04cb832dc79f4559cc5b2f57cabfa70d">~ManagerBase</a> ()</td></tr>
<tr class="memdesc:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a70b61244d5182ad40dd056b2664a6aa7">GetInterfaceTypeAsString</a> () const </td></tr>
<tr class="memdesc:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a string of the interface type of this manager.  <a href="#a70b61244d5182ad40dd056b2664a6aa7">More...</a><br/></td></tr>
<tr class="separator:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#adc9433deb9026dbbb0b51f35a3a10f02">IsInitialized</a> () const </td></tr>
<tr class="memdesc:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager has been initialized.  <a href="#adc9433deb9026dbbb0b51f35a3a10f02">More...</a><br/></td></tr>
<tr class="separator:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a4bb92762432233f93438f94d36bb724d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4bb92762432233f93438f94d36bb724d"></a>
<a class="el" href="classMezzanine_1_1ActorManager.xhtml#a37d7ae09a6bba4189d638abddb435465">ActorContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a4bb92762432233f93438f94d36bb724d">Actors</a></td></tr>
<tr class="memdesc:a4bb92762432233f93438f94d36bb724d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The actual actor container. <br/></td></tr>
<tr class="separator:a4bb92762432233f93438f94d36bb724d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10706c55cc3dac684432bad7c63300c9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ActorUpdateWorkUnit.xhtml">ActorUpdateWorkUnit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#a10706c55cc3dac684432bad7c63300c9">ActorUpdateWork</a></td></tr>
<tr class="memdesc:a10706c55cc3dac684432bad7c63300c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">The work unit that updates all the actors stored by this manager.  <a href="#a10706c55cc3dac684432bad7c63300c9">More...</a><br/></td></tr>
<tr class="separator:a10706c55cc3dac684432bad7c63300c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7a30e891e6c9762a7a87094869f7b87"><td class="memItemLeft" align="right" valign="top">Threading::DefaultThreadSpecificStorage::Type *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorManager.xhtml#ab7a30e891e6c9762a7a87094869f7b87">ThreadResources</a></td></tr>
<tr class="memdesc:ab7a30e891e6c9762a7a87094869f7b87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be used for thread safe logging and other thread specific resources.  <a href="#ab7a30e891e6c9762a7a87094869f7b87">More...</a><br/></td></tr>
<tr class="separator:ab7a30e891e6c9762a7a87094869f7b87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1WorldManager"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1WorldManager')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1WorldManager.xhtml">Mezzanine::WorldManager</a></td></tr>
<tr class="memitem:a0e6cc195d20c2a7f97e4b17143c3d232 inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a0e6cc195d20c2a7f97e4b17143c3d232">OperationsPaused</a></td></tr>
<tr class="memdesc:a0e6cc195d20c2a7f97e4b17143c3d232 inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">This stores whether or not processing for some or all objects in this manager has been paused.  <a href="#a0e6cc195d20c2a7f97e4b17143c3d232">More...</a><br/></td></tr>
<tr class="separator:a0e6cc195d20c2a7f97e4b17143c3d232 inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ebe6d65692b0c520ffb4cbdcac5a11c inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1World.xhtml">World</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldManager.xhtml#a7ebe6d65692b0c520ffb4cbdcac5a11c">ParentWorld</a></td></tr>
<tr class="memdesc:a7ebe6d65692b0c520ffb4cbdcac5a11c inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="mdescLeft">&#160;</td><td class="mdescRight">A pointer to the world that created this manager.  <a href="#a7ebe6d65692b0c520ffb4cbdcac5a11c">More...</a><br/></td></tr>
<tr class="separator:a7ebe6d65692b0c520ffb4cbdcac5a11c inherit pro_attribs_classMezzanine_1_1WorldManager"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264">Initialized</a></td></tr>
<tr class="memdesc:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple bool indicating whether or not this manager has been initialized.  <a href="#ada3bad0fe77ff2fa7404eea7a5c16264">More...</a><br/></td></tr>
<tr class="separator:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc">TheEntresol</a></td></tr>
<tr class="memdesc:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">The actual pointer to the <a class="el" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a> core class.  <a href="#ae619b4bd732d7345e0ef59ecde6d03cc">More...</a><br/></td></tr>
<tr class="separator:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a628027a7278a4bcae4149c13a5c6093c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a628027a7278a4bcae4149c13a5c6093c"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>ActorUpdateWorkUnit</b></td></tr>
<tr class="separator:a628027a7278a4bcae4149c13a5c6093c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#aa148d67ebe4538adcd74d3f02f7ddc97">GetTypeAsString</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> &amp;<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>)</td></tr>
<tr class="memdesc:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the string form of the type of manager.  <a href="#aa148d67ebe4538adcd74d3f02f7ddc97">More...</a><br/></td></tr>
<tr class="separator:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#acb0c0b9192f8ce94c725d5550e8439f6">GetTypeFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerName)</td></tr>
<tr class="memdesc:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of manager requested from a string.  <a href="#acb0c0b9192f8ce94c725d5550e8439f6">More...</a><br/></td></tr>
<tr class="separator:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A manager responsible for the storage and management of all actors that exist in a world. </p>
<p>More or less Management point for a container of actors to help keep them sorted. </p>

<p>Definition at line <a class="el" href="actormanager_8h_source.xhtml#l00095">95</a> of file <a class="el" href="actormanager_8h_source.xhtml">actormanager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af01011777296ba4f2768b6d41500923d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ActorManager::ActorManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>XMLNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">XMLNode</td><td>The node of the xml document to construct from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000001">Todo:</a></b></dt><dd>This class currently doesn't initialize anything from <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a>, if that changes this constructor needs to be expanded. </dd></dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00088">88</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af801d07590853b3ae0c52574a340ea44"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorManager::AddActor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *&#160;</td>
          <td class="paramname"><em>Actor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a pre-created actor to the manager. </p>
<p>In some cases you may want to add and remove an actor from the world without destroying it and do some special manipulations to it to achieve some special/unique affects. This function along with the "RemoveActor()" function facilitates this. <br/>
 This function is also necessary for anyone inheriting from our actors to add their actors to the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Actor</td><td>The actor to be added to the manager. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ace44b869832e0780599daa58cc1d344a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorManager::Deinitialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes this manager from any necessary configuration so it can be safely disposed of. </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab13bf1e752c3b54c7c392ba9a869fb72">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00221">221</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5e4daba372199d0d140fd590a4d0f501"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorManager::DestroyActor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an actor at the specified index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index at which to destroy the actor. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a39d628c0ee0eaa225df741835f1061e7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorManager::DestroyActor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *&#160;</td>
          <td class="paramname"><em>ToBeDestroyed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an actor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeDestroyed</td><td>The actor to be destroyed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00171">171</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaf14eea72e9dedc673456bfe78ac26d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * Mezzanine::ActorManager::GetActor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an Actor by Index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the actor you wish to retrieve. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the actor at the specified index. </dd></dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a67b685eb0f23829b7a32bf0d5395df6e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> * Mezzanine::ActorManager::GetActor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an Actor by Name. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>The name of the actor you wish to retrieve. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the actor of the specified name. </dd></dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a337d11fb77243f6db59592ffc8f28fe8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ActorUpdateWorkUnit.xhtml">ActorUpdateWorkUnit</a> * Mezzanine::ActorManager::GetActorUpdateWork </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the work unit responsible for updating actors stored by this manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1ActorUpdateWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of actors.">ActorUpdateWorkUnit</a> used by this manager. </dd></dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00232">232</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab7af48b21ac3abd5363aec10393b268c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ActorManager::GetImplementationTypeName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This Allows any manager name to be sent to a stream. Primarily used for logging. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a String that contains the name. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac41d60f674e75d3d16b5544f4feb199c">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00243">243</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae118a3f023985b35c1da32210c0b4ea2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> Mezzanine::ActorManager::GetInterfaceType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the type of this manager. </p>
<p>This is intended to make using and casting from Manager base easier. With this is is possible to cast from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a> to the correct Manager Type. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a ManagerTypeName to identify what this can be safely cast to. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a388aa37ed71b8667785b789c137aa8c6">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00240">240</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab5bee94dfa8c103b2bb9ace4f9ab20fc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::ActorManager::GetNumActors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of actors stored in this manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a whole representing the current actor count. </dd></dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00129">129</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3b5b383066473d09243d13ad702c4868"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorManager::Initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configures this manager for use prior to entering the main loop. </p>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1WorldManager.xhtml#aff20d85e7c60f85b7e9b7bb909262bac">Mezzanine::WorldManager</a>.</p>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00205">205</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a64828a88938ee9d8e88da43e4aea0c1f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorManager::Pause </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>PL</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the pause state of this manager, or has no effect depending on the value passed in. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">PL</td><td>A bitfield describing the pause level being assigned to the parent world of this manager. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classMezzanine_1_1WorldManager.xhtml#aed3eada3b6c854199f0f1ee8a92e8087">Mezzanine::WorldManager</a>.</p>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00200">200</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac74758ad6d5c03b20105d641f0e37de3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorManager::RemoveActor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes an actor from this manager without destroying it. </p>
<p>In some cases you may want to add and remove an actor from the world without destroying it and do some special manipulations to it to achieve some special/unique affects. This function along with the "RemoveActor()" function facilitates this. <br/>
 This function is also necessary for anyone inheriting from our actors to remove their actors from the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index at which to remove the actor. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5c28bea0eb64822ce94ce38762aedc1e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorManager::RemoveActor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *&#160;</td>
          <td class="paramname"><em>ToBeRemoved</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes an actor from this manager without destroying it. </p>
<p>In some cases you may want to add and remove an actor from the world without destroying it and do some special manipulations to it to achieve some special/unique affects. This function along with the "RemoveActor()" function facilitates this. <br/>
 This function is also necessary for anyone inheriting from our actors to remove their actors from the world. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeRemoved</td><td>The actor to be removed from the manager. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actormanager_8cpp_source.xhtml#l00141">141</a> of file <a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a10706c55cc3dac684432bad7c63300c9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ActorUpdateWorkUnit.xhtml">ActorUpdateWorkUnit</a>* Mezzanine::ActorManager::ActorUpdateWork</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The work unit that updates all the actors stored by this manager. </p>

<p>Definition at line <a class="el" href="actormanager_8h_source.xhtml#l00112">112</a> of file <a class="el" href="actormanager_8h_source.xhtml">actormanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab7a30e891e6c9762a7a87094869f7b87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Threading::DefaultThreadSpecificStorage::Type* Mezzanine::ActorManager::ThreadResources</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Can be used for thread safe logging and other thread specific resources. </p>

<p>Definition at line <a class="el" href="actormanager_8h_source.xhtml#l00115">115</a> of file <a class="el" href="actormanager_8h_source.xhtml">actormanager.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="actormanager_8h_source.xhtml">actormanager.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="actormanager_8cpp_source.xhtml">actormanager.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 14 2013 00:19:08 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
