<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/scenemanager.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;18,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">scenemanager.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _scenemanager_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _scenemanager_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;cameramanager.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;scenemanager.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;areaeffectmanager.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="light_8h.xhtml" title="Declaration of Mezzanine::Light.">light.h</a>&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;entity.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;entresol.h&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;plane.h&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="particleeffect_8h.xhtml" title="Contains the declaration of the ParticleEffect class.">particleeffect.h</a>&quot;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;UI/uimanager.h&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &quot;Physics/physicsmanager.h&quot;</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &quot;stringtool.h&quot;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="worldnode_8h.xhtml" title="The declaration of the WorldNode, A class to facilitate navigation in 3d environment.">worldnode.h</a>&quot;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#include &lt;Ogre.h&gt;</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">namespace </span>Internal</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">        /// @brief Stores internal data for the SCeneManager to keep it from cluttering the Header file</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment">        /// @internal</span></div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml">   66</a></span>&#160;<span class="comment"></span>        <span class="keyword">class </span><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml" title="Stores internal data for the SCeneManager to keep it from cluttering the Header file.">SceneManagerData</a></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="keyword">public</span>:</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">            /// @brief A Pointer to the scenemanager this works with</span></div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a545d7883b1cbe8481b2f9101cd5b038b">   72</a></span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>* <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a545d7883b1cbe8481b2f9101cd5b038b" title="A Pointer to the scenemanager this works with.">SM</a>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">            /// @brief The currently active sky, if set to anything other than SkyNone, then the 5 other skycache variable may have meaning</span></div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ad9d1da1a149edf65c7d7373554baed13">   76</a></span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470e" title="Used to help identify which method is used to draw the sky, if any.">SceneManager::SkyMethod</a> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ad9d1da1a149edf65c7d7373554baed13" title="The currently active sky, if set to anything other than SkyNone, then the 5 other skycache variable m...">ActiveSky</a>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="comment">// The SkyCache</span><span class="comment"></span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">            /// @brief The Name of the Material the sky is made of</span></div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3015b8522c446b3e04d328c7ffeb827d">   81</a></span>&#160;<span class="comment"></span>            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3015b8522c446b3e04d328c7ffeb827d" title="The Name of the Material the sky is made of.">SkyMaterialName</a>;<span class="comment"></span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">            /// @brief The orientation of the sky, unless it&#39;s a Skyplane, this this is all 0s</span></div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a78e0ee442d1c86f39cb507b50f9cb729">   84</a></span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a78e0ee442d1c86f39cb507b50f9cb729" title="The orientation of the sky, unless it&#39;s a Skyplane, this this is all 0s.">SkyOrientation</a>;<span class="comment"></span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">            /// @brief The name of the group the sky material is in</span></div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a153489ead1f310889cea8fcc34285050">   87</a></span>&#160;<span class="comment"></span>            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a153489ead1f310889cea8fcc34285050" title="The name of the group the sky material is in.">SkyMaterialGroupName</a>;<span class="comment"></span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">            /// @brief When is the sky drawn, first or per Z-order</span></div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ac238ac1a5c9c69359b76d6a7b7255d05">   90</a></span>&#160;<span class="comment"></span>            <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ac238ac1a5c9c69359b76d6a7b7255d05" title="When is the sky drawn, first or per Z-order.">SkyDrawnFirst</a>;<span class="comment"></span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">            /// @brief Used to describe a skyplane instead of orientation</span></div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#abaddeef072394f84b1375236744c42d5">   93</a></span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Plane.xhtml" title="This is used to represent a flat infinite slice of the game world.">Plane</a> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#abaddeef072394f84b1375236744c42d5" title="Used to describe a skyplane instead of orientation.">SkyThePlane</a>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment">            /// @brief The size</span></div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3890631ceb5b3c10b56821817680d16d">   96</a></span>&#160;<span class="comment"></span>            <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3890631ceb5b3c10b56821817680d16d" title="The size.">ShadowTextureSize</a>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">            /// @brief Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a">  100</a></span>&#160;<span class="comment"></span>            Ogre::SceneManager* <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">            /// @brief Disable the sky ina given scenemanager</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">            /// @param ScenePTR A pointer to the scenmanager.</span></div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ae9020a2de7ad6739ecfaefb7aabe7b31">  105</a></span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ae9020a2de7ad6739ecfaefb7aabe7b31" title="Disable the sky ina given scenemanager.">DisableSky</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>* ScenePTR)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">switch</span>(<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ad9d1da1a149edf65c7d7373554baed13" title="The currently active sky, if set to anything other than SkyNone, then the 5 other skycache variable m...">ActiveSky</a>)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ead62543178728c0bcd4e92d463860e571" title="No Sky rendering at all.">SceneManager::SkyNone</a>:</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ea95a4503b6f35da0286b384931cb484b8" title="A flat plane use to draw the sky.">SceneManager::SkyPlane</a>:</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                        ScenePTR-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ac60ecdd9745803cf7d99af3a87fa6a36" title="Disables the currently active skyplane.">DisableSkyPlane</a>();</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ea4c80b5621b7b8c3decfc687561b8adf4" title="A box using 5 Rectangles to draw the sky.">SceneManager::SkyBox</a>:</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                        ScenePTR-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#afda2cf0379dbfb7ca1f53950c489cdae" title="Disables the currently active skybox.">DisableSkyBox</a>();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470eaa0c0e7a37ae3ab8ff27a9b7012eaf7fe" title="A multifaceted hemispherical dome, the most sophisticated sky background.">SceneManager::SkyDome</a>:</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        ScenePTR-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a505c371bfe64cd5a07cecd6ece4c8ed8" title="Disables the currently active skydome.">DisableSkyDome</a>();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ad9d1da1a149edf65c7d7373554baed13" title="The currently active sky, if set to anything other than SkyNone, then the 5 other skycache variable m...">ActiveSky</a> = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ead62543178728c0bcd4e92d463860e571" title="No Sky rendering at all.">SceneManager::SkyNone</a>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">            /// @brief update the information that is cached about the sky</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a8c2efab122fb1f336ef09d41a0fbe2c6">  126</a></span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a8c2efab122fb1f336ef09d41a0fbe2c6" title="update the information that is cached about the sky">UpdateSkyCache</a>(</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                            <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470e" title="Used to help identify which method is used to draw the sky, if any.">SceneManager::SkyMethod</a> FreshSkyMethod = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ead62543178728c0bcd4e92d463860e571" title="No Sky rendering at all.">SceneManager::SkyNone</a>,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> FreshSkyMaterialName = <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                            <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> FreshSkyOrientation = <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(0,0,0,0),</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> FreshSkyMaterialGroupName = <span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                            <span class="keywordtype">bool</span> FreshSkyDrawnFirst = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                            <a class="code" href="classMezzanine_1_1Plane.xhtml" title="This is used to represent a flat infinite slice of the game world.">Plane</a> FreshSkyThePlane = <a class="code" href="classMezzanine_1_1Plane.xhtml" title="This is used to represent a flat infinite slice of the game world.">Plane</a>(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,0),0)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                        )</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ad9d1da1a149edf65c7d7373554baed13" title="The currently active sky, if set to anything other than SkyNone, then the 5 other skycache variable m...">ActiveSky</a>=FreshSkyMethod;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a78e0ee442d1c86f39cb507b50f9cb729" title="The orientation of the sky, unless it&#39;s a Skyplane, this this is all 0s.">SkyOrientation</a>=FreshSkyOrientation;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3015b8522c446b3e04d328c7ffeb827d" title="The Name of the Material the sky is made of.">SkyMaterialName</a>=FreshSkyMaterialName;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a153489ead1f310889cea8fcc34285050" title="The name of the group the sky material is in.">SkyMaterialGroupName</a>=FreshSkyMaterialGroupName;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ac238ac1a5c9c69359b76d6a7b7255d05" title="When is the sky drawn, first or per Z-order.">SkyDrawnFirst</a>=FreshSkyDrawnFirst;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#abaddeef072394f84b1375236744c42d5" title="Used to describe a skyplane instead of orientation.">SkyThePlane</a>=FreshSkyThePlane;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">            /// @brief Create One of these, the data every scenemanager needs.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">            /// @param _SM A pointer to the scenemanager this with work with in general</span></div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a8194c14e0d16fe693101b167c4b3fb95">  146</a></span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a8194c14e0d16fe693101b167c4b3fb95" title="Create One of these, the data every scenemanager needs.">SceneManagerData</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>* _SM):</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a545d7883b1cbe8481b2f9101cd5b038b" title="A Pointer to the scenemanager this works with.">SM</a>(_SM),</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ad9d1da1a149edf65c7d7373554baed13" title="The currently active sky, if set to anything other than SkyNone, then the 5 other skycache variable m...">ActiveSky</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>::SkyNone),</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>(0),</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ac238ac1a5c9c69359b76d6a7b7255d05" title="When is the sky drawn, first or per Z-order.">SkyDrawnFirst</a>(false),</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a78e0ee442d1c86f39cb507b50f9cb729" title="The orientation of the sky, unless it&#39;s a Skyplane, this this is all 0s.">SkyOrientation</a>(0,0,0,0),</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3015b8522c446b3e04d328c7ffeb827d" title="The Name of the Material the sky is made of.">SkyMaterialName</a>(<span class="stringliteral">&quot;&quot;</span>),</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a153489ead1f310889cea8fcc34285050" title="The name of the group the sky material is in.">SkyMaterialGroupName</a>(<span class="stringliteral">&quot;&quot;</span>),</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#abaddeef072394f84b1375236744c42d5" title="Used to describe a skyplane instead of orientation.">SkyThePlane</a>(<a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(0,0,0),0),</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3890631ceb5b3c10b56821817680d16d" title="The size.">ShadowTextureSize</a>(512)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">            /// @brief Destructor</span></div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a1b4c8c72462b22341f81edd448f4a69e">  163</a></span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a1b4c8c72462b22341f81edd448f4a69e" title="Destructor.">~SceneManagerData</a>()</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                <a class="code" href="classMezzanine_1_1CameraManager.xhtml" title="This is the manager class for all camera functions.">CameraManager</a>* CamMan = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a215716e7246aa2a00430284cc6f84ad6" title="This gets the CameraManager from the manager list.">GetCameraManager</a>();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                <span class="keywordflow">if</span>(CamMan)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                    CamMan-&gt;<a class="code" href="classMezzanine_1_1CameraManager.xhtml#a1e0ef1d314efc126b8149ec713d0a27e" title="Destroys all camera controllers being stored in this manager.">DestroyAllCameraControllers</a>();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                    CamMan-&gt;<a class="code" href="classMezzanine_1_1CameraManager.xhtml#a40bfecffd9373450cfe59484c4537592" title="Destroy&#39;s all stored camera&#39;s.">DestroyAllCameras</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                    CamMan-&gt;<a class="code" href="classMezzanine_1_1CameraManager.xhtml#a3e5bf2576a6f941f8ecef4fe83b5e4b2" title="Used to reference the appropriate scene.">SceneMan</a> = 0;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                Ogre::Root::getSingleton().destroySceneManager(<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            }</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        };</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment"></span>    <span class="comment">// TrackingNodeUpdateWorkUnit Methods</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a9d19ec3d2102e73a58e9aa4cd99ca609">  181</a></span>&#160;    <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a9d19ec3d2102e73a58e9aa4cd99ca609" title="Protected copy constructor. THIS IS NOT ALLOWED.">TrackingNodeUpdateWorkUnit::TrackingNodeUpdateWorkUnit</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of tracking world nodes in the world...">TrackingNodeUpdateWorkUnit</a>&amp; Other)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        {  }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a27ed20b5254573d84942e47f6b8a4deb">  184</a></span>&#160;    <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of tracking world nodes in the world...">TrackingNodeUpdateWorkUnit</a>&amp; <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a27ed20b5254573d84942e47f6b8a4deb" title="Protected assignment operator. THIS IS NOT ALLOWED.">TrackingNodeUpdateWorkUnit::operator=</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of tracking world nodes in the world...">TrackingNodeUpdateWorkUnit</a>&amp; Other)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        { <span class="keywordflow">return</span> *<span class="keyword">this</span>; }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#ab6bb411b848e3dc85303a610df072b4f">  187</a></span>&#160;    <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a9d19ec3d2102e73a58e9aa4cd99ca609" title="Protected copy constructor. THIS IS NOT ALLOWED.">TrackingNodeUpdateWorkUnit::TrackingNodeUpdateWorkUnit</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>* Target) :</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        TargetManager(Target) {  }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a2b5970a1b32e69ec4a681083b1a685dc">  190</a></span>&#160;    <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a2b5970a1b32e69ec4a681083b1a685dc" title="Class destructor.">TrackingNodeUpdateWorkUnit::~TrackingNodeUpdateWorkUnit</a>()</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        {  }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span>    <span class="comment">// Utility</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a881616d9ae6809ff2136f0c539d780b0">  196</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#a881616d9ae6809ff2136f0c539d780b0" title="This does any required update of the Tracking nodes in the world.">TrackingNodeUpdateWorkUnit::DoWork</a>(<a class="code" href="classMezzanine_1_1Threading_1_1ThreadSpecificStorage.xhtml" title="A thread specific collection of double-buffered and algorithm specific resources.">Threading::DefaultThreadSpecificStorage::Type</a>&amp; CurrentThreadStorage)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml#aafe000481f142fd6fda55b62d7ff8752" title="A pointer to the manager this work unit is processing.">TargetManager</a>-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7263baed88ec60edbffdcaa12ccec53f" title="Updates all nodes tracking other objects.">UpdateTrackingNodes</a>();</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment"></span>    <span class="comment">// SceneManager Methods</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#add7232bdd3758cbde34e9cf46d350f68">  204</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#add7232bdd3758cbde34e9cf46d350f68" title="Class Constructor.">SceneManager::SceneManager</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; InternalManagerTypeName) :</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        TrackingNodeUpdateWork(NULL),</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        ThreadResources(NULL)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a> = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml" title="Stores internal data for the SCeneManager to keep it from cluttering the Header file.">Internal::SceneManagerData</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a> = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of tracking world nodes in the world...">TrackingNodeUpdateWorkUnit</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a> = Ogre::Root::getSingleton().createSceneManager(InternalManagerTypeName);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="comment">//this-&gt;SetAmbientLight(ColourValue(0.0,0.0,0.0));</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="comment">//const Ogre::ShadowCameraSetupPtr ShadowCam = Ogre::ShadowCameraSetupPtr(new Ogre::DefaultShadowCameraSetup());</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="comment">//OgreManager-&gt;setShadowCameraSetup(ShadowCam);</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae9b92ffcd16960614a4d8e51cd3711b3">  216</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#add7232bdd3758cbde34e9cf46d350f68" title="Class Constructor.">SceneManager::SceneManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode) :</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        TrackingNodeUpdateWork(NULL),</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        ThreadResources(NULL)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a> = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml" title="Stores internal data for the SCeneManager to keep it from cluttering the Header file.">Internal::SceneManagerData</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a> = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of tracking world nodes in the world...">TrackingNodeUpdateWorkUnit</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">XML::Attribute</a> CurrAttrib;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment">// Get the name of the manager to construct.</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> ManagerName;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> = XMLNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;ManagerType&quot;</span>);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">if</span>(!ManagerType.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a8c770f21644c937e1e5ca1fd9966651b" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            CurrAttrib = ManagerType.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;TypeName&quot;</span>);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                ManagerName = CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>();</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">if</span>(ManagerName.empty())</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            ManagerName = <span class="stringliteral">&quot;Default&quot;</span>;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a> = Ogre::Root::getSingleton().createSceneManager(ManagerName+<span class="stringliteral">&quot;SceneManager&quot;</span>);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="comment">// Setup the shadow configuration</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordtype">bool</span> TextureShadows = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ShadowSettings = XMLNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;ShadowSettings&quot;</span>);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">if</span>(!ShadowSettings.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a8c770f21644c937e1e5ca1fd9966651b" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> TechniqueName;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            CurrAttrib = ShadowSettings.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Technique&quot;</span>);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                TechniqueName = CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>();</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <span class="keywordflow">if</span>( <span class="stringliteral">&quot;StencilModulative&quot;</span> == TechniqueName )</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d" title="Sets the type of shadows to be used when rendering the scene.">SetSceneShadowTechnique</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a616375ae458dbd612ff9745895d7e1f1" title="Stencil shadow technique which renders all shadow volumes as a modulation after all the non-transpare...">SST_Stencil_Modulative</a>);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <span class="stringliteral">&quot;StencilAdditive&quot;</span> == TechniqueName )</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d" title="Sets the type of shadows to be used when rendering the scene.">SetSceneShadowTechnique</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a216c1b4f5e8b891ae9e74abf48790ec8" title="Stencil shadow technique which renders each light as a separate additive pass to the scene...">SST_Stencil_Additive</a>);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <span class="stringliteral">&quot;TextureModulative&quot;</span> == TechniqueName )</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;                    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d" title="Sets the type of shadows to be used when rendering the scene.">SetSceneShadowTechnique</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6acfa2f5f4596184169e9a6495273fe6c7" title="Texture-based shadow technique which involves a monochrome render-to-texture of the shadow caster and...">SST_Texture_Modulative</a>);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <span class="stringliteral">&quot;TextureAdditive&quot;</span> == TechniqueName )</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d" title="Sets the type of shadows to be used when rendering the scene.">SetSceneShadowTechnique</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a966cfba4dd29dd9248c6283ec37e3d8f" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Additive</a>);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <span class="stringliteral">&quot;TextureAdditiveIntegrated&quot;</span> == TechniqueName )</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;                    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d" title="Sets the type of shadows to be used when rendering the scene.">SetSceneShadowTechnique</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6ae673066d535f340debfa4a6210d6b0ce" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Additive_Integrated</a>);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">else</span> <span class="keywordflow">if</span>( <span class="stringliteral">&quot;TextureModulativeIntegrated&quot;</span> == TechniqueName )</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d" title="Sets the type of shadows to be used when rendering the scene.">SetSceneShadowTechnique</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6ab4ff7a97c53ca46f7628541c9e39309c" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Modulative_Integrated</a>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="keywordflow">if</span>(!TechniqueName.empty())</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                <span class="keywordflow">if</span>(String::npos != TechniqueName.find(<span class="stringliteral">&quot;Texture&quot;</span>))</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                    TextureShadows = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                CurrAttrib = ShadowSettings.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;ShadowColour&quot;</span>);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                <span class="keywordflow">if</span>(!CurrAttrib)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8bc4a68f885b85a3a023d632d932de65" title="Sets the colour to be used when casting shadows.">SetShadowColour</a>(<a class="code" href="namespaceMezzanine_1_1StringTools.xhtml#acca9b1a5c5f3a2fa3b5b2532a42dff45" title="Convert four numbers in a string into a ColourValue.">StringTools::ConvertToColourValue</a>(CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#aeaf831643fd53fa7e645bf36b0a8ecec" title="Attempts to convert the value of the attribute to a String and returns the results.">AsString</a>()));</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                CurrAttrib = ShadowSettings.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;ShadowFarDistance&quot;</span>);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                <span class="keywordflow">if</span>(!CurrAttrib)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a79b5c4f2edd3301134a6a2513b4deaa1" title="Sets the maximum distance from the camera that shadows will be visible.">SetShadowFarDistance</a>(CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>());</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            }</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="comment">// Setup texture shadow settings if any are set.</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> TextureShadowSettings = XMLNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;TextureShadowSettings&quot;</span>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">if</span>(!TextureShadowSettings.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a8c770f21644c937e1e5ca1fd9966651b" title="Is this storing anything at all?">Empty</a>() &amp;&amp; TextureShadows)</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            CurrAttrib = TextureShadowSettings.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;ShadowTextureCount&quot;</span>);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a9d959f0128e2aa14aeb9d425cd9631d2" title="Sets the number of textures to be alloted for creating shadows.">SetShadowTextureCount</a>(CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#ae5d2a5afd1559756172c5fbeadd3750b" title="Attempts to convert the value of the attribute to a Whole and returns the results.">AsWhole</a>());</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            CurrAttrib = TextureShadowSettings.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;ShadowTextureSize&quot;</span>);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">if</span>(!CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a9f3ac1beb83562f6b2c155772b87dc05" title="Is this storing anything at all?">Empty</a>())</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a303b871aa1475605d2711239d4d088ac" title="Sets the size of all texture based shadows.">SetShadowTextureSize</a>(static_cast&lt;unsigned short&gt;(CurrAttrib.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#ae5d2a5afd1559756172c5fbeadd3750b" title="Attempts to convert the value of the attribute to a Whole and returns the results.">AsWhole</a>()));</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div>
<div class="line"><a name="l00290"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8becb78de62a9e5c66c213066e7a421b">  290</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8becb78de62a9e5c66c213066e7a421b" title="Class Destructor.">SceneManager::~SceneManager</a>()</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    {</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#adc577e7ed56ea741ed1363f5ae705081" title="Removes this manager from any necessary configuration so it can be safely disposed of...">Deinitialize</a>();</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a>;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a4dbe2f8c34aef587c263dd99a6d65e61" title="Destroys all lights currently in the manager.">DestroyAllLights</a>();</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a4c54c954577f43a57c5164a0fb7e31cc" title="Destroys all particle effects currently in the manager.">DestroyAllParticleEffects</a>();</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#af30ec6d5ad5260dd9eb986305afe9181" title="Destroys all world nodes currently in the manager.">DestroyAllWorldNodes</a>();</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    }</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7263baed88ec60edbffdcaa12ccec53f">  302</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7263baed88ec60edbffdcaa12ccec53f" title="Updates all nodes tracking other objects.">SceneManager::UpdateTrackingNodes</a>()</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="keywordflow">for</span>( std::set&lt;WorldNode*&gt;::iterator it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a19cb85bda03fce0115a62869b5e819a5" title="Container of nodes currently tracking other objects.">TrackingNodes</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a19cb85bda03fce0115a62869b5e819a5" title="Container of nodes currently tracking other objects.">TrackingNodes</a>.end() ; ++it )</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        {</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            (*it)-&gt;_UpdateTracking();</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        }</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment"></span>    <span class="comment">// Shadow Management</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d">  313</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d" title="Sets the type of shadows to be used when rendering the scene.">SceneManager::SetSceneShadowTechnique</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6" title="needs to be documented">SceneShadowTechnique</a> Shadows)</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    {</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        Ogre::ShadowTechnique Type;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">switch</span> (Shadows)</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        {</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a616375ae458dbd612ff9745895d7e1f1" title="Stencil shadow technique which renders all shadow volumes as a modulation after all the non-transpare...">SST_Stencil_Modulative</a>:</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                Type = Ogre::SHADOWTYPE_STENCIL_MODULATIVE;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a216c1b4f5e8b891ae9e74abf48790ec8" title="Stencil shadow technique which renders each light as a separate additive pass to the scene...">SST_Stencil_Additive</a>:</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                Type = Ogre::SHADOWTYPE_STENCIL_ADDITIVE;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6acfa2f5f4596184169e9a6495273fe6c7" title="Texture-based shadow technique which involves a monochrome render-to-texture of the shadow caster and...">SST_Texture_Modulative</a>:</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;                Type = Ogre::SHADOWTYPE_TEXTURE_MODULATIVE;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a966cfba4dd29dd9248c6283ec37e3d8f" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Additive</a>:</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                Type = Ogre::SHADOWTYPE_TEXTURE_ADDITIVE;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6ae673066d535f340debfa4a6210d6b0ce" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Additive_Integrated</a>:</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;                Type = Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6ab4ff7a97c53ca46f7628541c9e39309c" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Modulative_Integrated</a>:</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                Type = Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                Type = Ogre::SHADOWTYPE_NONE;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setShadowTechnique(Type);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    }</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div>
<div class="line"><a name="l00342"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a87b4d1dabaf1acffc55b95609d14817e">  342</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6" title="needs to be documented">SceneManager::SceneShadowTechnique</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a87b4d1dabaf1acffc55b95609d14817e" title="Gets the currently set shadow technique.">SceneManager::GetSceneShadowTechnique</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        Ogre::ShadowTechnique ShadowType = this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getShadowTechnique();</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="keywordflow">switch</span> (ShadowType)</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        {</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="keywordflow">case</span> Ogre::SHADOWTYPE_STENCIL_MODULATIVE:</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a616375ae458dbd612ff9745895d7e1f1" title="Stencil shadow technique which renders all shadow volumes as a modulation after all the non-transpare...">SST_Stencil_Modulative</a>;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keywordflow">case</span> Ogre::SHADOWTYPE_STENCIL_ADDITIVE:</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a216c1b4f5e8b891ae9e74abf48790ec8" title="Stencil shadow technique which renders each light as a separate additive pass to the scene...">SST_Stencil_Additive</a>;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            <span class="keywordflow">case</span> Ogre::SHADOWTYPE_TEXTURE_MODULATIVE:</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6acfa2f5f4596184169e9a6495273fe6c7" title="Texture-based shadow technique which involves a monochrome render-to-texture of the shadow caster and...">SST_Texture_Modulative</a>;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;            <span class="keywordflow">case</span> Ogre::SHADOWTYPE_TEXTURE_ADDITIVE:</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6a966cfba4dd29dd9248c6283ec37e3d8f" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Additive</a>;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="keywordflow">case</span> Ogre::SHADOWTYPE_TEXTURE_ADDITIVE_INTEGRATED:</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6ae673066d535f340debfa4a6210d6b0ce" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Additive_Integrated</a>;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="keywordflow">case</span> Ogre::SHADOWTYPE_TEXTURE_MODULATIVE_INTEGRATED:</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6ab4ff7a97c53ca46f7628541c9e39309c" title="Texture-based shadow technique which involves a render-to-texture of the shadow caster and a projecti...">SST_Texture_Modulative_Integrated</a>;</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6aeedc28307131c43b9ae0bff12c8b1cda" title="No shadows.">SST_None</a>;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    }</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div>
<div class="line"><a name="l00370"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a9d959f0128e2aa14aeb9d425cd9631d2">  370</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a9d959f0128e2aa14aeb9d425cd9631d2" title="Sets the number of textures to be alloted for creating shadows.">SceneManager::SetShadowTextureCount</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Count)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        { this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setShadowTextureCount(Count); }</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div>
<div class="line"><a name="l00373"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa863b17f316b6b29592b4be50136b543">  373</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa863b17f316b6b29592b4be50136b543" title="Gets the currently set number of textures being used to make texture shadows.">SceneManager::GetShadowTextureCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getShadowTextureCount(); }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div>
<div class="line"><a name="l00376"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a303b871aa1475605d2711239d4d088ac">  376</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a303b871aa1475605d2711239d4d088ac" title="Sets the size of all texture based shadows.">SceneManager::SetShadowTextureSize</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> Size)</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    {</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setShadowTextureSize(Size);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3890631ceb5b3c10b56821817680d16d" title="The size.">ShadowTextureSize</a>=Size;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    }</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;</div>
<div class="line"><a name="l00382"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#aece91693b0d176d0c6ec80f3384ee834">  382</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aece91693b0d176d0c6ec80f3384ee834" title="Retrieve the size of textures.">SceneManager::GetShadowTextureSize</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3890631ceb5b3c10b56821817680d16d" title="The size.">ShadowTextureSize</a>; }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a79b5c4f2edd3301134a6a2513b4deaa1">  385</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a79b5c4f2edd3301134a6a2513b4deaa1" title="Sets the maximum distance from the camera that shadows will be visible.">SceneManager::SetShadowFarDistance</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; FarDist)</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        { this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setShadowFarDistance(FarDist); }</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a244de596b02c103c4b2cb2417bd8fdbb">  388</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a244de596b02c103c4b2cb2417bd8fdbb" title="Gets the maximum distance from the camera that shadows will be visible.">SceneManager::GetShadowFarDistance</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getShadowFarDistance(); }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div>
<div class="line"><a name="l00391"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8bc4a68f885b85a3a023d632d932de65">  391</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8bc4a68f885b85a3a023d632d932de65" title="Sets the colour to be used when casting shadows.">SceneManager::SetShadowColour</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>&amp; ShadowColour)</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;        { this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setShadowColour(ShadowColour.<a class="code" href="classMezzanine_1_1ColourValue.xhtml#a7e0b3548fc11cdcbd89fab3ad53faaf1" title="Creates and returns an Ogre ColourValue class with values equal to this one.">GetOgreColourValue</a>()); }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#aeaba5d32f77249821ec4ec85cecb1522">  394</a></span>&#160;    <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aeaba5d32f77249821ec4ec85cecb1522" title="Gets the colour being used when casting shadows.">SceneManager::GetShadowColour</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;        <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> Shadow(this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getShadowColour());</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="keywordflow">return</span> Shadow;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment"></span>    <span class="comment">// Sky Surface Management</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div>
<div class="line"><a name="l00403"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6cea438ed9b13cf613b07e2dd6467c4e">  403</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6cea438ed9b13cf613b07e2dd6467c4e" title="Creates a skyplane for use in making a sky.">SceneManager::CreateSkyPlane</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Plane.xhtml" title="This is used to represent a flat infinite slice of the game world.">Plane</a>&amp; SkyPlane_, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Material, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Scale, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Tiling, <span class="keywordtype">bool</span> DrawFirst, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Bow, <span class="keywordtype">int</span> XSegments, <span class="keywordtype">int</span> YSegments)</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    {</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ae9020a2de7ad6739ecfaefb7aabe7b31" title="Disable the sky ina given scenemanager.">DisableSky</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a8c2efab122fb1f336ef09d41a0fbe2c6" title="update the information that is cached about the sky">UpdateSkyCache</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ea95a4503b6f35da0286b384931cb484b8" title="A flat plane use to draw the sky.">SkyPlane</a>, Material, <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(0,0,0,0), Group, DrawFirst, SkyPlane_);</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setSkyPlane(<span class="keyword">true</span>, SkyPlane_.<a class="code" href="classMezzanine_1_1Plane.xhtml#ad1bc798271d903d1045498f0eb5691a0" title="Gets an Ogre::Plane that contains this Planes information.">GetOgrePlane</a>(), Material, Scale, Tiling, DrawFirst, Bow, XSegments, YSegments, Group);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;</div>
<div class="line"><a name="l00410"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ac60ecdd9745803cf7d99af3a87fa6a36">  410</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ac60ecdd9745803cf7d99af3a87fa6a36" title="Disables the currently active skyplane.">SceneManager::DisableSkyPlane</a>()</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setSkyPlane(<span class="keyword">false</span>, Ogre::Plane(), <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div>
<div class="line"><a name="l00415"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#aaa3c4b8d15aa74c767a21d725de25ec7">  415</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aaa3c4b8d15aa74c767a21d725de25ec7" title="Creates a skybox for use in making a sky.">SceneManager::CreateSkyBox</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Material, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Distance, <span class="keywordtype">bool</span> DrawFirst, <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> Orientation)</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    {</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ae9020a2de7ad6739ecfaefb7aabe7b31" title="Disable the sky ina given scenemanager.">DisableSky</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a8c2efab122fb1f336ef09d41a0fbe2c6" title="update the information that is cached about the sky">UpdateSkyCache</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ea4c80b5621b7b8c3decfc687561b8adf4" title="A box using 5 Rectangles to draw the sky.">SkyBox</a>, Material, Orientation, Group, DrawFirst);</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setSkyBox(<span class="keyword">true</span>, Material, Distance, DrawFirst, Orientation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a152abb6ccfe1c9dfb22218fd54b84863" title="Gets a Ogre quaternion.">GetOgreQuaternion</a>(), Group);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    }</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#afda2cf0379dbfb7ca1f53950c489cdae">  422</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#afda2cf0379dbfb7ca1f53950c489cdae" title="Disables the currently active skybox.">SceneManager::DisableSkyBox</a>()</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    {</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setSkyBox(<span class="keyword">false</span>, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    }</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div>
<div class="line"><a name="l00427"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a5862eefa87c9fcda9fdba7fa69efd6cf">  427</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a5862eefa87c9fcda9fdba7fa69efd6cf" title="Creates a skydome for use in making a sky.">SceneManager::CreateSkyDome</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Material, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Distance, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Curvature, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Tiling, <span class="keywordtype">bool</span> DrawFirst,</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                                    <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> Orientation, <span class="keywordtype">int</span> XSegments, <span class="keywordtype">int</span> YSegments)</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    {</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ae9020a2de7ad6739ecfaefb7aabe7b31" title="Disable the sky ina given scenemanager.">DisableSky</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a8c2efab122fb1f336ef09d41a0fbe2c6" title="update the information that is cached about the sky">UpdateSkyCache</a>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470eaa0c0e7a37ae3ab8ff27a9b7012eaf7fe" title="A multifaceted hemispherical dome, the most sophisticated sky background.">SkyDome</a>, Material, Orientation, Group, DrawFirst);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setSkyDome(<span class="keyword">true</span>, Material, Curvature, Tiling, Distance, DrawFirst, Orientation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a152abb6ccfe1c9dfb22218fd54b84863" title="Gets a Ogre quaternion.">GetOgreQuaternion</a>(), XSegments, YSegments, -1, Group);</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    }</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div>
<div class="line"><a name="l00435"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a505c371bfe64cd5a07cecd6ece4c8ed8">  435</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a505c371bfe64cd5a07cecd6ece4c8ed8" title="Disables the currently active skydome.">SceneManager::DisableSkyDome</a>()</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    {</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setSkyDome(<span class="keyword">false</span>, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    }</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div>
<div class="line"><a name="l00440"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a167309912093d3a2fc438cab5686e2ce">  440</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a167309912093d3a2fc438cab5686e2ce" title="If any sky is active, disable it.">SceneManager::DisableSky</a>()</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ae9020a2de7ad6739ecfaefb7aabe7b31" title="Disable the sky ina given scenemanager.">DisableSky</a>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a8c2efab122fb1f336ef09d41a0fbe2c6" title="update the information that is cached about the sky">UpdateSkyCache</a>();</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    }</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div>
<div class="line"><a name="l00446"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a53459adabe43b627fae6c1cdad5094f6">  446</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470e" title="Used to help identify which method is used to draw the sky, if any.">SceneManager::SkyMethod</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a53459adabe43b627fae6c1cdad5094f6" title="get the kind of sy in use">SceneManager::WhichSky</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ad9d1da1a149edf65c7d7373554baed13" title="The currently active sky, if set to anything other than SkyNone, then the 5 other skycache variable m...">ActiveSky</a>; }</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment"></span>    <span class="comment">// Light Management</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div>
<div class="line"><a name="l00452"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae4b889a919e490edcc3a7d0c32135a82">  452</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae4b889a919e490edcc3a7d0c32135a82" title="Sets the ambient light for the scene.">SceneManager::SetAmbientLight</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Red, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Green, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Blue, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Alpha)</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    {</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setAmbientLight(Ogre::ColourValue(Red, Green, Blue, Alpha));</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    }</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div>
<div class="line"><a name="l00457"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a887c8fb632f4e64b5aec59900ec545aa">  457</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae4b889a919e490edcc3a7d0c32135a82" title="Sets the ambient light for the scene.">SceneManager::SetAmbientLight</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> &amp;LightColor)</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    {</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;setAmbientLight(LightColor.<a class="code" href="classMezzanine_1_1ColourValue.xhtml#a7e0b3548fc11cdcbd89fab3ad53faaf1" title="Creates and returns an Ogre ColourValue class with values equal to this one.">GetOgreColourValue</a>());</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    }</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div>
<div class="line"><a name="l00462"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ab23edaf46108b6cd00e64d4338bfc993">  462</a></span>&#160;    <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ab23edaf46108b6cd00e64d4338bfc993" title="Retrieve the level of the ambient light.">SceneManager::GetAmbientLight</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">ColourValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getAmbientLight());</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    }</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div>
<div class="line"><a name="l00468"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a33a91afe11a91a778d9b0139a06f3d0a">  468</a></span>&#160;    <a class="code" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a33a91afe11a91a778d9b0139a06f3d0a" title="Creates a dynamic light.">SceneManager::CreateLight</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name)</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    {</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        <a class="code" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a>* light = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a>(this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;createLight(Name), <span class="keyword">this</span>);</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.push_back(light);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keywordflow">return</span> light;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    }</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div>
<div class="line"><a name="l00475"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad28337e68dac694721cbb798dedd151f">  475</a></span>&#160;    <a class="code" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad28337e68dac694721cbb798dedd151f" title="Gets an already created light by name.">SceneManager::GetLight</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name)<span class="keyword"> const</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.empty())</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Light*&gt;::const_iterator it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.end() ; it++ )</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        {</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            <span class="keywordflow">if</span>( Name == (*it)-&gt;GetName() )</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;            {</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                <span class="keywordflow">return</span> (*it);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;            }</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        }</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    }</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div>
<div class="line"><a name="l00489"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a38b93841cb86bd2cb9cf4b7431946f8e">  489</a></span>&#160;    <a class="code" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad28337e68dac694721cbb798dedd151f" title="Gets an already created light by name.">SceneManager::GetLight</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>[Index];</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    }</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa1cafdcd750fda2452db42cb3ddf365c">  494</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa1cafdcd750fda2452db42cb3ddf365c" title="Gets the number of lights created and stored in this manager.">SceneManager::GetNumLights</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.size();</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    }</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;</div>
<div class="line"><a name="l00499"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad05338bb291dc8535b8f691378682851">  499</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad05338bb291dc8535b8f691378682851" title="Deletes a light and removes all trace of it from the manager.">SceneManager::DestroyLight</a>(<a class="code" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Light</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    {</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.empty())</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Light*&gt;::iterator it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.end() ; it++ )</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        {</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            <span class="keywordflow">if</span>( ToBeDestroyed == (*it) )</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;            {</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                <span class="keyword">delete</span> (*it);</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.erase(it);</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;            }</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        }</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    }</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div>
<div class="line"><a name="l00514"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a4dbe2f8c34aef587c263dd99a6d65e61">  514</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a4dbe2f8c34aef587c263dd99a6d65e61" title="Destroys all lights currently in the manager.">SceneManager::DestroyAllLights</a>()</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    {</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> X = 0 ; X &lt; <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.size() ; X++ )</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;            <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>[X];</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.clear();</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;</div>
<div class="line"><a name="l00521"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1571d4ee6e74d8f1be76c99281740221">  521</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a70382bc80d3905971a04a77d5c6bcb33" title="Iterator type for Light instances stored by this class.">SceneManager::LightIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1571d4ee6e74d8f1be76c99281740221" title="Get a LightIterator to the first Light*.">SceneManager::BeginLight</a>()</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.begin(); }</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div>
<div class="line"><a name="l00524"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a08baa4f2d539cf1b6d54fce558858081">  524</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a70382bc80d3905971a04a77d5c6bcb33" title="Iterator type for Light instances stored by this class.">SceneManager::LightIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a08baa4f2d539cf1b6d54fce558858081" title="Get a LightIterator to one past the last Light*.">SceneManager::EndLight</a>()</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.end(); }</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div>
<div class="line"><a name="l00527"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a5a50580c0389d0881dc8c1fb787370b2">  527</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a04a257d3df126110aa545e856853a663" title="Const Iterator type for Light instances stored by this class.">SceneManager::ConstLightIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1571d4ee6e74d8f1be76c99281740221" title="Get a LightIterator to the first Light*.">SceneManager::BeginLight</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.begin(); }</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div>
<div class="line"><a name="l00530"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae51e93a3fdf6d996adc9806bb25d8ca6">  530</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a04a257d3df126110aa545e856853a663" title="Const Iterator type for Light instances stored by this class.">SceneManager::ConstLightIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a08baa4f2d539cf1b6d54fce558858081" title="Get a LightIterator to one past the last Light*.">SceneManager::EndLight</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad80ecee7efce608a526befc597b3d613" title="Vector storing all the lights in use by this class.">Lights</a>.end(); }</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment"></span>    <span class="comment">// Particle Effect Management</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div>
<div class="line"><a name="l00536"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7c7e0b3f993c531bcdd9a6dd9135178d">  536</a></span>&#160;    <a class="code" href="classMezzanine_1_1ParticleEffect.xhtml" title="This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions.">ParticleEffect</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7c7e0b3f993c531bcdd9a6dd9135178d" title="Creates a particle effect.">SceneManager::CreateParticleEffect</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Template)</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    {</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        <a class="code" href="classMezzanine_1_1ParticleEffect.xhtml" title="This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions.">ParticleEffect</a>* Particle = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1ParticleEffect.xhtml" title="This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions.">ParticleEffect</a>(Name,Template,<span class="keyword">this</span>);</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.push_back(Particle);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        <span class="keywordflow">return</span> Particle;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    }</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div>
<div class="line"><a name="l00543"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3a6f2b9e9b442fdee17fd4d934d08d85">  543</a></span>&#160;    <a class="code" href="classMezzanine_1_1ParticleEffect.xhtml" title="This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions.">ParticleEffect</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3a6f2b9e9b442fdee17fd4d934d08d85" title="Gets an already created particle effect by name.">SceneManager::GetParticleEffect</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name)<span class="keyword"> const</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.empty())</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8efb7f6a2858d15ad5b038aa78cf43cc" title="Const Iterator type for ParticleEffect instances stored by this class.">SceneManager::ConstParticleIterator</a> it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.end() ; it++ )</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        {</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keywordflow">if</span>( Name == (*it)-&gt;GetName() )</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;            {</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                <span class="keywordflow">return</span> (*it);</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;            }</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        }</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    }</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;</div>
<div class="line"><a name="l00557"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a2e23ffc9c81b105ebf476e81dbcde74d">  557</a></span>&#160;    <a class="code" href="classMezzanine_1_1ParticleEffect.xhtml" title="This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions.">ParticleEffect</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3a6f2b9e9b442fdee17fd4d934d08d85" title="Gets an already created particle effect by name.">SceneManager::GetParticleEffect</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>[Index];</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    }</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div>
<div class="line"><a name="l00562"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a730f48b359f0028d7db491facd95d95d">  562</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a730f48b359f0028d7db491facd95d95d" title="Gets the number of particle effects created and stored in this manager.">SceneManager::GetNumParticleEffects</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.size();</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    }</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;</div>
<div class="line"><a name="l00567"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad91db10c13517ff6a31be64739ca2f27">  567</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad91db10c13517ff6a31be64739ca2f27" title="Deletes a particle effect and removes all trace of it from the manager.">SceneManager::DestroyParticleEffect</a>(<a class="code" href="classMezzanine_1_1ParticleEffect.xhtml" title="This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions.">ParticleEffect</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    {</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.empty())</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa893cc18c91c406b913d72b445019cbd" title="Iterator type for ParticleEffect instances stored by this class.">SceneManager::ParticleIterator</a> it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.end() ; it++ )</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        {</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;            <span class="keywordflow">if</span>( ToBeDestroyed == (*it) )</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            {</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;                <span class="keyword">delete</span> (*it);</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;                <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.erase(it);</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;            }</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        }</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    }</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div>
<div class="line"><a name="l00582"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a4c54c954577f43a57c5164a0fb7e31cc">  582</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a4c54c954577f43a57c5164a0fb7e31cc" title="Destroys all particle effects currently in the manager.">SceneManager::DestroyAllParticleEffects</a>()</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    {</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> X = 0 ; X &lt; <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.size() ; X++ )</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>[X];</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.clear();</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    }</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div>
<div class="line"><a name="l00589"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae14c8c163f1d17eeebf698f7326f1840">  589</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae14c8c163f1d17eeebf698f7326f1840" title="Pauses(or unpauses) all particles stored in this manager.">SceneManager::PauseAllParticles</a>(<span class="keywordtype">bool</span> Pause)</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    {</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa893cc18c91c406b913d72b445019cbd" title="Iterator type for ParticleEffect instances stored by this class.">SceneManager::ParticleIterator</a> it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.end() ; it++ )</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            (*it)-&gt;PauseParticleEffect(Pause);</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    }</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div>
<div class="line"><a name="l00595"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1237cbb73eb1db6a47bee633b0302dd9">  595</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa893cc18c91c406b913d72b445019cbd" title="Iterator type for ParticleEffect instances stored by this class.">SceneManager::ParticleIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1237cbb73eb1db6a47bee633b0302dd9" title="Get a ParticleEffectIterator to the first ParticleEffect*.">SceneManager::BeginParticleEffect</a>()</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.begin(); }</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;</div>
<div class="line"><a name="l00598"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae4819073d0784ae86d5a15cb417f52a6">  598</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa893cc18c91c406b913d72b445019cbd" title="Iterator type for ParticleEffect instances stored by this class.">SceneManager::ParticleIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae4819073d0784ae86d5a15cb417f52a6" title="Get a ParticleEffectIterator to one past the last ParticleEffect*.">SceneManager::EndParticleEffect</a>()</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.end(); }</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;</div>
<div class="line"><a name="l00601"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#adb4b3368794c51247de713bbe0627506">  601</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8efb7f6a2858d15ad5b038aa78cf43cc" title="Const Iterator type for ParticleEffect instances stored by this class.">SceneManager::ConstParticleIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1237cbb73eb1db6a47bee633b0302dd9" title="Get a ParticleEffectIterator to the first ParticleEffect*.">SceneManager::BeginParticleEffect</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.begin(); }</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div>
<div class="line"><a name="l00604"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad537bf5b21dd5ceeaa4d58acd662aca9">  604</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8efb7f6a2858d15ad5b038aa78cf43cc" title="Const Iterator type for ParticleEffect instances stored by this class.">SceneManager::ConstParticleIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae4819073d0784ae86d5a15cb417f52a6" title="Get a ParticleEffectIterator to one past the last ParticleEffect*.">SceneManager::EndParticleEffect</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aacac613a9a842967e1383f5004f76a77" title="Vector storing all the particle effects in use by this class.">Particles</a>.end(); }</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;<span class="comment"></span>    <span class="comment">// Entity Management</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div>
<div class="line"><a name="l00610"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3bb0d7b70e9a01090602c9caa005325a">  610</a></span>&#160;    <a class="code" href="classMezzanine_1_1Entity.xhtml" title="This class is useful for representing graphical bodies without a physics representation.">Entity</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3bb0d7b70e9a01090602c9caa005325a" title="Creates an entity.">SceneManager::CreateEntity</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; EntName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; MeshName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group)</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    {</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <a class="code" href="classMezzanine_1_1Entity.xhtml" title="This class is useful for representing graphical bodies without a physics representation.">Entity</a>* Ent = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1Entity.xhtml" title="This class is useful for representing graphical bodies without a physics representation.">Entity</a>(EntName,MeshName,Group,<span class="keyword">this</span>);</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.push_back(Ent);</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="keywordflow">return</span> Ent;</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    }</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;</div>
<div class="line"><a name="l00617"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7701c34c00ff4de64e81249953178003">  617</a></span>&#160;    <a class="code" href="classMezzanine_1_1Entity.xhtml" title="This class is useful for representing graphical bodies without a physics representation.">Entity</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7701c34c00ff4de64e81249953178003" title="Gets an already created entity by name.">SceneManager::GetEntity</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name)<span class="keyword"> const</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.empty())</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Entity*&gt;::const_iterator it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.end() ; it++ )</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        {</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;            <span class="keywordflow">if</span>( Name == (*it)-&gt;GetName() )</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;            {</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;                <span class="keywordflow">return</span> (*it);</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;            }</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        }</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    }</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div>
<div class="line"><a name="l00631"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a9ac227854187f7c3e6ecd5acd171888d">  631</a></span>&#160;    <a class="code" href="classMezzanine_1_1Entity.xhtml" title="This class is useful for representing graphical bodies without a physics representation.">Entity</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7701c34c00ff4de64e81249953178003" title="Gets an already created entity by name.">SceneManager::GetEntity</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>[Index];</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    }</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;</div>
<div class="line"><a name="l00636"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a409f664d4383b33700cba40f7ab99bbb">  636</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a409f664d4383b33700cba40f7ab99bbb" title="Gets the number of entities created and stored in this manager.">SceneManager::GetNumEntities</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.size();</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    }</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;</div>
<div class="line"><a name="l00641"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a87d26a862306dcf859ff0dee2e8a6834">  641</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a87d26a862306dcf859ff0dee2e8a6834" title="Deletes an entity and removes all trace of it from the manager.">SceneManager::DestroyEntity</a>(<a class="code" href="classMezzanine_1_1Entity.xhtml" title="This class is useful for representing graphical bodies without a physics representation.">Entity</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    {</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.empty())</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;        <span class="keywordflow">for</span>( std::vector&lt;Entity*&gt;::iterator it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.end() ; it++ )</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        {</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            <span class="keywordflow">if</span>( ToBeDestroyed == (*it) )</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;            {</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                <span class="keyword">delete</span> (*it);</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.erase(it);</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            }</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        }</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    }</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div>
<div class="line"><a name="l00656"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7c2637be3ad7af57f2cc194f305e87ff">  656</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7c2637be3ad7af57f2cc194f305e87ff" title="Destroys all entities currently in the manager.">SceneManager::DestroyAllEntities</a>()</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    {</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> X = 0 ; X &lt; <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.size() ; X++ )</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>[X];</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;        <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.clear();</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;    }</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div>
<div class="line"><a name="l00663"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#abc6dd9387dac2ae2aef9502d01d1ec35">  663</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1e2d6cd6454bb900b31762eab8effc8b" title="Iterator type for Entity instances stored by this class.">SceneManager::EntityIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#abc6dd9387dac2ae2aef9502d01d1ec35" title="Get an EntityIterator to the first Entity*.">SceneManager::BeginEntity</a>()</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.begin(); }</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div>
<div class="line"><a name="l00666"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a9e9325351566464d9009d1d6ce299f75">  666</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1e2d6cd6454bb900b31762eab8effc8b" title="Iterator type for Entity instances stored by this class.">SceneManager::EntityIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a9e9325351566464d9009d1d6ce299f75" title="Get a EntityIterator to one past the last Entity*.">SceneManager::EndEntity</a>()</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.end(); }</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div>
<div class="line"><a name="l00669"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a016bbb0dfd8a03e838d13131f298499f">  669</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6837ab4cd75f30af8159f18db973e497" title="Const Iterator type for Entity instances stored by this class.">SceneManager::ConstEntityIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#abc6dd9387dac2ae2aef9502d01d1ec35" title="Get an EntityIterator to the first Entity*.">SceneManager::BeginEntity</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.begin(); }</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;</div>
<div class="line"><a name="l00672"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad7b6c9cc55e92941f51429ec3cb5f5c6">  672</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6837ab4cd75f30af8159f18db973e497" title="Const Iterator type for Entity instances stored by this class.">SceneManager::ConstEntityIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a9e9325351566464d9009d1d6ce299f75" title="Get a EntityIterator to one past the last Entity*.">SceneManager::EndEntity</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#af76f840b982cf140cebe9398b7caedb3" title="Vector storing all the entities in use by this class.">Entities</a>.end(); }</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<span class="comment"></span>    <span class="comment">// WorldNode Management</span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;</div>
<div class="line"><a name="l00678"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a0b10c04c8d89926c8a7a0cf21da5a293">  678</a></span>&#160;    <a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a0b10c04c8d89926c8a7a0cf21da5a293" title="Creates a world node that can be manipulated.">SceneManager::CreateWorldNode</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name)</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    {</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        <a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>* MezzNode = <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>(Name,<span class="keyword">this</span>);</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.push_back(MezzNode);</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        <span class="keywordflow">return</span> MezzNode;</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;    }</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;</div>
<div class="line"><a name="l00685"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a35fb2ab086d5cce5c7554d27e4d5a800">  685</a></span>&#160;    <a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a35fb2ab086d5cce5c7554d27e4d5a800" title="Gets an already created node by name.">SceneManager::GetNode</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name)<span class="keyword"> const</span></div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.empty())</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad60b6e15daa2395944d395b4e307b905" title="Const Iterator type for WorldNode instances stored by this class.">ConstWorldNodeIterator</a> it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.end() ; it++ )</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        {</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            <span class="keywordflow">if</span>( Name == (*it)-&gt;GetName() )</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;            {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                <a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>* node = (*it);</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;                <span class="keywordflow">return</span> node;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;            }</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;        }</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;        <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    }</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;</div>
<div class="line"><a name="l00700"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8bc6cd34431d1059d3e30fa20ec3c94f">  700</a></span>&#160;    <a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a35fb2ab086d5cce5c7554d27e4d5a800" title="Gets an already created node by name.">SceneManager::GetNode</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>[Index];</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    }</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;</div>
<div class="line"><a name="l00705"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae78bda0af2b0f11f32d283d5cf83086f">  705</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae78bda0af2b0f11f32d283d5cf83086f" title="Gets the number of nodes created and stored in this manager.">SceneManager::GetNumNodes</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.size();</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    }</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div>
<div class="line"><a name="l00710"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ab6123477f052d34a357db85a8284c8be">  710</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ab6123477f052d34a357db85a8284c8be" title="Deletes a node and removes all trace of it from the manager.">SceneManager::DestroyNode</a>(<a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    {</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.empty())</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a498b2390acb176a185e1026d23b773f0" title="Iterator type for WorldNode instances stored by this class.">WorldNodeIterator</a> it = <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.begin() ; it != <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.end() ; it++ )</div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        {</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;            <span class="keywordflow">if</span>( ToBeDestroyed == (*it) )</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;            {</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                <span class="keyword">delete</span> (*it);</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.erase(it);</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;            }</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;        }</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    }</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;</div>
<div class="line"><a name="l00725"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#af30ec6d5ad5260dd9eb986305afe9181">  725</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#af30ec6d5ad5260dd9eb986305afe9181" title="Destroys all world nodes currently in the manager.">SceneManager::DestroyAllWorldNodes</a>()</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    {</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> X = 0 ; X &lt; <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.size() ; X++ )</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;            <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>[X];</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.clear();</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    }</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;</div>
<div class="line"><a name="l00732"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6b3844dcb5e3e4df4e50b47fb6158960">  732</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a498b2390acb176a185e1026d23b773f0" title="Iterator type for WorldNode instances stored by this class.">SceneManager::WorldNodeIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6b3844dcb5e3e4df4e50b47fb6158960" title="Get a WorldNodeIterator to the first WorldNode*.">SceneManager::BeginWorldNode</a>()</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.begin(); }</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;</div>
<div class="line"><a name="l00735"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a659a0804a38a84627b3d8bec1021e6e3">  735</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a498b2390acb176a185e1026d23b773f0" title="Iterator type for WorldNode instances stored by this class.">SceneManager::WorldNodeIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a659a0804a38a84627b3d8bec1021e6e3" title="Get a WorldNodeIterator to one past the last WorldNode*.">SceneManager::EndWorldNode</a>()</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.end(); }</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;</div>
<div class="line"><a name="l00738"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a0d374c51309d155a1e49fd033e863111">  738</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad60b6e15daa2395944d395b4e307b905" title="Const Iterator type for WorldNode instances stored by this class.">SceneManager::ConstWorldNodeIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6b3844dcb5e3e4df4e50b47fb6158960" title="Get a WorldNodeIterator to the first WorldNode*.">SceneManager::BeginWorldNode</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.begin(); }</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div>
<div class="line"><a name="l00741"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a603612da0ee539bb489184c2895431d8">  741</a></span>&#160;    <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad60b6e15daa2395944d395b4e307b905" title="Const Iterator type for WorldNode instances stored by this class.">SceneManager::ConstWorldNodeIterator</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a659a0804a38a84627b3d8bec1021e6e3" title="Get a WorldNodeIterator to one past the last WorldNode*.">SceneManager::EndWorldNode</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7550a9ecf7060db5abef99d66c4ef757" title="Vector storing all the nodes in use by this class.">WorldNodes</a>.end(); }</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;</div>
<div class="line"><a name="l00744"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae5db6928dd653974b1d5b9076e9be2e2">  744</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae5db6928dd653974b1d5b9076e9be2e2" title="Informs this manager that a node needs periodic updates for tracking.">SceneManager::_RegisterTrackingNode</a>(<a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>* Tracker)</div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;        { <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a19cb85bda03fce0115a62869b5e819a5" title="Container of nodes currently tracking other objects.">TrackingNodes</a>.insert(Tracker); }</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;</div>
<div class="line"><a name="l00747"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a850cf7390472c3a80aa9b278a8c82268">  747</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a850cf7390472c3a80aa9b278a8c82268" title="Informs this manager a node is no longer tracking another object.">SceneManager::_UnRegisterTrackingNode</a>(<a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">WorldNode</a>* Tracker)</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        { <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a19cb85bda03fce0115a62869b5e819a5" title="Container of nodes currently tracking other objects.">TrackingNodes</a>.erase(<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a19cb85bda03fce0115a62869b5e819a5" title="Container of nodes currently tracking other objects.">TrackingNodes</a>.find(Tracker)); }</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;<span class="comment"></span>    <span class="comment">// Utility</span></div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;</div>
<div class="line"><a name="l00753"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae28b426f75094bad85a2e4c737e2719f">  753</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506" title="A Datatype used to a series of imutable characters.">ConstString</a>&amp; <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae28b426f75094bad85a2e4c737e2719f" title="Gets the name of this manager.">SceneManager::GetName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getName(); }</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;</div>
<div class="line"><a name="l00756"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a050e1021418283893e3dd7aed6caae3f">  756</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a050e1021418283893e3dd7aed6caae3f" title="Sets the pause state of this manager, or has no effect depending on the value passed in...">SceneManager::Pause</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> PL)</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    {</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;        <span class="comment">// Do nothing for now</span></div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    }</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;</div>
<div class="line"><a name="l00761"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8a3b5cb55a06669d0fe64510c1b1a854">  761</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8a3b5cb55a06669d0fe64510c1b1a854" title="Configures this manager for use prior to entering the main loop. ">SceneManager::Initialize</a>()</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    {</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        <span class="keywordflow">if</span>( !this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a> )</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;        {</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;            <span class="comment">//WorldManager::Initialize();</span></div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc" title="The actual pointer to the Entresol core class.">TheEntresol</a>-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a3db6a99a502c6f97e041dd1ae4022626" title="Gets the core structure responsible for scheduling work in the Entresol main loop.">GetScheduler</a>().<a class="code" href="classMezzanine_1_1Threading_1_1FrameScheduler.xhtml#a3096193b64c75e185400a6d011bc0e6a" title="Add a normal Mezzanine::Threading::iWorkUnit to this For fcheduling.">AddWorkUnitMain</a>( this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a>, <span class="stringliteral">&quot;TrackingNodeUpdateWork&quot;</span> );</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml" title="This is simply a place for storing all the Physics Related functions.">Physics::PhysicsManager</a>* PhysicsMan = this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc" title="The actual pointer to the Entresol core class.">TheEntresol</a>-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a855183e9fde6d575aaee94ba1d812b05" title="This gets the PhysicsManager from the manager list.">GetPhysicsManager</a>();</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;            <span class="keywordflow">if</span>( PhysicsMan ) {</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a>-&gt;<a class="code" href="classMezzanine_1_1Threading_1_1DefaultWorkUnit.xhtml#ab8cc25210e6951975b3c5a5b47484785" title="Force this WorkUnit to Start after another has completed.">AddDependency</a>( PhysicsMan-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1PhysicsManager.xhtml#ab5929e06ed5493b8efc8f04c1b9dc7b6" title="Gets a pointer to the work unit that steps the simulation.">GetSimulationWork</a>() );</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;            }</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            <a class="code" href="classMezzanine_1_1AreaEffectManager.xhtml" title="A manager responsible for the storage and management of all areaeffects in use.">Mezzanine::AreaEffectManager</a>* AreaEffectMan = this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc" title="The actual pointer to the Entresol core class.">TheEntresol</a>-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#af2b7d8408950423dec5747ce7ba706ec" title="This gets the AreaEffectManager from the manager list.">GetAreaEffectManager</a>();</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;            <span class="keywordflow">if</span>( AreaEffectMan ) {</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a>-&gt;<a class="code" href="classMezzanine_1_1Threading_1_1DefaultWorkUnit.xhtml#ab8cc25210e6951975b3c5a5b47484785" title="Force this WorkUnit to Start after another has completed.">AddDependency</a>( AreaEffectMan-&gt;<a class="code" href="classMezzanine_1_1AreaEffectManager.xhtml#a42d9affab99f29b6773727c88ac147a3" title="Gets the work unit responsible for updating area effects stored by this manager.">GetAreaEffectUpdateWork</a>() );</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;            }</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a> = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;        }</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    }</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div>
<div class="line"><a name="l00783"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#adc577e7ed56ea741ed1363f5ae705081">  783</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#adc577e7ed56ea741ed1363f5ae705081" title="Removes this manager from any necessary configuration so it can be safely disposed of...">SceneManager::Deinitialize</a>()</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    {</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <span class="keywordflow">if</span>( this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a> )</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        {</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc" title="The actual pointer to the Entresol core class.">TheEntresol</a>-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a3db6a99a502c6f97e041dd1ae4022626" title="Gets the core structure responsible for scheduling work in the Entresol main loop.">GetScheduler</a>().<a class="code" href="classMezzanine_1_1Threading_1_1FrameScheduler.xhtml#a7fb42d2bd67f7545ea54d355df8e4321" title="Remove a WorkUnit from the main pool of WorkUnits (and not from the groups of Affinity or MonpolyWork...">RemoveWorkUnitMain</a>( this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a> );</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a>-&gt;<a class="code" href="classMezzanine_1_1Threading_1_1DefaultWorkUnit.xhtml#ab90e01c1aedde65369c9c3de4eae232c" title="Drop any information about what work units this one depends on.">ClearDependencies</a>();</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264" title="Simple bool indicating whether or not this manager has been initialized.">Initialized</a> = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        }</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    }</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;</div>
<div class="line"><a name="l00794"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ac8bb47a57793eb308c4cfb2deeee2f3f">  794</a></span>&#160;    <a class="code" href="classMezzanine_1_1TrackingNodeUpdateWorkUnit.xhtml" title="This is a Mezzanine::Threading::iWorkUnit for the updating of tracking world nodes in the world...">TrackingNodeUpdateWorkUnit</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ac8bb47a57793eb308c4cfb2deeee2f3f" title="Gets the work unit responsible for updating the tracking nodes in this manager.">SceneManager::GetTrackingNodeUpdateWork</a>()</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        { <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aee59e6f83a2c915fe12715e5abccd8da" title="The work unit that updates the tracking nodes so they are directed at their targets.">TrackingNodeUpdateWork</a>; }</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;<span class="comment"></span>    <span class="comment">// Type Identifier Methods</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;</div>
<div class="line"><a name="l00800"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#ade619016f63ff532be7cc8f736665bfc">  800</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#ade619016f63ff532be7cc8f736665bfc" title="This returns the type of this manager. ">SceneManager::GetInterfaceType</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> ManagerBase::MT_SceneManager; }</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;</div>
<div class="line"><a name="l00803"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#aec34f3aea886f6be93db2ba906716739">  803</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#aec34f3aea886f6be93db2ba906716739" title="This Allows any manager name to be sent to a stream. Primarily used for logging. ">SceneManager::GetImplementationTypeName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultSceneManager&quot;</span>; }</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="comment"></span>    <span class="comment">// Internal/Other</span></div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;</div>
<div class="line"><a name="l00809"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3156d3ec1b514e295368bfa4b94d4adc">  809</a></span>&#160;    Ogre::SceneManager* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a3156d3ec1b514e295368bfa4b94d4adc" title="Gets the internal Ogre Scene Manager pointer.">SceneManager::GetGraphicsWorldPointer</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> (this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a> &amp;&amp; this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>) ? this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a> : 0; }</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div>
<div class="line"><a name="l00812"></a><span class="lineno"><a class="code" href="classMezzanine_1_1SceneManager.xhtml#a96739ec857f3de7623f1f80c82ad9f6e">  812</a></span>&#160;    <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml" title="Stores internal data for the SCeneManager to keep it from cluttering the Header file.">Internal::SceneManagerData</a>* <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a96739ec857f3de7623f1f80c82ad9f6e" title="Gets the raw internal internal data.">SceneManager::GetRawInternalDataPointer</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;<span class="keyword">        </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a979552d4e7d71ab8374b3df5f8c119eb" title="Pointer to a class storing sensative internal data for the scene.">SMD</a>; }</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="comment">    ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;<span class="comment"></span>    <span class="comment">// DefaultSceneManagerFactory Methods</span></div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;</div>
<div class="line"><a name="l00818"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#adba560d13ef26e92ddbc8e5a32c11a8a">  818</a></span>&#160;    <a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#adba560d13ef26e92ddbc8e5a32c11a8a" title="Class constructor.">DefaultSceneManagerFactory::DefaultSceneManagerFactory</a>()</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    {</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    }</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;</div>
<div class="line"><a name="l00822"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#a57bb8de9f3dc1210499baff2c3898f2d">  822</a></span>&#160;    <a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#a57bb8de9f3dc1210499baff2c3898f2d" title="Class destructor.">DefaultSceneManagerFactory::~DefaultSceneManagerFactory</a>()</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    {</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    }</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div>
<div class="line"><a name="l00826"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#aed1347a3ba2c79556af48d4e106fcd0d">  826</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#aed1347a3ba2c79556af48d4e106fcd0d" title="Gets the name of the Manager that is created by this factory. ">DefaultSceneManagerFactory::GetManagerTypeName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;DefaultSceneManager&quot;</span>;</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    }</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div>
<div class="line"><a name="l00831"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#a045c794aa5905ef26fcb8e7bb1457e75">  831</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a>* <a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#a045c794aa5905ef26fcb8e7bb1457e75" title="Creates a manager of the type represented by this factory. ">DefaultSceneManagerFactory::CreateManager</a>(<a class="code" href="namespaceMezzanine.xhtml#ac9f30d4ba179aab9013e0c8fbf55bd28" title="This is a datatype mostly used for describing settings or parameters that can&#39;t be declared in advanc...">NameValuePairList</a>&amp; Params)</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    {</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        <span class="keywordflow">if</span>(Params.empty()) <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>();</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;        {</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> InternalManagerTypeName;</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;            <span class="keywordflow">for</span>( NameValuePairList::iterator ParIt = Params.begin() ; ParIt != Params.end() ; ++ParIt )</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;            {</div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> Lower = (*ParIt).first;</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;                <a class="code" href="namespaceMezzanine_1_1StringTools.xhtml#a2fbec65ef6cb15cdfff7a962153d61cf" title="Converts all upper case characters in a string to their respective lower case.">StringTools::ToLowerCase</a>(Lower);</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;                <span class="keywordflow">if</span>( <span class="stringliteral">&quot;internalmanagertypename&quot;</span> == Lower )</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;                {</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                    InternalManagerTypeName = (*ParIt).second;</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;                }</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;            }</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>(InternalManagerTypeName);</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;        }</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    }</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;</div>
<div class="line"><a name="l00850"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#acf05fe23c2007787714ce4cd7dbe9ab2">  850</a></span>&#160;    <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a>* <a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#a045c794aa5905ef26fcb8e7bb1457e75" title="Creates a manager of the type represented by this factory. ">DefaultSceneManagerFactory::CreateManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode)</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    {</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">SceneManager</a>(XMLNode);</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    }</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;</div>
<div class="line"><a name="l00855"></a><span class="lineno"><a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#a74c0721595a31702aa5a239a70f152c2">  855</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1DefaultSceneManagerFactory.xhtml#a74c0721595a31702aa5a239a70f152c2" title="Destroys a Manager created by this factory. ">DefaultSceneManagerFactory::DestroyManager</a>(<a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    {</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;        <span class="keyword">delete</span> ToBeDestroyed;</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;    }</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;<span class="comment">///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;<span class="comment"></span><span class="comment">// Class External &lt;&lt; Operators for streaming or assignment</span></div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;std::ostream&amp; operator &lt;&lt; (std::ostream&amp; stream, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">Mezzanine::SceneManager</a>&amp; Ev)</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;{</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    stream      &lt;&lt; <span class="stringliteral">&quot;&lt;SceneManager Version=\&quot;1\&quot; Name=\&quot;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae28b426f75094bad85a2e4c737e2719f" title="Gets the name of this manager.">GetName</a>()</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;                <span class="comment">//&lt;&lt; &quot;\&quot; Type=\&quot;&quot; &lt;&lt; Ev.GetType()</span></div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;\&quot; SceneShadowTechnique=\&quot;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a87b4d1dabaf1acffc55b95609d14817e" title="Gets the currently set shadow technique.">GetSceneShadowTechnique</a>()</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;\&quot; ShadowTextureCount=\&quot;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aa863b17f316b6b29592b4be50136b543" title="Gets the currently set number of textures being used to make texture shadows.">GetShadowTextureCount</a>()</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;\&quot; ShadowTextureSize=\&quot;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aece91693b0d176d0c6ec80f3384ee834" title="Retrieve the size of textures.">GetShadowTextureSize</a>()</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;\&quot; ShadowFarDistance=\&quot;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a244de596b02c103c4b2cb2417bd8fdbb" title="Gets the maximum distance from the camera that shadows will be visible.">GetShadowFarDistance</a>()</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;\&quot; SkyMethod=\&quot;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a53459adabe43b627fae6c1cdad5094f6" title="get the kind of sy in use">WhichSky</a>()</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;\&quot;&gt;&quot;</span></div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;&lt;ShadowColour&gt;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aeaba5d32f77249821ec4ec85cecb1522" title="Gets the colour being used when casting shadows.">GetShadowColour</a>() &lt;&lt; <span class="stringliteral">&quot;&lt;/ShadowColour&gt;&quot;</span></div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;&lt;AmbientLight&gt;&quot;</span> &lt;&lt; Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ab23edaf46108b6cd00e64d4338bfc993" title="Retrieve the level of the ambient light.">GetAmbientLight</a>() &lt;&lt; <span class="stringliteral">&quot;&lt;/AmbientLight&gt;&quot;</span>;</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;                <a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml" title="Stores internal data for the SCeneManager to keep it from cluttering the Header file.">Mezzanine::Internal::SceneManagerData</a>* SMD = Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a96739ec857f3de7623f1f80c82ad9f6e" title="Gets the raw internal internal data.">GetRawInternalDataPointer</a>();</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                <span class="keywordflow">switch</span> (Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a53459adabe43b627fae6c1cdad5094f6" title="get the kind of sy in use">WhichSky</a>())</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;                {</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ead62543178728c0bcd4e92d463860e571" title="No Sky rendering at all.">Mezzanine::SceneManager::SkyNone</a>:</div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;                        <span class="comment">// Nothing to do</span></div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ea95a4503b6f35da0286b384931cb484b8" title="A flat plane use to draw the sky.">Mezzanine::SceneManager::SkyPlane</a>:{</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;                        Ogre::SceneManager::SkyPlaneGenParameters Values=SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getSkyPlaneGenParameters();</div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;                        stream  &lt;&lt; <span class="stringliteral">&quot;&lt;SkyPlane Version=\&quot;1&quot;</span></div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; MaterialName=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3015b8522c446b3e04d328c7ffeb827d" title="The Name of the Material the sky is made of.">SkyMaterialName</a></div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; MaterialGroupName=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a153489ead1f310889cea8fcc34285050" title="The name of the group the sky material is in.">SkyMaterialGroupName</a></div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; DrawFirst=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ac238ac1a5c9c69359b76d6a7b7255d05" title="When is the sky drawn, first or per Z-order.">SkyDrawnFirst</a></div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; Scale=\&quot;&quot;</span> &lt;&lt; Values.skyPlaneScale</div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; Tiling=\&quot;&quot;</span> &lt;&lt; Values.skyPlaneTiling</div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; Bow=\&quot;&quot;</span> &lt;&lt; Values.skyPlaneBow</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; XSegments=\&quot;&quot;</span> &lt;&lt; Values.skyPlaneXSegments</div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; YSegments=\&quot;&quot;</span> &lt;&lt; Values.skyPlaneYSegments</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; &gt;&quot;</span></div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;                                &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#abaddeef072394f84b1375236744c42d5" title="Used to describe a skyplane instead of orientation.">SkyThePlane</a></div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;&lt;/SkyPlane&gt;&quot;</span>;</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;                            <span class="comment">//const Plane&amp; SkyPlane_, const String&amp; Material, const String&amp; Group, Real Scale, Real Tiling, bool DrawFirst, Real Bow, int XSegments, int YSegments</span></div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;                        }</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470ea4c80b5621b7b8c3decfc687561b8adf4" title="A box using 5 Rectangles to draw the sky.">Mezzanine::SceneManager::SkyBox</a>:{</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;                        Ogre::SceneManager::SkyBoxGenParameters Values = SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getSkyBoxGenParameters();</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;                        stream  &lt;&lt; <span class="stringliteral">&quot;&lt;SkyBox Version=\&quot;1&quot;</span></div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; MaterialName=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3015b8522c446b3e04d328c7ffeb827d" title="The Name of the Material the sky is made of.">SkyMaterialName</a></div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; MaterialGroupName=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a153489ead1f310889cea8fcc34285050" title="The name of the group the sky material is in.">SkyMaterialGroupName</a></div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; DrawFirst=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ac238ac1a5c9c69359b76d6a7b7255d05" title="When is the sky drawn, first or per Z-order.">SkyDrawnFirst</a></div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; Distance=\&quot;&quot;</span> &lt;&lt; Values.skyBoxDistance</div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; &gt;&quot;</span></div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;&lt;Orientation&gt;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a78e0ee442d1c86f39cb507b50f9cb729" title="The orientation of the sky, unless it&#39;s a Skyplane, this this is all 0s.">SkyOrientation</a> &lt;&lt; <span class="stringliteral">&quot;&lt;/Orientation&gt;&quot;</span></div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;&lt;/SkyBox&gt;&quot;</span>;</div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;                            <span class="comment">//const String&amp; Material, const String&amp; Group, Real Distance, bool DrawFirst=true, Quaternion Orientation=Quaternion()</span></div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;                        }</div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                    <span class="keywordflow">case</span> <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470eaa0c0e7a37ae3ab8ff27a9b7012eaf7fe" title="A multifaceted hemispherical dome, the most sophisticated sky background.">Mezzanine::SceneManager::SkyDome</a>:{</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;                        Ogre::SceneManager::SkyDomeGenParameters Values=SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a71b3a629430a5d3dba63e7340f2d068a" title="Pointer for the Ogre Scenemanager, where this manager gets it&#39;s functionality.">OgreManager</a>-&gt;getSkyDomeGenParameters();</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;                        stream  &lt;&lt; <span class="stringliteral">&quot;&lt;SkyDome Version=\&quot;1&quot;</span></div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; MaterialName=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a3015b8522c446b3e04d328c7ffeb827d" title="The Name of the Material the sky is made of.">SkyMaterialName</a></div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; MaterialGroupName=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a153489ead1f310889cea8fcc34285050" title="The name of the group the sky material is in.">SkyMaterialGroupName</a></div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; DrawFirst=\&quot;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#ac238ac1a5c9c69359b76d6a7b7255d05" title="When is the sky drawn, first or per Z-order.">SkyDrawnFirst</a></div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; Distance=\&quot;&quot;</span> &lt;&lt; Values.skyDomeDistance</div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; Curvature=\&quot;&quot;</span> &lt;&lt; Values.skyDomeCurvature</div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; Tiling=\&quot;&quot;</span> &lt;&lt; Values.skyDomeTiling</div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; XSegments=\&quot;&quot;</span> &lt;&lt; Values.skyDomeXSegments</div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; YSegments=\&quot;&quot;</span> &lt;&lt; Values.skyDomeYSegments</div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; YSegments_keep=\&quot;&quot;</span> &lt;&lt; Values.skyDomeYSegments_keep</div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;\&quot; &gt;&quot;</span></div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;&lt;Orientation&gt;&quot;</span> &lt;&lt; SMD-&gt;<a class="code" href="classMezzanine_1_1Internal_1_1SceneManagerData.xhtml#a78e0ee442d1c86f39cb507b50f9cb729" title="The orientation of the sky, unless it&#39;s a Skyplane, this this is all 0s.">SkyOrientation</a> &lt;&lt; <span class="stringliteral">&quot;&lt;/Orientation&gt;&quot;</span></div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;                                &lt;&lt; <span class="stringliteral">&quot;&lt;/SkyDome&gt;&quot;</span>;</div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;                            <span class="comment">//const String&amp; Material, const String&amp; Group, Real Distance, Real Curvature=10.0, Real Tiling=8.0, bool DrawFirst=true, Quaternion Orientation=Quaternion(), int XSegments=16, int YSegments=16</span></div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;                        }</div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;                }</div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;                <span class="comment">/*  Sky Cache Member - String SkyMaterialName; Quaternion SkyOrientation; String SkyMaterialGroupName; bool SkyDrawnFirst; Plane SkyThePlane; */</span></div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;                <span class="keywordflow">for</span> (<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a04a257d3df126110aa545e856853a663" title="Const Iterator type for Light instances stored by this class.">Mezzanine::SceneManager::ConstLightIterator</a> Iter = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Mezzanine::Entresol::GetSingletonPtr</a>()-&gt;GetSceneManager()-&gt;BeginLight();</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;                        <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Mezzanine::Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a5934c98e4d29964346597baf2c4d01da" title="This gets the SceneManager from the manager list.">GetSceneManager</a>()-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a08baa4f2d539cf1b6d54fce558858081" title="Get a LightIterator to one past the last Light*.">EndLight</a>()!=Iter;</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;                        ++Iter)</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;                    { stream &lt;&lt; **Iter; }</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                <span class="keywordflow">for</span> (<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8efb7f6a2858d15ad5b038aa78cf43cc" title="Const Iterator type for ParticleEffect instances stored by this class.">Mezzanine::SceneManager::ConstParticleIterator</a> Iter = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Mezzanine::Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a5934c98e4d29964346597baf2c4d01da" title="This gets the SceneManager from the manager list.">GetSceneManager</a>()-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a1237cbb73eb1db6a47bee633b0302dd9" title="Get a ParticleEffectIterator to the first ParticleEffect*.">BeginParticleEffect</a>();</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                        <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Mezzanine::Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a5934c98e4d29964346597baf2c4d01da" title="This gets the SceneManager from the manager list.">GetSceneManager</a>()-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae4819073d0784ae86d5a15cb417f52a6" title="Get a ParticleEffectIterator to one past the last ParticleEffect*.">EndParticleEffect</a>()!=Iter;</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                        ++Iter)</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                    { stream &lt;&lt; **Iter; }</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;                <span class="keywordflow">for</span> (<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ad60b6e15daa2395944d395b4e307b905" title="Const Iterator type for WorldNode instances stored by this class.">Mezzanine::SceneManager::ConstWorldNodeIterator</a> Iter = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Mezzanine::Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a5934c98e4d29964346597baf2c4d01da" title="This gets the SceneManager from the manager list.">GetSceneManager</a>()-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6b3844dcb5e3e4df4e50b47fb6158960" title="Get a WorldNodeIterator to the first WorldNode*.">BeginWorldNode</a>();</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;                        <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Mezzanine::Entresol::GetSingletonPtr</a>()-&gt;<a class="code" href="classMezzanine_1_1Entresol.xhtml#a5934c98e4d29964346597baf2c4d01da" title="This gets the SceneManager from the manager list.">GetSceneManager</a>()-&gt;<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a659a0804a38a84627b3d8bec1021e6e3" title="Get a WorldNodeIterator to one past the last WorldNode*.">EndWorldNode</a>()!=Iter;</div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;                        ++Iter)</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;                    { stream &lt;&lt; **Iter; }</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    stream      &lt;&lt; <span class="stringliteral">&quot;&lt;/SceneManager&gt;&quot;</span>;</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;</div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;<span class="comment">// --name</span></div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;<span class="comment">// --shadow type</span></div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;<span class="comment">// --shadow Texture count</span></div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;<span class="comment">// --shadpw texture size</span></div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;<span class="comment">// --shadow distance</span></div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;<span class="comment">// --shadow colour</span></div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;<span class="comment">// --Sky</span></div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;<span class="comment">// --     Disable</span></div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;<span class="comment">// --     Plane&amp; SkyPlane, String&amp; Material, String&amp; Group, Real Scale=1000.0, Real Tiling=10.0, bool DrawFirst=true, Real Bow=0, int XSegments=1, int YSegments=1</span></div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;<span class="comment">// --     SkyBox(String&amp; Material, String&amp; Group, Real Distance, bool DrawFirst=true, Quaternion Orientation=Quaternion());</span></div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;<span class="comment">// --     SkyDome(String&amp; Material, String&amp; Group, Real Distance, Real Curvature=10.0, Real Tiling=8.0, bool DrawFirst=true, Quaternion Orientation=Quaternion(), int XSegments=16, int YSegments=16);</span></div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;<span class="comment">// -- Ambient light</span></div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;<span class="comment">// -- iterate over</span></div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;<span class="comment">// --     lights</span></div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;<span class="comment">// --     particles</span></div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;<span class="comment">// --     Worldnodes</span></div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;</div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;    <span class="keywordflow">return</span> stream;</div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;}</div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;std::istream&amp; <a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> operator &gt;&gt; (std::istream&amp; stream, <a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">Mezzanine::SceneManager</a>&amp; Ev)</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;{</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> OneTag( <a class="code" href="namespaceMezzanine_1_1XML.xhtml#a230007eaf534ce57ad58f440a7a89b6c" title="Gets the first tag out of the Stream and returns it as a String.">Mezzanine::XML::GetOneTag</a>(stream) );</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;    <a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Mezzanine::CountedPtr&lt;Mezzanine::XML::Document&gt;</a> Doc( <a class="code" href="namespaceMezzanine_1_1XML.xhtml#ac7626fd39b806cbb7b34ff375b341ee5" title="Perform a basic series of checks for extracting meaning from a single xml tag.">Mezzanine::XML::PreParseClassFromSingleTag</a>(<span class="stringliteral">&quot;Mezzanine::&quot;</span>, <span class="stringliteral">&quot;SceneManager&quot;</span>, OneTag) );</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;    Doc-&gt;GetFirstChild() &gt;&gt; Ev;</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;</div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;    <span class="keywordflow">return</span> stream;</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;}</div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;</div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Mezzanine::XML::Node</a>&amp; operator &gt;&gt; (<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Mezzanine::XML::Node</a>&amp; OneNode, <a class="code" href="classMezzanine_1_1SceneManager.xhtml" title="This class contains utilities and functions to allow the manipulation of the Graphical scene...">Mezzanine::SceneManager</a>&amp; Ev)</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;{</div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>())==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;SceneManager&quot;</span>) )</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;    {</div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        <span class="keywordflow">if</span>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Version&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>() == 1)</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;        {</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;            <span class="comment">//Ev.SetType(static_cast&lt;Mezzanine::SceneManager::SceneManagerType&gt;(OneNode.GetAttribute(&quot;Type&quot;).AsInt()));</span></div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;            Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae487633b59779be0bd63de98c4656f6d" title="Sets the type of shadows to be used when rendering the scene.">SetSceneShadowTechnique</a>((<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8149cd1ec188e0d57935d71c6a7134c6" title="needs to be documented">Mezzanine::SceneManager::SceneShadowTechnique</a>)(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;SceneShadowTechnique&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>()));</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;            Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a9d959f0128e2aa14aeb9d425cd9631d2" title="Sets the number of textures to be alloted for creating shadows.">SetShadowTextureCount</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;ShadowTextureCount&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>());</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;            Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a303b871aa1475605d2711239d4d088ac" title="Sets the size of all texture based shadows.">SetShadowTextureSize</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;ShadowTextureSize&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>());</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;            Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a79b5c4f2edd3301134a6a2513b4deaa1" title="Sets the maximum distance from the camera that shadows will be visible.">SetShadowFarDistance</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;ShadowFarDistance&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>());</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;            <a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470e" title="Used to help identify which method is used to draw the sky, if any.">Mezzanine::SceneManager::SkyMethod</a> DoubleCheck = (<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a80fac0c0b67191cb5450bddde74b470e" title="Used to help identify which method is used to draw the sky, if any.">Mezzanine::SceneManager::SkyMethod</a>)(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;SkyMethod&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>());</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;            <span class="keywordflow">for</span>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Mezzanine::XML::Node</a> Child = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>(); Child!=0; Child = Child.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9afd9eed67cd16754edaf6264021b21b" title="Attempt to retrieve the next sibling of this Node.">GetNextSibling</a>())</div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;            {</div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> Name(Child.Name());</div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;                <span class="keywordflow">switch</span>(Name[0])</div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;                {</div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;                    <span class="keywordflow">case</span> <span class="charliteral">&#39;A&#39;</span>: <span class="comment">// AmbientLight</span></div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;                        <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;AmbientLight&quot;</span>))</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;                        {</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;                            <span class="keywordflow">if</span>(<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(Child.GetFirstChild().Name()) == <span class="stringliteral">&quot;ColourValue&quot;</span>)</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;                            {</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;                                <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">Mezzanine::ColourValue</a> AllAroundUs;</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;                                Child.GetFirstChild() &gt;&gt; AllAroundUs;</div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;                                Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#ae4b889a919e490edcc3a7d0c32135a82" title="Sets the ambient light for the scene.">SetAmbientLight</a>(AllAroundUs);</div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;                            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;                                MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element AmbientLight-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;                            }</div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element Sd-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;                        }</div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;                    <span class="keywordflow">case</span> <span class="charliteral">&#39;L&#39;</span>: <span class="comment">// Light</span></div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;                        <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;Light&quot;</span>))</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;                        {</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;                            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> ChildName(Child.GetAttribute(<span class="stringliteral">&quot;Name&quot;</span>).AsString());</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;                            <span class="keywordflow">if</span>(0!=ChildName.length())</div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;                            {</div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;                                <a class="code" href="classMezzanine_1_1Light.xhtml" title="This class is the class used for dynamic lighting within the scene.">Mezzanine::Light</a>* ChildLight = Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a33a91afe11a91a778d9b0139a06f3d0a" title="Creates a dynamic light.">CreateLight</a>(ChildName);</div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;                                Child &gt;&gt; *ChildLight;</div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;                            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;                                MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a7a0bd380eb3a0e6d02ff8f51ceeda54c" title="When used a instance of ParametersException is thrown. Thrown when parameters are checked at runtime ...">Mezzanine::Exception::PARAMETERS_EXCEPTION</a>,<span class="stringliteral">&quot;Attemping to deserialize nameless light during deserialization of SceneManager but lights must have a name.&quot;</span>);</div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;                            }</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element L-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;                        }</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                    <span class="keywordflow">case</span> <span class="charliteral">&#39;P&#39;</span>: <span class="comment">// Particle Effect</span></div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;                        <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;ParticleEffect&quot;</span>))</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;                        {</div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;                            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> ChildName(Child.GetAttribute(<span class="stringliteral">&quot;Name&quot;</span>).AsString());</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;                            <span class="keywordflow">if</span>(0!=ChildName.length())</div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;                            {</div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;                                <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> ChildTemplate(Child.GetAttribute(<span class="stringliteral">&quot;Template&quot;</span>).AsString());</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;                                <span class="keywordflow">if</span>(0!=ChildTemplate.length())</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;                                {</div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;                                    <a class="code" href="classMezzanine_1_1ParticleEffect.xhtml" title="This class is responsible for creating visual particle effects, such as rain, smoke, sparks, and explosions.">Mezzanine::ParticleEffect</a>* ChildPE = Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a7c7e0b3f993c531bcdd9a6dd9135178d" title="Creates a particle effect.">CreateParticleEffect</a>(ChildName,ChildTemplate);</div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;                                    Child &gt;&gt; *ChildPE;</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;                                }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;                                    MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a7a0bd380eb3a0e6d02ff8f51ceeda54c" title="When used a instance of ParametersException is thrown. Thrown when parameters are checked at runtime ...">Mezzanine::Exception::PARAMETERS_EXCEPTION</a>,<span class="stringliteral">&quot;Attemping to deserialize Templateless ParticleEffect during deserialization of SceneManager but ParticleEffects must have a Template.&quot;</span>);</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;                                }</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;                            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;                                MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a7a0bd380eb3a0e6d02ff8f51ceeda54c" title="When used a instance of ParametersException is thrown. Thrown when parameters are checked at runtime ...">Mezzanine::Exception::PARAMETERS_EXCEPTION</a>,<span class="stringliteral">&quot;Attemping to deserialize nameless ParticleEffect during deserialization of SceneManager but ParticleEffects must have a name.&quot;</span>);</div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;                            }</div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element P-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;                        }</div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;</div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;                    <span class="keywordflow">case</span> <span class="charliteral">&#39;W&#39;</span>: <span class="comment">// WorldNode</span></div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;                        <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;WorldNode&quot;</span>))</div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;                        {</div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;</div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;                            <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> ChildName(Child.GetAttribute(<span class="stringliteral">&quot;Name&quot;</span>).AsString());</div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;                            <span class="keywordflow">if</span>(0!=ChildName.length())</div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;                            {</div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;                                <a class="code" href="classMezzanine_1_1WorldNode.xhtml" title="This is a helper class which non-physics objects, such as lights, cameras, ribbon trails...">Mezzanine::WorldNode</a>* ChildNode = Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a0b10c04c8d89926c8a7a0cf21da5a293" title="Creates a world node that can be manipulated.">CreateWorldNode</a>(ChildName);</div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;                            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;                                MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a7a0bd380eb3a0e6d02ff8f51ceeda54c" title="When used a instance of ParametersException is thrown. Thrown when parameters are checked at runtime ...">Mezzanine::Exception::PARAMETERS_EXCEPTION</a>,<span class="stringliteral">&quot;Attemping to deserialize nameless WorldNode during deserialization of SceneManager but WorldNodes must have a name.&quot;</span>);</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;                            }</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element W-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;                        }</div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;                    <span class="keywordflow">case</span> <span class="charliteral">&#39;S&#39;</span>: <span class="comment">// Sky of some kind or &quot;ShadowColor&quot;</span></div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;                        <span class="keywordflow">switch</span>(Name[3])</div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;                        {</div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;                            <span class="keywordflow">case</span> <span class="charliteral">&#39;d&#39;</span>: <span class="comment">// ShadowColour</span></div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;                                <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;ShadowColour&quot;</span>))</div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;                                {</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;                                    <span class="keywordflow">if</span>(Child.GetFirstChild())</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;                                    {</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;                                        <span class="keywordflow">if</span>(<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(Child.GetFirstChild().Name()) == <span class="stringliteral">&quot;ColourValue&quot;</span>)</div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;                                        {</div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;                                            <a class="code" href="classMezzanine_1_1ColourValue.xhtml" title="This is a simple class for holding 4 reals representing the colour any give object or lightsource can...">Mezzanine::ColourValue</a> InTheShade;</div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;                                            Child.GetFirstChild() &gt;&gt; InTheShade;</div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;                                            Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a8bc4a68f885b85a3a023d632d932de65" title="Sets the colour to be used when casting shadows.">SetShadowColour</a>(InTheShade);</div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;                                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;                                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element ShadowColour-\&quot;&quot;</span> + <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(Child.GetFirstChild().Name()) + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;                                        }</div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;                                    }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;                                        MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: ShadowColour has no child&quot;</span>);</div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;                                    }</div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;                                }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;                                    MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element Sd-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;                                }</div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;                            <span class="keywordflow">case</span> <span class="charliteral">&#39;B&#39;</span>: <span class="comment">// SkyBox</span></div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;                                <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;SkyBox&quot;</span>))</div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;                                {</div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;                                    <span class="keywordflow">if</span>(Child.GetAttribute(<span class="stringliteral">&quot;Version&quot;</span>).AsInt() == 1)</div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;                                    {</div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;                                        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Mezzanine::Quaternion</a> Orientation;</div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;                                        <span class="keywordflow">if</span>(<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(Child.GetFirstChild().Name()) == <span class="stringliteral">&quot;Orientation&quot;</span>)</div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;                                        {</div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;                                            Child.GetFirstChild().GetFirstChild() &gt;&gt; Orientation;</div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;                                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;                                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element Orientation-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;                                        }</div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;                                        Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#aaa3c4b8d15aa74c767a21d725de25ec7" title="Creates a skybox for use in making a sky.">CreateSkyBox</a>( Child.GetAttribute(<span class="stringliteral">&quot;MaterialName&quot;</span>).AsString(),</div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;                                                         Child.GetAttribute(<span class="stringliteral">&quot;MaterialGroupName&quot;</span>).AsString(),</div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;                                                         Child.GetAttribute(<span class="stringliteral">&quot;Distance&quot;</span>).AsReal(),</div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;                                                         Child.GetAttribute(<span class="stringliteral">&quot;DrawFirst&quot;</span>).AsBool(),</div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;                                                         Orientation);</div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;                                    }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;                                        MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SkyBox: Not Version 1.&quot;</span>);</div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;                                    }</div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;                                }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;                                    MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element SB-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;                                }</div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;                            <span class="keywordflow">case</span> <span class="charliteral">&#39;D&#39;</span>: <span class="comment">// SkyDome</span></div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;                                <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;SkyDome&quot;</span>))</div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;                                {</div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;                                    <span class="keywordflow">if</span>(Child.GetAttribute(<span class="stringliteral">&quot;Version&quot;</span>).AsInt() == 1)</div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;                                    {</div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;                                        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Mezzanine::Quaternion</a> Orientation;</div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;                                        <span class="keywordflow">if</span>(<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(Child.GetFirstChild().Name()) == <span class="stringliteral">&quot;Orientation&quot;</span>)</div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;                                        {</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;                                            Child.GetFirstChild().GetFirstChild() &gt;&gt; Orientation;</div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;                                        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;                                            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element Orientation-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;                                        }</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;                                        Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a5862eefa87c9fcda9fdba7fa69efd6cf" title="Creates a skydome for use in making a sky.">CreateSkyDome</a>( Child.GetAttribute(<span class="stringliteral">&quot;MaterialName&quot;</span>).AsString(),</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;                                                          Child.GetAttribute(<span class="stringliteral">&quot;MaterialGroupName&quot;</span>).AsString(),</div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;                                                          Child.GetAttribute(<span class="stringliteral">&quot;Distance&quot;</span>).AsReal(),</div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;                                                          Child.GetAttribute(<span class="stringliteral">&quot;Curvature&quot;</span>).AsReal(),</div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;                                                          Child.GetAttribute(<span class="stringliteral">&quot;Tiling&quot;</span>).AsReal(),</div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;                                                          Child.GetAttribute(<span class="stringliteral">&quot;DrawFirst&quot;</span>).AsBool(),</div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;                                                          Orientation,</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;                                                          Child.GetAttribute(<span class="stringliteral">&quot;XSegments&quot;</span>).AsInt(),</div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;                                                          Child.GetAttribute(<span class="stringliteral">&quot;YSegments&quot;</span>).AsInt());</div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;</div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;                                    }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;                                        MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SkyDome: Not Version 1.&quot;</span>);</div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;                                    }</div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;                                }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;                                    MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element SD-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;                                }</div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;                            <span class="keywordflow">case</span> <span class="charliteral">&#39;P&#39;</span>: <span class="comment">// SkyPlane</span></div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;                                <span class="keywordflow">if</span>(Name==<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(<span class="stringliteral">&quot;SkyPlane&quot;</span>))</div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;                                {</div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;                                    <a class="code" href="classMezzanine_1_1Plane.xhtml" title="This is used to represent a flat infinite slice of the game world.">Mezzanine::Plane</a> SkyOrientation;</div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;                                    Child.GetFirstChild() &gt;&gt; SkyOrientation;</div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;                                    <span class="keywordflow">if</span>(Child.GetAttribute(<span class="stringliteral">&quot;Version&quot;</span>).AsInt() == 1)</div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;                                    {</div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;                                        Ev.<a class="code" href="classMezzanine_1_1SceneManager.xhtml#a6cea438ed9b13cf613b07e2dd6467c4e" title="Creates a skyplane for use in making a sky.">CreateSkyPlane</a>(  SkyOrientation,</div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;                                                            Child.GetAttribute(<span class="stringliteral">&quot;MaterialName&quot;</span>).AsString(),</div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;                                                            Child.GetAttribute(<span class="stringliteral">&quot;MaterialGroupName&quot;</span>).AsString(),</div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;                                                            Child.GetAttribute(<span class="stringliteral">&quot;Scale&quot;</span>).AsReal(),</div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;                                                            Child.GetAttribute(<span class="stringliteral">&quot;Tiling&quot;</span>).AsReal(),</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;                                                            Child.GetAttribute(<span class="stringliteral">&quot;DrawFirst&quot;</span>).AsBool(),</div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;                                                            Child.GetAttribute(<span class="stringliteral">&quot;Bow&quot;</span>).AsBool(),</div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;                                                            Child.GetAttribute(<span class="stringliteral">&quot;XSegments&quot;</span>).AsInt(),</div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;                                                            Child.GetAttribute(<span class="stringliteral">&quot;YSegments&quot;</span>).AsInt());</div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;                                    }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;                                        MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SkyPlane: Not Version 1.&quot;</span>);</div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;                                    }</div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;                                }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;                                    MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element SP-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>);</div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;                                }</div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;                                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;                        }</div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;                        <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;                        <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;                            { MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML for SceneManager: Includes unknown Element def-\&quot;&quot;</span> + Name + <span class="stringliteral">&quot;\&quot;.&quot;</span>); }</div>
<div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;                }</div>
<div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;            }</div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;        }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;            MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a28c9fc403419230fd704065a7b1a37f4" title="When used a instance of InvalidVersionException is thrown. Thrown when a version is accessed/parsed/r...">Mezzanine::Exception::INVALID_VERSION_EXCEPTION</a>,<span class="stringliteral">&quot;Incompatible XML Version for SceneManager: Not Version 1.&quot;</span>);</div>
<div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;        }</div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;    }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;        MEZZ_EXCEPTION(<a class="code" href="classMezzanine_1_1Exception.xhtml#a4ee7e60ac53783c4975240c57071d420a5b5cb8f34d9d13846e560a8f1f7800f2" title="When used a instance of InstanceIdentityInvalidException is thrown. Thrown when the identity string w...">Mezzanine::Exception::II_IDENTITY_INVALID_EXCEPTION</a>,<span class="stringliteral">&quot;Attempting to deserialize a SceneManager, found a &quot;</span> + <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>()));</div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;    }</div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;}</div>
<div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;</div>
<div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;</div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;</div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Sep 18 2013 23:31:14 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
