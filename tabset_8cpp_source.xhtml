<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/UI/tabset.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;15,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_3ebf96fe972d575a9a92716dce298e4c.xhtml">UI</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">tabset.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _uitabset_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _uitabset_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;UI/tabset.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;UI/screen.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;uimanager.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;UI/button.h&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;UI/caption.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;Input/inputmanager.h&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;Input/mouse.h&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">namespace </span>UI</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ac7f33f524f3032802496c3e8ca466314">   55</a></span>&#160;        <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ac7f33f524f3032802496c3e8ca466314" title="Class constructor.">TabSet::TabSet</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; SetRect, <a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml" title="This class is a helper class for creating UI&#39;s. It is responsible for storing and keeping track of al...">Screen</a>* parent)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            : <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml" title="This class is the base class for all widgets.">Widget</a>(name,parent),</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;              SetsAdded(0),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;              VisibleSet(NULL)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            Type = Widget::W_TabSet;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            TemplateSetRect.Relative = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>&amp; WinDim = ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#a12199967ad8a0e91cf816083aaa2a5d0" title="Gets the current viewport dimensions.">GetViewportDimensions</a>();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">if</span>(SetRect.Relative)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                RelPosition = SetRect.Position;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                RelSize = SetRect.Size;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                TemplateSetRect.Position = SetRect.Position * WinDim;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                TemplateSetRect.Size = SetRect.Size * WinDim;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                RelPosition = SetRect.Position / WinDim;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                RelSize = SetRect.Size / WinDim;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                TemplateSetRect = <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#aed66a04577944a3c76e628185aa7bb3e" title="Sets the Rect(Position and Size) of this Widget.">SetRect</a>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#aefeb37272d3019a728fcf93232831ab9">   76</a></span>&#160;        <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#aefeb37272d3019a728fcf93232831ab9" title="Class destructor.">TabSet::~TabSet</a>()</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a37399125aa416568a72376d0ffd799ed" title="Destroys all RenderableSetData&#39;s currently stored in this widget.">DestroyAllRenderableSets</a>();</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a2499619c7e53f0de004bfd064e4bec3a">   81</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a2499619c7e53f0de004bfd064e4bec3a" title="Child specific update method.">TabSet::UpdateImpl</a>(<span class="keywordtype">bool</span> Force)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61" title="An Optional listing of value that can be used in a metacode to represent the information of a button ...">Input::ButtonState</a> State = <a class="code" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67" title="Fetches a pointer to the singleton.">Input::InputManager::GetSingletonPtr</a>()-&gt;GetSystemMouse()-&gt;GetButtonState(1);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">if</span>( HoveredSubWidget &amp;&amp; (Widget::W_Button == HoveredSubWidget-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#a9e1a01dc48630ce92e617cc0c6e9d31a" title="Gets the type of widget this is.">GetType</a>()) )</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="keywordflow">if</span>(<a class="code" href="namespaceMezzanine_1_1Input.xhtml#a6dace303a881a50244c5130492f85b61a5beafdd93feb57496cfc110a0684e163">Input::BUTTON_PRESSING</a> == State)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* ClickedSet = NULL;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        <span class="keywordflow">if</span>(HoveredSubWidget == (*it)-&gt;Accessor)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                            ClickedSet = (*it);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    <span class="keywordflow">if</span>(!ClickedSet)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                        <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                    <span class="keywordflow">if</span>(VisibleSet)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                        VisibleSet-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>-&gt;Hide();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                    VisibleSet = ClickedSet;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                    VisibleSet-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>-&gt;Show();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a7b1e2da42649734fa735e6675a7570c3">  104</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a7b1e2da42649734fa735e6675a7570c3" title="Child specific visibility method.">TabSet::SetVisibleImpl</a>(<span class="keywordtype">bool</span> visible)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                (*it)-&gt;Accessor-&gt;SetVisible(visible);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            <span class="keywordflow">if</span>(VisibleSet)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                VisibleSet-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>-&gt;SetVisible(visible);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a54ca252d5644b490f132b84c8ea2ad2d">  112</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a54ca252d5644b490f132b84c8ea2ad2d" title="Child specific mouse hover method.">TabSet::CheckMouseHoverImpl</a>()</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                <span class="keywordflow">if</span>((*it)-&gt;Accessor-&gt;CheckMouseHover())</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                    HoveredSubWidget = (*it)-&gt;Accessor;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">if</span>(VisibleSet-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>-&gt;CheckMouseHover())</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                HoveredSubWidget = VisibleSet-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a2fa3c2bd99febadee512ec6eca9a1a42">  130</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a2fa3c2bd99febadee512ec6eca9a1a42" title="Internal function for setting the location(position) of this widget.">TabSet::SetLocation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>&amp; Position)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            TemplateSetRect.Position = Position;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                (*it)-&gt;Collection-&gt;SetActualPosition(Position);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a16d66ab0fc9fdd14e399f5c7e734b164">  139</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a16d66ab0fc9fdd14e399f5c7e734b164" title="Internal function for setting the area(size) of this widget.">TabSet::SetArea</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>&amp; Size)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            TemplateSetRect.Size = Size;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                (*it)-&gt;Collection-&gt;SetActualSize(Size);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a7474438cae418c74f192dc48ad5a4170">  148</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a7474438cae418c74f192dc48ad5a4170" title="Sets the relative position of this widget.">TabSet::SetPosition</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>&amp; Position)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            RelPosition = Position;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a2fa3c2bd99febadee512ec6eca9a1a42" title="Internal function for setting the location(position) of this widget.">SetLocation</a>(Position * ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#a12199967ad8a0e91cf816083aaa2a5d0" title="Gets the current viewport dimensions.">GetViewportDimensions</a>());</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ac4cb545982397148d0df237eee062cb3">  154</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ac4cb545982397148d0df237eee062cb3" title="Sets the pixel position of this widget.">TabSet::SetActualPosition</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>&amp; Position)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            RelPosition = Position / ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#a12199967ad8a0e91cf816083aaa2a5d0" title="Gets the current viewport dimensions.">GetViewportDimensions</a>();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a2fa3c2bd99febadee512ec6eca9a1a42" title="Internal function for setting the location(position) of this widget.">SetLocation</a>(Position);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ac125a2abc7b12d3c81969bdd407be883">  160</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ac125a2abc7b12d3c81969bdd407be883" title="Sets the relative size of this widget.">TabSet::SetSize</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>&amp; Size)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            RelSize = Size;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a16d66ab0fc9fdd14e399f5c7e734b164" title="Internal function for setting the area(size) of this widget.">SetArea</a>(Size * ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#a12199967ad8a0e91cf816083aaa2a5d0" title="Gets the current viewport dimensions.">GetViewportDimensions</a>());</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a1093eb0ab0b862665cfb567bb5d73341">  166</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a1093eb0ab0b862665cfb567bb5d73341" title="Sets the pixel size of this widget.">TabSet::SetActualSize</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>&amp; Size)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        {</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            RelSize = Size / ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#a12199967ad8a0e91cf816083aaa2a5d0" title="Gets the current viewport dimensions.">GetViewportDimensions</a>();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a16d66ab0fc9fdd14e399f5c7e734b164" title="Internal function for setting the area(size) of this widget.">SetArea</a>(Size);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a191f67ec19fc80f63eb842305f8cfb05">  172</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a191f67ec19fc80f63eb842305f8cfb05" title="Updates the dimensions of this widget to match those of the new screen size.">TabSet::UpdateDimensions</a>()</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                (*it)-&gt;Accessor-&gt;UpdateDimensions();</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;                (*it)-&gt;Collection-&gt;UpdateDimensions();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a8b3fd7e997f0a4cd7c68d915077621a7">  181</a></span>&#160;        <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a8b3fd7e997f0a4cd7c68d915077621a7" title="Creates a new Set in this widget.">TabSet::CreateRenderableSet</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Name, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1UI_1_1RenderableRect.xhtml" title="This class contains all the utilities necessary for capturing input.">RenderableRect</a>&amp; AccessorRect, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; GlyphHeight, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Text)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector2.xhtml" title="This is used to represent a point on a 2 dimentional area, such as a screen.">Vector2</a>&amp; WinDim = ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#a12199967ad8a0e91cf816083aaa2a5d0" title="Gets the current viewport dimensions.">GetViewportDimensions</a>();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> ActHeight = (<a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>)(GlyphHeight * WinDim.<a class="code" href="classMezzanine_1_1Vector2.xhtml#aa189e2585580d3f82b29584844fad0ad" title="Coordinate on the Y vector.">Y</a>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            std::pair&lt;Whole,Real&gt; GlyphInfo = Manager-&gt;<a class="code" href="classMezzanine_1_1UI_1_1UIManager.xhtml#ab16cbe2a3b2b08a30d68f546811467a8" title="Suggests a glyph index based on the desired actual height.">SuggestGlyphIndex</a>(ActHeight,ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#adafbc28919ebb4d2d65e54daa0676177" title="Gets the currently set primary atlas.">GetPrimaryAtlas</a>());</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* NewAccessor = ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#aa3ba64ca5798dccc3ba6599dda88ce84" title="Creates a button. ">CreateButton</a>(Name+<span class="stringliteral">&quot;Access&quot;</span>,AccessorRect,GlyphInfo.first,Text);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">if</span>(1 != GlyphInfo.second)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                NewAccessor-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml#a53ea30dbdbe775dfafb914a84405d88f" title="Gets the internal clickable renderable used by this button.">GetClickable</a>()-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Caption.xhtml#a26b5af3af19440f274a7938806043ca7" title="Sets the scaling to be applied to the text being rendered.">SetTextScale</a>(GlyphInfo.second);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            NewAccessor-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#ad13df3d78b4e7cebfc566dc678706915" title="Sets the visibility of this renderable. ">SetVisible</a>(Visible);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            RenderableCollection* NewCollection = ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Screen.xhtml#ad3e1a3f05cf3adae777b97210b3181f1" title="Creates an EnclosedRenderableContainerWidget. ">CreateEnclosedRenderableContainerWidget</a>(Name+<span class="stringliteral">&quot;Set&quot;</span>,TemplateSetRect);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            NewCollection-&gt;<a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#ad13df3d78b4e7cebfc566dc678706915" title="Sets the visibility of this renderable. ">SetVisible</a>(Visible);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* NewSetData = <span class="keyword">new</span> <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>(Name,NewAccessor,NewCollection);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">if</span>(0 == Sets.size()) VisibleSet = NewSetData;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">else</span> NewSetData-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>-&gt;Hide();</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            Sets.push_back(NewSetData);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#ab5eb25c91db2a9931111a1942871d042" title="Adds a renderable as a subrenderable to this widget.">AddSubRenderable</a>(SetsAdded,NewSetData-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <a class="code" href="classMezzanine_1_1UI_1_1Widget.xhtml#ab5eb25c91db2a9931111a1942871d042" title="Adds a renderable as a subrenderable to this widget.">AddSubRenderable</a>(SetsAdded+1,NewSetData-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a1917b338177c547c92b033ad8c278f3c" title="The text button allowing access to viewing the Set.">Accessor</a>);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            SetsAdded+=2;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            <span class="keywordflow">return</span> NewSetData;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#adbefc53cf485e2d4c937c9f08c13958e">  204</a></span>&#160;        <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#adbefc53cf485e2d4c937c9f08c13958e" title="Gets a RenderableSetData by Index.">TabSet::GetRenderableSetData</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        {</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            <span class="keywordflow">return</span> Sets.at(Index);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ab70db8423339f4ad5c11070201e42cc2">  209</a></span>&#160;        <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#adbefc53cf485e2d4c937c9f08c13958e" title="Gets a RenderableSetData by Index.">TabSet::GetRenderableSetData</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; SetDataName)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        {</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;            {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                <span class="keywordflow">if</span>(SetDataName == (*it)-&gt;Name)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                    <span class="keywordflow">return</span> (*it);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ad0ae1d3d1f180e4a4df5f590b98f1055">  219</a></span>&#160;        RenderableCollection* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ad0ae1d3d1f180e4a4df5f590b98f1055" title="Gets a RenderableCollection by Index.">TabSet::GetRenderableCollection</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            <span class="keywordflow">return</span> Sets.at(Index)-&gt;Collection;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a44e57083881081eacfe86e2cf238fbc1">  224</a></span>&#160;        RenderableCollection* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ad0ae1d3d1f180e4a4df5f590b98f1055" title="Gets a RenderableCollection by Index.">TabSet::GetRenderableCollection</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; SetDataName)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* SetData = <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#adbefc53cf485e2d4c937c9f08c13958e" title="Gets a RenderableSetData by Index.">GetRenderableSetData</a>(SetDataName);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keywordflow">if</span>(SetData) <span class="keywordflow">return</span> SetData-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a76b5b147f804f721fd44c21d53504c42">  231</a></span>&#160;        RenderableCollection* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ad0ae1d3d1f180e4a4df5f590b98f1055" title="Gets a RenderableCollection by Index.">TabSet::GetRenderableCollection</a>(<a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* Accessor)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        {</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            {</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                <span class="keywordflow">if</span>(Accessor == (*it)-&gt;Accessor)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                    <span class="keywordflow">return</span> (*it)-&gt;Collection;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;            }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ad48ba5b0a971707532c7cdf08d3d8364">  241</a></span>&#160;        <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ad48ba5b0a971707532c7cdf08d3d8364" title="Gets an Accessor by Index.">TabSet::GetAccessor</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            <span class="keywordflow">return</span> Sets.at(Index)-&gt;Accessor;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        }</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a1822836e0c2ba8694aff2fe90023b2c5">  246</a></span>&#160;        <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ad48ba5b0a971707532c7cdf08d3d8364" title="Gets an Accessor by Index.">TabSet::GetAccessor</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; SetDataName)</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        {</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* SetData = <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#adbefc53cf485e2d4c937c9f08c13958e" title="Gets a RenderableSetData by Index.">GetRenderableSetData</a>(SetDataName);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            <span class="keywordflow">if</span>(SetData) <span class="keywordflow">return</span> SetData-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a1917b338177c547c92b033ad8c278f3c" title="The text button allowing access to viewing the Set.">Accessor</a>;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div>
<div class="line"><a name="l00253"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a651cf429e798b3f99a7a6aa76b435ffc">  253</a></span>&#160;        <a class="code" href="classMezzanine_1_1UI_1_1Button.xhtml" title="This class is a helper class, specifically for use as a button.">Button</a>* <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#ad48ba5b0a971707532c7cdf08d3d8364" title="Gets an Accessor by Index.">TabSet::GetAccessor</a>(RenderableCollection* Collection)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;                <span class="keywordflow">if</span>(Collection == (*it)-&gt;Collection)</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                    <span class="keywordflow">return</span> (*it)-&gt;Accessor;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;            }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;            <span class="keywordflow">return</span> NULL;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#aeed203c0d970a51b12e8559211cfaeba">  263</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#aeed203c0d970a51b12e8559211cfaeba" title="Gets the number of Sets stored in this TabSet.">TabSet::GetNumRenderableSets</a>()</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        {</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="keywordflow">return</span> Sets.size();</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#aadfa25f3232b2012f0247c556f040615">  268</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#aadfa25f3232b2012f0247c556f040615" title="Destroys an existing RenderableSetData.">TabSet::DestroyRenderableSet</a>(<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* ToBeDestroyed)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        {</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            {</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;                <span class="keywordflow">if</span>(ToBeDestroyed == (*it))</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    <span class="keywordflow">if</span>(ToBeDestroyed == VisibleSet)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                        VisibleSet = NULL;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    Sets.erase(it);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;            }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keywordflow">for</span>( RenderableIterator it = SubRenderables.begin() ; it != SubRenderables.end() ; ++it )</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordflow">if</span>(ToBeDestroyed-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a> == (*it))</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                    SubRenderables.erase(it);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <span class="keyword">delete</span> ToBeDestroyed;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00291"></a><span class="lineno"><a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a37399125aa416568a72376d0ffd799ed">  291</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1UI_1_1TabSet.xhtml#a37399125aa416568a72376d0ffd799ed" title="Destroys all RenderableSetData&#39;s currently stored in this widget.">TabSet::DestroyAllRenderableSets</a>()</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        {</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;            <span class="keywordflow">for</span>( std::vector&lt;RenderableSetData*&gt;::iterator it = Sets.begin() ; it != Sets.end() ; it++ )</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            {</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                <a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml" title="This is a helper class for the storage of Renderable Set&#39;s in a Tabset.">RenderableSetData</a>* CurrSet = (*it);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#ae8515332618305f985126d0b31c0a993" title="Destroys a widget.">DestroyWidget</a>(CurrSet-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a1917b338177c547c92b033ad8c278f3c" title="The text button allowing access to viewing the Set.">Accessor</a>);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                ParentScreen-&gt;<a class="code" href="classMezzanine_1_1UI_1_1RenderableFactory.xhtml#ae8515332618305f985126d0b31c0a993" title="Destroys a widget.">DestroyWidget</a>(CurrSet-&gt;<a class="code" href="structMezzanine_1_1UI_1_1RenderableSetData.xhtml#a35dddda517f77cbbb31eea781d7f9874" title="The collection of renderables to display.">Collection</a>);</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                <span class="keyword">delete</span> CurrSet;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            Sets.clear();</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            HoveredSubWidget = NULL;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;            VisibleSet = NULL;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            SubRenderables.clear();</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;    }<span class="comment">//ui</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 15 2013 02:46:38 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
