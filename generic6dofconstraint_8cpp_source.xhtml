<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/Physics/generic6dofconstraint.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September14,2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_61c0ec937c468b49b332752e9f643e74.xhtml">Physics</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">generic6dofconstraint.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _physicsgeneric6dofconstraint_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _physicsgeneric6dofconstraint_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;generic6dofconstraint.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;stringtool.h&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="serialization_8h.xhtml" title="The interface for serialization.">serialization.h</a>&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &lt;btBulletDynamicsCommon.h&gt;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">namespace </span>Physics</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {<span class="comment"></span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment"></span>        <span class="comment">// Generic6Dof Constraint Functions</span></div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6dc8902c0d1d11eab3e1bbacdfa196cd">   55</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6dc8902c0d1d11eab3e1bbacdfa196cd" title="Inheritance Constructor.">Generic6DofConstraint::Generic6DofConstraint</a>()</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            { }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a28756bc038e5a2402b2a50979120c23d">   58</a></span>&#160;        btTypedConstraint* <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a28756bc038e5a2402b2a50979120c23d" title="Get the Bullet constraint that this class encapsulates. ">Generic6DofConstraint::GetConstraintBase</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>; }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment"></span>        <span class="comment">// Generic6DofConstraint Construction and Destruction</span></div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0c67371097bf265834b74df77cd1fce5">   63</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6dc8902c0d1d11eab3e1bbacdfa196cd" title="Inheritance Constructor.">Generic6DofConstraint::Generic6DofConstraint</a>(<a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorA, <a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; VectorA,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                                      <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; VectorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; QuaternionA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; QuaternionB, <span class="keywordtype">bool</span> UseLinearReferenceA)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a0dd0d94feeb3d15c650aa2fcb5352110" title="Sets the Internal actor pointers.">SetBodies</a>(ActorA,ActorB);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a> TransformA(VectorA, QuaternionA);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a> TransformB(VectorB, QuaternionB);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a> = <span class="keyword">new</span> btGeneric6DofConstraint(*<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#adef4626e3c28e717058d18ff80f4c104" title="First rigid body the constraint applies to.">BodyA</a>, *<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a83db6ff278bb5e7d51ebec87f3ab7279" title="Second rigid body the constraint applies to(if applicable).">BodyB</a>, TransformA.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(), TransformB.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(), UseLinearReferenceA);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a32d0a3d2b69edaff952c1dc121fc6272">   72</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6dc8902c0d1d11eab3e1bbacdfa196cd" title="Inheritance Constructor.">Generic6DofConstraint::Generic6DofConstraint</a>(<a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorA, <a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TransformA, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TransformB, <span class="keywordtype">bool</span> UseLinearReferenceA)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a0dd0d94feeb3d15c650aa2fcb5352110" title="Sets the Internal actor pointers.">SetBodies</a>(ActorA,ActorB);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a> = <span class="keyword">new</span> btGeneric6DofConstraint(*<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#adef4626e3c28e717058d18ff80f4c104" title="First rigid body the constraint applies to.">BodyA</a>, *<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a83db6ff278bb5e7d51ebec87f3ab7279" title="Second rigid body the constraint applies to(if applicable).">BodyB</a>, TransformA.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(), TransformB.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(), UseLinearReferenceA);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae6296f0e8ec5448f230e9c117ab231bf">   78</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6dc8902c0d1d11eab3e1bbacdfa196cd" title="Inheritance Constructor.">Generic6DofConstraint::Generic6DofConstraint</a>(<a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; VectorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; QuaternionB, <span class="keywordtype">bool</span> UseLinearReferenceB)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a0dd0d94feeb3d15c650aa2fcb5352110" title="Sets the Internal actor pointers.">SetBodies</a>(ActorB);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            btTransform transa(QuaternionB.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>(), VectorB.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>());</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a> = <span class="keyword">new</span> btGeneric6DofConstraint(*<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#adef4626e3c28e717058d18ff80f4c104" title="First rigid body the constraint applies to.">BodyA</a>, transa, UseLinearReferenceB);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adac5b87a52407957112fc64c039e737e">   86</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6dc8902c0d1d11eab3e1bbacdfa196cd" title="Inheritance Constructor.">Generic6DofConstraint::Generic6DofConstraint</a>(<a class="code" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>* ActorB, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TransformB, <span class="keywordtype">bool</span> UseLinearReferenceB)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a0dd0d94feeb3d15c650aa2fcb5352110" title="Sets the Internal actor pointers.">SetBodies</a>(ActorB);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a> = <span class="keyword">new</span> btGeneric6DofConstraint(*<a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#adef4626e3c28e717058d18ff80f4c104" title="First rigid body the constraint applies to.">BodyA</a>, TransformB.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(), UseLinearReferenceB);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aeabe94652a4cde0702a76f9544ae32d9">   93</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aeabe94652a4cde0702a76f9544ae32d9" title="Class destructor.">Generic6DofConstraint::~Generic6DofConstraint</a>()</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keyword">delete</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment"></span>        <span class="comment">// Generic6DofConstraint Location and Rotation</span></div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a75f73006910e009f59edcb0d2800a584">  101</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a75f73006910e009f59edcb0d2800a584" title="Set the Position and Rotation using a Transform. ">Generic6DofConstraint::SetPivotATransform</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TranA)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetA() = TranA.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(); }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3cb2d8521f2fe263ec3799f51171289b">  104</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3cb2d8521f2fe263ec3799f51171289b" title="Set the Position and Rotation using a Transform. ">Generic6DofConstraint::SetPivotBTransform</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a>&amp; TranB)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetB() = TranB.<a class="code" href="classMezzanine_1_1Transform.xhtml#ae1745852b61f7388a5374eeebdc893cd" title="Gets a Bullet Transform.">GetBulletTransform</a>(); }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aadb9299471aacd1881b7d5ebf1a3ca44">  107</a></span>&#160;        <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aadb9299471aacd1881b7d5ebf1a3ca44" title="Get the current Rotation and Location of Actor A. ">Generic6DofConstraint::GetPivotATransform</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetA(); }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae919099f5f6f6bbe12122cc528d03e12">  110</a></span>&#160;        <a class="code" href="classMezzanine_1_1Transform.xhtml" title="Stores information about relative location and rotation in 3d space.">Transform</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae919099f5f6f6bbe12122cc528d03e12" title="Get the current Rotation and Location of Actor B. ">Generic6DofConstraint::GetPivotBTransform</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetB(); }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a934373b57060718bc7cd6b3ffc2654b4">  114</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a934373b57060718bc7cd6b3ffc2654b4" title="Set The relative location of the pivot from ActorA&#39;s Center of gravity. ">Generic6DofConstraint::SetPivotALocation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Location)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetA().setOrigin(Location.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>()); }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a9141b078dc01d770534cacc17139457e">  117</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a9141b078dc01d770534cacc17139457e" title="Set The relative location of the pivot from ActorB&#39;s Center of gravity. ">Generic6DofConstraint::SetPivotBLocation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Location)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetB().setOrigin(Location.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>()); }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a31631cadbf28af5d2453f97f20e65f99">  120</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a31631cadbf28af5d2453f97f20e65f99" title="Get the location of the pivot relative to ActorA&#39;s Center of gravity. ">Generic6DofConstraint::GetPivotALocation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetA().getOrigin()); }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4aa36cdfdbb58d8eaf37d38afbc684ca">  123</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4aa36cdfdbb58d8eaf37d38afbc684ca" title="Get the location of the pivot relative to ActorB&#39;s Center of gravity. ">Generic6DofConstraint::GetPivotBLocation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetB().getOrigin()); }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a16309038dcb38565a2d52f9fcfcf50d5">  127</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a16309038dcb38565a2d52f9fcfcf50d5" title="Set The relative rotation of ActorA. ">Generic6DofConstraint::SetPivotARotation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; Rotation)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetA().setRotation(Rotation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>()); }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7a7886064ec0f8e85d8293442fbd9bb4">  130</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7a7886064ec0f8e85d8293442fbd9bb4" title="Set The relative rotation of ActorB. ">Generic6DofConstraint::SetPivotBRotation</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>&amp; Rotation)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetA().setRotation(Rotation.<a class="code" href="classMezzanine_1_1Quaternion.xhtml#a6d6b23f7ca6e8521873cd7c6198d7613" title="Gets a Bullet quaternion.">GetBulletQuaternion</a>()); }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0ea57a7cdca22200a39f5df7d9d7bdde">  133</a></span>&#160;        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0ea57a7cdca22200a39f5df7d9d7bdde" title="Get the relative rotation for ActorA. ">Generic6DofConstraint::GetPivotARotation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetA().getRotation()); }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a63f14a6eef5d2c677ade99c0702ad76d">  136</a></span>&#160;        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a63f14a6eef5d2c677ade99c0702ad76d" title="Get the relative rotation for ActorB. ">Generic6DofConstraint::GetPivotBRotation</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFrameOffsetB().getRotation()); }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment"></span>        <span class="comment">// Generic6DofConstraint Basic Limit Accessors</span></div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a07b4cc87ca4b31f8fc330a0c1b368f3a">  141</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a07b4cc87ca4b31f8fc330a0c1b368f3a" title="Change the upper and lower limit for one axis of translation or rotation limit.">Generic6DofConstraint::SetLimit</a>(<span class="keywordtype">int</span> Axis, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Lower, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Upper)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;setLimit(Axis, Lower, Upper); }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0fe6b3563691e9fd610c842301256b85">  144</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0fe6b3563691e9fd610c842301256b85" title="Set the lower limits on translation.">Generic6DofConstraint::SetLinearLimitUpper</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Limit)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;setLinearUpperLimit(Limit.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>()); }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a39d0ff6eed9c23082b7b58ea9d94cd9b">  147</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a39d0ff6eed9c23082b7b58ea9d94cd9b" title="Set the Upper limits on translation.">Generic6DofConstraint::SetLinearLimitLower</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Limit)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;setLinearLowerLimit(Limit.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>()); }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4409e670e8c73bb75042b2ea4eab4f6a">  150</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4409e670e8c73bb75042b2ea4eab4f6a" title="Get the lower limits on translation.">Generic6DofConstraint::GetLinearLimitUpper</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_upperLimit); }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a572999fe9d2090cba4fef4e8cf41dc59">  153</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a572999fe9d2090cba4fef4e8cf41dc59" title="Get the Upper limits on translation.">Generic6DofConstraint::GetLinearLimitLower</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_lowerLimit); }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4dd9506a9fe441600259f744b79e1af1">  156</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4dd9506a9fe441600259f744b79e1af1" title="Set the Upper limits on rotation.">Generic6DofConstraint::SetAngularLimitUpper</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Limit)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;setAngularUpperLimit(Limit.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>()); }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a23ea7a9086535a8aea7e211cb3dfc984">  159</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a23ea7a9086535a8aea7e211cb3dfc984" title="Set the Lower limits on rotation.">Generic6DofConstraint::SetAngularLimitLower</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Limit)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;setAngularLowerLimit(Limit.<a class="code" href="classMezzanine_1_1Vector3.xhtml#ab9fb84bdbfe3bed9fd210a6ad1cee8b7" title="Gets a Bullet vector3.">GetBulletVector3</a>()); }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#af2815cf43932a4ad5f366494c44f38f1">  162</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#af2815cf43932a4ad5f366494c44f38f1" title="Get the Power limits on rotation.">Generic6DofConstraint::GetAngularLimitUpper</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a84bbb6ec90516f012291f15d635f79bd" title="Get a specific upper rotational limit.">GetAngularLimitUpperOnAxis</a>(0),<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a84bbb6ec90516f012291f15d635f79bd" title="Get a specific upper rotational limit.">GetAngularLimitUpperOnAxis</a>(1),<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a84bbb6ec90516f012291f15d635f79bd" title="Get a specific upper rotational limit.">GetAngularLimitUpperOnAxis</a>(2)); }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0ed4cff2aebc6da5adbddd9e4853c2ec">  165</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0ed4cff2aebc6da5adbddd9e4853c2ec" title="Get the Upper limits on rotation.">Generic6DofConstraint::GetAngularLimitLower</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3446c6ebe6da3c0093b71cde53b3edb2" title="Get a specific lower rotational limit.">GetAngularLimitLowerOnAxis</a>(0),<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3446c6ebe6da3c0093b71cde53b3edb2" title="Get a specific lower rotational limit.">GetAngularLimitLowerOnAxis</a>(1),<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3446c6ebe6da3c0093b71cde53b3edb2" title="Get a specific lower rotational limit.">GetAngularLimitLowerOnAxis</a>(2)); }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3446c6ebe6da3c0093b71cde53b3edb2">  168</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3446c6ebe6da3c0093b71cde53b3edb2" title="Get a specific lower rotational limit.">Generic6DofConstraint::GetAngularLimitLowerOnAxis</a>(<span class="keywordtype">int</span> RotationalAxis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(RotationalAxis))-&gt;m_loLimit; }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a84bbb6ec90516f012291f15d635f79bd">  171</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a84bbb6ec90516f012291f15d635f79bd" title="Get a specific upper rotational limit.">Generic6DofConstraint::GetAngularLimitUpperOnAxis</a>(<span class="keywordtype">int</span> RotationalAxis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(RotationalAxis))-&gt;m_hiLimit; }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment"></span>        <span class="comment">// Generic6DofConstraint Angular Limit and Motor Details</span></div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afaa1a8fcbb5edf32468dfe1bcab85fc9">  176</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afaa1a8fcbb5edf32468dfe1bcab85fc9" title="Set the Maximimum amount of force applied to ensure limits are not surpassed.">Generic6DofConstraint::SetAngularLimitMaxForce</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; MaxLimitForces)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#acdd7dec3d1d0d18d19fb46c17e4a608d" title="Set the Maximimum amount of force applied to ensure a limit on one axis is not surpassed.">SetAngularLimitMaxForceOnAxis</a>(MaxLimitForces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#acdd7dec3d1d0d18d19fb46c17e4a608d" title="Set the Maximimum amount of force applied to ensure a limit on one axis is not surpassed.">SetAngularLimitMaxForceOnAxis</a>(MaxLimitForces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#acdd7dec3d1d0d18d19fb46c17e4a608d" title="Set the Maximimum amount of force applied to ensure a limit on one axis is not surpassed.">SetAngularLimitMaxForceOnAxis</a>(MaxLimitForces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>); }</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#acdd7dec3d1d0d18d19fb46c17e4a608d">  179</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#acdd7dec3d1d0d18d19fb46c17e4a608d" title="Set the Maximimum amount of force applied to ensure a limit on one axis is not surpassed.">Generic6DofConstraint::SetAngularLimitMaxForceOnAxis</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> MaxLimitForce, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_maxLimitForce = MaxLimitForce; }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac0d150fed2ef9e4434433a82a21d9f4f">  182</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac0d150fed2ef9e4434433a82a21d9f4f" title="Get the Maximimum amount of force applied to ensure limits are not surpassed.">Generic6DofConstraint::GetAngularLimitMaxForce</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a34d6200505bef367cb29f6935aab49e3" title="Get the Maximimum amount of force applied to ensure a limit one axis is not surpassed.">GetAngularLimitMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a34d6200505bef367cb29f6935aab49e3" title="Get the Maximimum amount of force applied to ensure a limit one axis is not surpassed.">GetAngularLimitMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a34d6200505bef367cb29f6935aab49e3" title="Get the Maximimum amount of force applied to ensure a limit one axis is not surpassed.">GetAngularLimitMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>)); }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a34d6200505bef367cb29f6935aab49e3">  185</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a34d6200505bef367cb29f6935aab49e3" title="Get the Maximimum amount of force applied to ensure a limit one axis is not surpassed.">Generic6DofConstraint::GetAngularLimitMaxForceOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_maxLimitForce; }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa99740c4f4919309902f7878e5816a88">  189</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa99740c4f4919309902f7878e5816a88" title="Set the Target velocity of the motor on each anuglar axis.">Generic6DofConstraint::SetAngularMotorTargetVelocity</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Velocities)</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a533c59679a3c8dbc7b83f58251225114" title="For one Axis, set the target velocity of the angular motor.">SetAngularMotorTargetVelocityOnAxis</a>(Velocities.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a533c59679a3c8dbc7b83f58251225114" title="For one Axis, set the target velocity of the angular motor.">SetAngularMotorTargetVelocityOnAxis</a>(Velocities.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a533c59679a3c8dbc7b83f58251225114" title="For one Axis, set the target velocity of the angular motor.">SetAngularMotorTargetVelocityOnAxis</a>(Velocities.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>); }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a533c59679a3c8dbc7b83f58251225114">  192</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a533c59679a3c8dbc7b83f58251225114" title="For one Axis, set the target velocity of the angular motor.">Generic6DofConstraint::SetAngularMotorTargetVelocityOnAxis</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Velocity, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_targetVelocity = Velocity; }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adf97df6e79fbe12cd821a948dc6e4df5">  195</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adf97df6e79fbe12cd821a948dc6e4df5" title="Get the target velocity for all angular Axis.">Generic6DofConstraint::GetAngularMotorTargetVelocity</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad71909ab486eda8d0ffe10b395d12cd9" title="Get the Target Velocity for one axis.">GetAngularMotorTargetVelocityOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad71909ab486eda8d0ffe10b395d12cd9" title="Get the Target Velocity for one axis.">GetAngularMotorTargetVelocityOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad71909ab486eda8d0ffe10b395d12cd9" title="Get the Target Velocity for one axis.">GetAngularMotorTargetVelocityOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>)); }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad71909ab486eda8d0ffe10b395d12cd9">  198</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ad71909ab486eda8d0ffe10b395d12cd9" title="Get the Target Velocity for one axis.">Generic6DofConstraint::GetAngularMotorTargetVelocityOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_targetVelocity; }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a95ba01ce14d3375aae74a05f9392eb88">  202</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a95ba01ce14d3375aae74a05f9392eb88" title="Set the Angular Motor Maximum force on all 3 rotational axis.">Generic6DofConstraint::SetAngularMotorMaxForce</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Forces)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adf09251ee940029ca3b671f9ed2eb0d8" title="For one Axis, set the Maximimum Motor Force.">SetAngularMotorMaxForceOnAxis</a>(Forces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adf09251ee940029ca3b671f9ed2eb0d8" title="For one Axis, set the Maximimum Motor Force.">SetAngularMotorMaxForceOnAxis</a>(Forces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adf09251ee940029ca3b671f9ed2eb0d8" title="For one Axis, set the Maximimum Motor Force.">SetAngularMotorMaxForceOnAxis</a>(Forces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>); }</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adf09251ee940029ca3b671f9ed2eb0d8">  205</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adf09251ee940029ca3b671f9ed2eb0d8" title="For one Axis, set the Maximimum Motor Force.">Generic6DofConstraint::SetAngularMotorMaxForceOnAxis</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Force, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_maxMotorForce = Force; }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0421df6e6cd44cf86cdac51006866d03">  208</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0421df6e6cd44cf86cdac51006866d03" title="Get the Max Motor Force for each Axis.">Generic6DofConstraint::GetAngularMotorMaxForce</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5879548cab2143cb3a9530fd360bf482" title="Get the Max motor Force on a certain Axis.">GetAngularMotorMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5879548cab2143cb3a9530fd360bf482" title="Get the Max motor Force on a certain Axis.">GetAngularMotorMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5879548cab2143cb3a9530fd360bf482" title="Get the Max motor Force on a certain Axis.">GetAngularMotorMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>)); }</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5879548cab2143cb3a9530fd360bf482">  211</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5879548cab2143cb3a9530fd360bf482" title="Get the Max motor Force on a certain Axis.">Generic6DofConstraint::GetAngularMotorMaxForceOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_maxMotorForce; }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae7ae10ec47a67a72da219a7b79a09bc3">  215</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae7ae10ec47a67a72da219a7b79a09bc3" title="Set the Angular Motor Damping for each Angular Axis.">Generic6DofConstraint::SetAngularMotorDamping</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Dampings)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a751e4e5503778b468f39a6b36d08f93b" title="For one Axis, set the Damping.">SetAngularMotorDampingOnAxis</a>(Dampings.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a751e4e5503778b468f39a6b36d08f93b" title="For one Axis, set the Damping.">SetAngularMotorDampingOnAxis</a>(Dampings.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a751e4e5503778b468f39a6b36d08f93b" title="For one Axis, set the Damping.">SetAngularMotorDampingOnAxis</a>(Dampings.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>); }</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a751e4e5503778b468f39a6b36d08f93b">  218</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a751e4e5503778b468f39a6b36d08f93b" title="For one Axis, set the Damping.">Generic6DofConstraint::SetAngularMotorDampingOnAxis</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Damping, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_damping = Damping; }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3e5b2687a8347ae623857e54f89ba49c">  221</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3e5b2687a8347ae623857e54f89ba49c" title="Get the Damping for all Angular Axis.">Generic6DofConstraint::GetAngularMotorDamping</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6727458f0a2c7204bca70f0bacde2c16" title="Get the Damping for one given Axis.">GetAngularMotorDampingOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6727458f0a2c7204bca70f0bacde2c16" title="Get the Damping for one given Axis.">GetAngularMotorDampingOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6727458f0a2c7204bca70f0bacde2c16" title="Get the Damping for one given Axis.">GetAngularMotorDampingOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>)); }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6727458f0a2c7204bca70f0bacde2c16">  224</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6727458f0a2c7204bca70f0bacde2c16" title="Get the Damping for one given Axis.">Generic6DofConstraint::GetAngularMotorDampingOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_damping; }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ade49c674f9390d4d280267a13e895527">  228</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ade49c674f9390d4d280267a13e895527" title="Set the Bounciness/Restition for rotation on all three Axis.">Generic6DofConstraint::SetAngularMotorRestitution</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Restistutions)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aee28ab11d29b857f947881457b88adc8" title="For one Axis, set the Restistution/Bounciness/.">SetAngularMotorRestitutionOnAxis</a>(Restistutions.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aee28ab11d29b857f947881457b88adc8" title="For one Axis, set the Restistution/Bounciness/.">SetAngularMotorRestitutionOnAxis</a>(Restistutions.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aee28ab11d29b857f947881457b88adc8" title="For one Axis, set the Restistution/Bounciness/.">SetAngularMotorRestitutionOnAxis</a>(Restistutions.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>); }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aee28ab11d29b857f947881457b88adc8">  231</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aee28ab11d29b857f947881457b88adc8" title="For one Axis, set the Restistution/Bounciness/.">Generic6DofConstraint::SetAngularMotorRestitutionOnAxis</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Restistution, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_bounce = Restistution; }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afa3f0e72f8b484d12ea6d86567f23cc4">  234</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afa3f0e72f8b484d12ea6d86567f23cc4" title="Get the Restistution values for all three axis.">Generic6DofConstraint::GetAngularMotorRestitution</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7490d09d579da24135ad41130b978f41" title="Get the Restistution/Bounciness for a single Axis.">GetAngularMotorRestitutionOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7490d09d579da24135ad41130b978f41" title="Get the Restistution/Bounciness for a single Axis.">GetAngularMotorRestitutionOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7490d09d579da24135ad41130b978f41" title="Get the Restistution/Bounciness for a single Axis.">GetAngularMotorRestitutionOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>)); }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00237"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7490d09d579da24135ad41130b978f41">  237</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7490d09d579da24135ad41130b978f41" title="Get the Restistution/Bounciness for a single Axis.">Generic6DofConstraint::GetAngularMotorRestitutionOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_bounce; }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac12a8d15db434e5267752a0f0a180e7c">  241</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac12a8d15db434e5267752a0f0a180e7c" title="Set whether or not the motor is enabled for all Axis Simultaneously.">Generic6DofConstraint::SetAngularMotorEnabled</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Enableds)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8d4eb7df82ef7c41947a57d6fd3a284c" title="For one Axis, set whether or not the motor is enabled.">SetAngularMotorEnabledOnAxis</a>(Enableds.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8d4eb7df82ef7c41947a57d6fd3a284c" title="For one Axis, set whether or not the motor is enabled.">SetAngularMotorEnabledOnAxis</a>(Enableds.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8d4eb7df82ef7c41947a57d6fd3a284c" title="For one Axis, set whether or not the motor is enabled.">SetAngularMotorEnabledOnAxis</a>(Enableds.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>); }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8d4eb7df82ef7c41947a57d6fd3a284c">  244</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a8d4eb7df82ef7c41947a57d6fd3a284c" title="For one Axis, set whether or not the motor is enabled.">Generic6DofConstraint::SetAngularMotorEnabledOnAxis</a>(<span class="keywordtype">bool</span> Enabled, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_enableMotor = Enabled; }</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#add9c0c8a57e5343037720f0ad3c6f0c9">  247</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#add9c0c8a57e5343037720f0ad3c6f0c9" title="Get a Vector3 with 3 zero or nonzero values that store whether or not a given rotational motor is ena...">Generic6DofConstraint::GetAngularMotorEnabled</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6b23ceb85e3a1b692fc33ff608d908c0" title="Is a specific rotational motor enabled.">GetAngularMotorEnabledOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a92c5b870e5e272494a3b59e3820711b1" title="Rotation on the X axis, when working with only rotational Axis.">AngularXAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6b23ceb85e3a1b692fc33ff608d908c0" title="Is a specific rotational motor enabled.">GetAngularMotorEnabledOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a10ace51bc7264f45f508a5d2f3b48161" title="Rotation on the Y axis, when working with only rotational Axis.">AngularYAsRotationalAxis</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6b23ceb85e3a1b692fc33ff608d908c0" title="Is a specific rotational motor enabled.">GetAngularMotorEnabledOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ac6a8eb97d8f00bbbb919de220b2d17a8" title="Rotation on the Z axis, when working with only rotational Axis.">AngularZAsRotationalAxis</a>)); }</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6b23ceb85e3a1b692fc33ff608d908c0">  250</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a6b23ceb85e3a1b692fc33ff608d908c0" title="Is a specific rotational motor enabled.">Generic6DofConstraint::GetAngularMotorEnabledOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getRotationalLimitMotor(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a54fa075c03de60b10db1319f446692cd" title="Convert to internal Axis IDs from external or internal axis IDs.">AxisToAngularAxis</a>(Axis))-&gt;m_enableMotor; }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment"></span>        <span class="comment">// Generic6DofConstraint Linear Limit and Motor Details</span></div>
<div class="line"><a name="l00255"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab0cc4a4821c728d9047c272bc0b02dbe">  255</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab0cc4a4821c728d9047c272bc0b02dbe" title="Set the Softness of the linear Limits.">Generic6DofConstraint::SetLinearLimitSoftness</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Softness)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_limitSoftness = Softness; }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7dc40e4a6187bb94c838e768acefa7a3">  258</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7dc40e4a6187bb94c838e768acefa7a3" title="Get the Softness of the linear Limits.">Generic6DofConstraint::GetLinearLimitSoftness</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_limitSoftness; }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00261"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5535bbf24301fd9a01d28c6ffc588c5">  261</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5535bbf24301fd9a01d28c6ffc588c5" title="Set the Damping of the linear Limits.">Generic6DofConstraint::SetLinearLimitDamping</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Damping)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_damping = Damping; }</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div>
<div class="line"><a name="l00264"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a90f3f8fedb89a08c3da27a15c951530d">  264</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a90f3f8fedb89a08c3da27a15c951530d" title="Get the Damping of the linear Limits.">Generic6DofConstraint::GetLinearLimitDamping</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_damping; }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;</div>
<div class="line"><a name="l00267"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7ec546b02f3d4b5a28f91c884e7cae96">  267</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7ec546b02f3d4b5a28f91c884e7cae96" title="Set the Restitution of the linear Limits.">Generic6DofConstraint::SetLinearLimitRestitution</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Restitution)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_restitution = Restitution; }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a9ce80a6384e208bb3399eec2ac0da0d3">  270</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a9ce80a6384e208bb3399eec2ac0da0d3" title="Get the Restitution of the linear Limits.">Generic6DofConstraint::GetLinearLimitRestitution</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_restitution; }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a073a1ce0cde9398387eced26d3b597db">  274</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a073a1ce0cde9398387eced26d3b597db" title="Set the Linear Motor Maximum force on all 3 translation axis.">Generic6DofConstraint::SetLinearMotorMaxForce</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Forces)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5800182d6b0307c2edf6ff4be99552ca" title="For one Axis, set the Maximimum Motor Force.">SetLinearMotorMaxForceOnAxis</a>(Forces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a8e0f5be4d9c8023e588d4cb467b039e9" title="Translation on the X axis.">LinearX</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5800182d6b0307c2edf6ff4be99552ca" title="For one Axis, set the Maximimum Motor Force.">SetLinearMotorMaxForceOnAxis</a>(Forces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ad19e5642c1d3f61319f908e4be3a2fab" title="Translation on the Y axis.">LinearY</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5800182d6b0307c2edf6ff4be99552ca" title="For one Axis, set the Maximimum Motor Force.">SetLinearMotorMaxForceOnAxis</a>(Forces.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a4283c8172d3c963c42dffb974d2c0c91" title="Translation on the Z axis.">LinearZ</a>); }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5800182d6b0307c2edf6ff4be99552ca">  277</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5800182d6b0307c2edf6ff4be99552ca" title="For one Axis, set the Maximimum Motor Force.">Generic6DofConstraint::SetLinearMotorMaxForceOnAxis</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Force, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_maxMotorForce[Axis] = Force; }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3aa63011ae60b0c5812feee741a36c93">  280</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3aa63011ae60b0c5812feee741a36c93" title="Get the Max Motor Force for each Axis.">Generic6DofConstraint::GetLinearMotorMaxForce</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3b3da9be9acf6523de30d85dbc7b92a6" title="Get the Max motor Force on a certain Axis.">GetLinearMotorMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a8e0f5be4d9c8023e588d4cb467b039e9" title="Translation on the X axis.">LinearX</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3b3da9be9acf6523de30d85dbc7b92a6" title="Get the Max motor Force on a certain Axis.">GetLinearMotorMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ad19e5642c1d3f61319f908e4be3a2fab" title="Translation on the Y axis.">LinearY</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3b3da9be9acf6523de30d85dbc7b92a6" title="Get the Max motor Force on a certain Axis.">GetLinearMotorMaxForceOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a4283c8172d3c963c42dffb974d2c0c91" title="Translation on the Z axis.">LinearZ</a>)); }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3b3da9be9acf6523de30d85dbc7b92a6">  283</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3b3da9be9acf6523de30d85dbc7b92a6" title="Get the Max motor Force on a certain Axis.">Generic6DofConstraint::GetLinearMotorMaxForceOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_maxMotorForce[Axis]; }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div>
<div class="line"><a name="l00286"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aba9d2bdcc06c539a2d2f35682f57d969">  286</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aba9d2bdcc06c539a2d2f35682f57d969" title="Set the Target velocity of the motor on each anuglar axis.">Generic6DofConstraint::SetLinearMotorTargetVelocity</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Velocities)</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4a272a64763a9045c9e6697cafa41542" title="For one Axis, set the target velocity of the Linear motor.">SetLinearMotorTargetVelocityOnAxis</a>(Velocities.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a8e0f5be4d9c8023e588d4cb467b039e9" title="Translation on the X axis.">LinearX</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4a272a64763a9045c9e6697cafa41542" title="For one Axis, set the target velocity of the Linear motor.">SetLinearMotorTargetVelocityOnAxis</a>(Velocities.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ad19e5642c1d3f61319f908e4be3a2fab" title="Translation on the Y axis.">LinearY</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4a272a64763a9045c9e6697cafa41542" title="For one Axis, set the target velocity of the Linear motor.">SetLinearMotorTargetVelocityOnAxis</a>(Velocities.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a4283c8172d3c963c42dffb974d2c0c91" title="Translation on the Z axis.">LinearZ</a>); }</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4a272a64763a9045c9e6697cafa41542">  289</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4a272a64763a9045c9e6697cafa41542" title="For one Axis, set the target velocity of the Linear motor.">Generic6DofConstraint::SetLinearMotorTargetVelocityOnAxis</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Velocity, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_targetVelocity[Axis] = Velocity; }</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div>
<div class="line"><a name="l00292"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae0ce24fe123f55468cc27d486d6e8b8a">  292</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae0ce24fe123f55468cc27d486d6e8b8a" title="Get the target velocity for all Linear Axis.">Generic6DofConstraint::GetLinearMotorTargetVelocity</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#abd7220dd264a0667190a95009ce93b29" title="Get the Target Velocity for one axis.">GetLinearMotorTargetVelocityOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a8e0f5be4d9c8023e588d4cb467b039e9" title="Translation on the X axis.">LinearX</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#abd7220dd264a0667190a95009ce93b29" title="Get the Target Velocity for one axis.">GetLinearMotorTargetVelocityOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ad19e5642c1d3f61319f908e4be3a2fab" title="Translation on the Y axis.">LinearY</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#abd7220dd264a0667190a95009ce93b29" title="Get the Target Velocity for one axis.">GetLinearMotorTargetVelocityOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a4283c8172d3c963c42dffb974d2c0c91" title="Translation on the Z axis.">LinearZ</a>)); }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#abd7220dd264a0667190a95009ce93b29">  295</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#abd7220dd264a0667190a95009ce93b29" title="Get the Target Velocity for one axis.">Generic6DofConstraint::GetLinearMotorTargetVelocityOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_targetVelocity[Axis]; }</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a63c3b5bd4860828d6664e070624b7d3e">  299</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a63c3b5bd4860828d6664e070624b7d3e" title="Set whether or not the motor is enabled for all Linear Axis Simultaneously.">Generic6DofConstraint::SetLinearMotorEnabled</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>&amp; Enableds)</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            { <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab2b0be51f0cb64056d9bd8d2d109b974" title="For one Axis, set whether or not the motor is enabled.">SetLinearMotorEnabledOnAxis</a>(Enableds.<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa858d9bc5ac5ad1b685b7088c94c05f6" title="Coordinate on the X vector.">X</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a8e0f5be4d9c8023e588d4cb467b039e9" title="Translation on the X axis.">LinearX</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab2b0be51f0cb64056d9bd8d2d109b974" title="For one Axis, set whether or not the motor is enabled.">SetLinearMotorEnabledOnAxis</a>(Enableds.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a2303527e4ea4cd1659a23320627cd62c" title="Coordinate on the Y vector.">Y</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ad19e5642c1d3f61319f908e4be3a2fab" title="Translation on the Y axis.">LinearY</a>);  <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab2b0be51f0cb64056d9bd8d2d109b974" title="For one Axis, set whether or not the motor is enabled.">SetLinearMotorEnabledOnAxis</a>(Enableds.<a class="code" href="classMezzanine_1_1Vector3.xhtml#a9b887faced986921956f20f3e4cb8ddc" title="Coordinate on the Z vector.">Z</a>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a4283c8172d3c963c42dffb974d2c0c91" title="Translation on the Z axis.">LinearZ</a>); }</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab2b0be51f0cb64056d9bd8d2d109b974">  302</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab2b0be51f0cb64056d9bd8d2d109b974" title="For one Axis, set whether or not the motor is enabled.">Generic6DofConstraint::SetLinearMotorEnabledOnAxis</a>(<span class="keywordtype">bool</span> Enabled, <span class="keywordtype">int</span> Axis)</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_enableMotor[Axis] = Enabled; }</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aabcc4ffd1685f2d1fd69110d07ac8701">  305</a></span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aabcc4ffd1685f2d1fd69110d07ac8701" title="Get a Vector3 with 3 zero or nonzero values that store whether or not a given rotational motor is ena...">Generic6DofConstraint::GetLinearMotorEnabled</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa13ee498ae4dbe756ea5a02b32647b76" title="Is a specific Linear motor enabled.">GetLinearMotorEnabledOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a8e0f5be4d9c8023e588d4cb467b039e9" title="Translation on the X axis.">LinearX</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa13ee498ae4dbe756ea5a02b32647b76" title="Is a specific Linear motor enabled.">GetLinearMotorEnabledOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565ad19e5642c1d3f61319f908e4be3a2fab" title="Translation on the Y axis.">LinearY</a>), <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa13ee498ae4dbe756ea5a02b32647b76" title="Is a specific Linear motor enabled.">GetLinearMotorEnabledOnAxis</a>(<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5f11bf632d324dd4c3f5645c85e0565a4283c8172d3c963c42dffb974d2c0c91" title="Translation on the Z axis.">LinearZ</a>)); }</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00308"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa13ee498ae4dbe756ea5a02b32647b76">  308</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa13ee498ae4dbe756ea5a02b32647b76" title="Is a specific Linear motor enabled.">Generic6DofConstraint::GetLinearMotorEnabledOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getTranslationalLimitMotor()-&gt;m_enableMotor[Axis]; }</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">        ////////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment"></span>        <span class="comment">// Generic6DofConstraint Axis, Params and other Details</span></div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae54f79fc053e8036ada6c59f699c1d83">  315</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#ab434efbcfdfe803d6f7cc014e7794868" title="Used to Store lists of param for return types.">Constraint::ParamList</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae54f79fc053e8036ada6c59f699c1d83">Generic6DofConstraint::ValidParamOnAxis</a>(<span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#ab434efbcfdfe803d6f7cc014e7794868" title="Used to Store lists of param for return types.">Constraint::ParamList</a> Results;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">if</span>(0&lt;=Axis &amp;&amp; 5&gt;=Axis)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                Results.push_back(Con_Stop_ERP);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                Results.push_back(<a class="code" href="namespaceMezzanine_1_1Physics.xhtml#aa640f4c4b2baf4a4039db76fd792d2c1ac7067723ec3340acdf2941f1a4f56569" title="CFM values adds some small value to the main diagonal on the constraint matrix to prevent degenerate ...">Con_CFM</a>);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                Results.push_back(Con_Stop_CFM);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            <span class="keywordflow">return</span> Results;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        }</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div>
<div class="line"><a name="l00327"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a123e6cd8398e9953a4eb49bbc9d81208">  327</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547" title="Used to Store lists of Int Axis for return types.">Constraint::AxisList</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a123e6cd8398e9953a4eb49bbc9d81208" title="Get a sorted (low to high) list of all axis that operate linearly (that lock sliding/translation) ...">Generic6DofConstraint::ValidLinearAxis</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547" title="Used to Store lists of Int Axis for return types.">Constraint::AxisList</a> Results;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            Results.push_back(0);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            Results.push_back(1);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            Results.push_back(2);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">return</span> Results;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        }</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div>
<div class="line"><a name="l00336"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5fea5dc93fac7ad3ae3bc52acd1d01b">  336</a></span>&#160;        <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547" title="Used to Store lists of Int Axis for return types.">Constraint::AxisList</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5fea5dc93fac7ad3ae3bc52acd1d01b" title="Get A list sorted (low to high) of all axis that operate Angularly (that lock sliding/translation) ...">Generic6DofConstraint::ValidAngularAxis</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            <a class="code" href="classMezzanine_1_1Physics_1_1Constraint.xhtml#a58bc7d514090f3043c9f63f470ccc547" title="Used to Store lists of Int Axis for return types.">Constraint::AxisList</a> Results;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            Results.push_back(3);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            Results.push_back(4);</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            Results.push_back(5);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keywordflow">return</span> Results;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        }</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac95504334575b3815c5c96d0d61e235c">  345</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac95504334575b3815c5c96d0d61e235c">Generic6DofConstraint::HasParamBeenSet</a>(<a class="code" href="namespaceMezzanine_1_1Physics.xhtml#aa640f4c4b2baf4a4039db76fd792d2c1" title="Used by constraints for setting some parameters.">ConstraintParam</a> Param, <span class="keywordtype">int</span> Axis)<span class="keyword"> const</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="comment">// the logic here should match the logic in the source at http://bulletphysics.com/Bullet/BulletFull/btGeneric6DofConstraint_8cpp_source.html#l00964</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <span class="keywordflow">if</span>(0&gt;Axis || 5&lt;Axis)</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            <span class="keywordflow">return</span>  ( Con_Stop_ERP==Param &amp;&amp; this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFlags() &amp; (BT_6DOF_FLAGS_ERP_STOP &lt;&lt; (Axis * BT_6DOF_FLAGS_AXIS_SHIFT)) )   ||  <span class="comment">//if we are checking the stop_erp AND the stop_erp bit is set for the correct axis</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;                    ( Con_Stop_CFM==Param &amp;&amp; this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFlags() &amp; (BT_6DOF_FLAGS_CFM_STOP &lt;&lt; (Axis * BT_6DOF_FLAGS_AXIS_SHIFT)) )   ||  <span class="comment">//if we are checking the stop_cfm AND the stop_cfm bit is set</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;                    ( <a class="code" href="namespaceMezzanine_1_1Physics.xhtml#aa640f4c4b2baf4a4039db76fd792d2c1ac7067723ec3340acdf2941f1a4f56569" title="CFM values adds some small value to the main diagonal on the constraint matrix to prevent degenerate ...">Con_CFM</a>==Param      &amp;&amp; this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getFlags() &amp; (BT_6DOF_FLAGS_CFM_NORM &lt;&lt; (Axis * BT_6DOF_FLAGS_AXIS_SHIFT)) )   ;   <span class="comment">//if we are checking the cfm AND the cfm bit is set</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;</div>
<div class="line"><a name="l00355"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a667671624f928118c399540b021953fa">  355</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a667671624f928118c399540b021953fa" title="Retrieve the stored value from the physics subsystem(bullet)">Generic6DofConstraint::GetUseFrameOffset</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keyword">            </span>{ <span class="keywordflow">return</span> this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;getUseFrameOffset(); }</div>
<div class="line"><a name="l00357"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a318b400bcc326baf11c8d32f546e3bec">  357</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a318b400bcc326baf11c8d32f546e3bec" title="Set the stored value for UseFrameOffset on this hinge in the physics subsystem(bullet)">Generic6DofConstraint::SetUseFrameOffset</a>(<span class="keywordtype">bool</span> FrameOffset)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            { this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae3d7e21b9b64c1218d8ea6f9646b7089" title="Bullet constraint that this class encapsulates.">Generic6dof</a>-&gt;setUseFrameOffset(FrameOffset); }</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment"></span>        <span class="comment">// Generic6DofConstraint Serialization</span></div>
<div class="line"><a name="l00362"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5d43dae6450098375262610f567f6019">  362</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5d43dae6450098375262610f567f6019" title="Convert this class to an XML::Node ready for serialization.">Generic6DofConstraint::ProtoSerialize</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; CurrentRoot)<span class="keyword"> const</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keyword">        </span>{</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> G6dofNode = CurrentRoot.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">Generic6DofConstraint::SerializableName</a>());                     <span class="comment">// The base node all the base constraint stuff will go in</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="keywordflow">if</span> (!G6dofNode)</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create G6dofNode&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinLimUpp = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;LinearLimitUpper&quot;</span>);                    <span class="comment">// Basic Limit Stuff</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            <span class="keywordflow">if</span> (!LinLimUpp)</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LinLimUpp&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4409e670e8c73bb75042b2ea4eab4f6a" title="Get the lower limits on translation.">GetLinearLimitUpper</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(LinLimUpp);</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinLimLow = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;LinearLimitLower&quot;</span>);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            <span class="keywordflow">if</span> (!LinLimLow)</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LinLimLow&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a572999fe9d2090cba4fef4e8cf41dc59" title="Get the Upper limits on translation.">GetLinearLimitLower</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(LinLimLow);</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngLimUpp = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;AngularLimitUpper&quot;</span>);</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keywordflow">if</span> (!AngLimUpp)</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create AngLimUpp&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#af2815cf43932a4ad5f366494c44f38f1" title="Get the Power limits on rotation.">GetAngularLimitUpper</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(AngLimUpp);</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngLimLow = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;AngularLimitLower&quot;</span>);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keywordflow">if</span> (!AngLimLow)</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create AngLimLow&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0ed4cff2aebc6da5adbddd9e4853c2ec" title="Get the Upper limits on rotation.">GetAngularLimitLower</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(AngLimLow);</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularLimitMaxForce = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;AngularLimitMaxForce&quot;</span>);                   <span class="comment">// Angular Limit and Motor Details</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordflow">if</span> (!AngularLimitMaxForce)</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create AngularLimitMaxForce&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac0d150fed2ef9e4434433a82a21d9f4f" title="Get the Maximimum amount of force applied to ensure limits are not surpassed.">GetAngularLimitMaxForce</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(AngularLimitMaxForce);</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorTargetVelocity = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;AngularMotorTargetVelocity&quot;</span>);</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            <span class="keywordflow">if</span> (!AngularMotorTargetVelocity)</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create AngularMotorTargetVelocity&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#adf97df6e79fbe12cd821a948dc6e4df5" title="Get the target velocity for all angular Axis.">GetAngularMotorTargetVelocity</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(AngularMotorTargetVelocity);</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorMaxForce = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;AngularMotorMaxForce&quot;</span>);</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="keywordflow">if</span> (!AngularMotorMaxForce)</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create AngularMotorMaxForce&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0421df6e6cd44cf86cdac51006866d03" title="Get the Max Motor Force for each Axis.">GetAngularMotorMaxForce</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(AngularMotorMaxForce);</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorDamping = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;AngularMotorDamping&quot;</span>);</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="keywordflow">if</span> (!AngularMotorDamping)</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create AngularMotorDamping&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3e5b2687a8347ae623857e54f89ba49c" title="Get the Damping for all Angular Axis.">GetAngularMotorDamping</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(AngularMotorDamping);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorRestitution = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;AngularMotorRestitution&quot;</span>);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            <span class="keywordflow">if</span> (!AngularMotorRestitution)</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create AngularMotorRestitution&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afa3f0e72f8b484d12ea6d86567f23cc4" title="Get the Restistution values for all three axis.">GetAngularMotorRestitution</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(AngularMotorRestitution);</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorEnabled = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;AngularMotorEnabled&quot;</span>);</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;            <span class="keywordflow">if</span> (!AngularMotorEnabled)</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create AngularMotorEnabled&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#add9c0c8a57e5343037720f0ad3c6f0c9" title="Get a Vector3 with 3 zero or nonzero values that store whether or not a given rotational motor is ena...">GetAngularMotorEnabled</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(AngularMotorEnabled);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinearMotorMaxForce = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;LinearMotorMaxForce&quot;</span>);                   <span class="comment">// Linear limit and motor details</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;            <span class="keywordflow">if</span> (!LinearMotorMaxForce)</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LinearMotorMaxForce&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a3aa63011ae60b0c5812feee741a36c93" title="Get the Max Motor Force for each Axis.">GetLinearMotorMaxForce</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(LinearMotorMaxForce);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinearMotorTargetVelocity = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;LinearMotorTargetVelocity&quot;</span>);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;            <span class="keywordflow">if</span> (!LinearMotorTargetVelocity)</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LinearMotorTargetVelocity&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae0ce24fe123f55468cc27d486d6e8b8a" title="Get the target velocity for all Linear Axis.">GetLinearMotorTargetVelocity</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(LinearMotorTargetVelocity);</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinearMotorEnabled = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a65772e1f13ac21655e3ffbe8ffe4aaa1" title="Creates a Node and makes it a child of this one.">AppendChild</a>(<span class="stringliteral">&quot;LinearMotorEnabled&quot;</span>);</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="keywordflow">if</span> (!LinearMotorEnabled)</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LinearMotorEnabled&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aabcc4ffd1685f2d1fd69110d07ac8701" title="Get a Vector3 with 3 zero or nonzero values that store whether or not a given rotational motor is ena...">GetLinearMotorEnabled</a>().<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6f0f6a536da4fe69db00960953ef373b" title="Convert this class to an XML::Node ready for serialization.">ProtoSerialize</a>(LinearMotorEnabled);</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Mezzanine::XML::Attribute</a> Version = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;Version&quot;</span>);                            <span class="comment">// Version</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;            <span class="keywordflow">if</span> (!Version)</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create Version&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;            Version.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(1);</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Mezzanine::XML::Attribute</a> LinearLimitSoftness = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;LinearLimitSoftness&quot;</span>);    <span class="comment">// Linear Attributes.</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="keywordflow">if</span> (!LinearLimitSoftness)</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LinearLimitSoftness&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            LinearLimitSoftness.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7dc40e4a6187bb94c838e768acefa7a3" title="Get the Softness of the linear Limits.">GetLinearLimitSoftness</a>());</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Mezzanine::XML::Attribute</a> LinearLimitDamping = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;LinearLimitDamping&quot;</span>);</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <span class="keywordflow">if</span> (!LinearLimitDamping)</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LinearLimitDamping&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            LinearLimitDamping.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a90f3f8fedb89a08c3da27a15c951530d" title="Get the Damping of the linear Limits.">GetLinearLimitDamping</a>());</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml" title="A light-weight handle for manipulating attributes in DOM tree.">Mezzanine::XML::Attribute</a> LinearLimitRestitution = G6dofNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a20ea63a61ca1a7df2e00e074178bd9a4" title="Creates an Attribute and puts it at the end of this Nodes attributes.">AppendAttribute</a>(<span class="stringliteral">&quot;LinearLimitRestitution&quot;</span>);</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;            <span class="keywordflow">if</span> (!LinearLimitRestitution)</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                { <a class="code" href="namespaceMezzanine.xhtml#ab061665515c8e8a8b09ee54d93612da1" title="Simply does some string concatenation, then throws an Exception.">SerializeError</a>(<span class="stringliteral">&quot;Create LinearLimitRestitution&quot;</span>, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;            LinearLimitRestitution.<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#afff322c3640040f0054c6d1e346891fc" title="Set the value of this.">SetValue</a>(this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a9ce80a6384e208bb3399eec2ac0da0d3" title="Get the Restitution of the linear Limits.">GetLinearLimitRestitution</a>());</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1DualTransformConstraint.xhtml#aaca2896f7e64d80c37ad05f60b256d60" title="Convert this class to an XML::Node ready for serialization.">DualTransformConstraint::ProtoSerialize</a>(G6dofNode);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div>
<div class="line"><a name="l00460"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5e67a711c16f6c4ab5c941ee25b0f47e">  460</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5e67a711c16f6c4ab5c941ee25b0f47e" title="Take the data stored in an XML and overwrite this instance of this object with it.">Generic6DofConstraint::ProtoDeSerialize</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; OneNode)</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        {</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            <span class="keywordflow">if</span> ( <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>())==this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">Generic6DofConstraint::SerializableName</a>() )</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            {</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;                <span class="keywordflow">if</span>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;Version&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a433fef4f74eaa825755b53b1baea539a" title="Attempts to convert the value of the attribute to an int and returns the results.">AsInt</a>() == 1)</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                {</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> DualTranny = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;DualTransformConstraint&quot;</span>);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                    <span class="keywordflow">if</span>(!DualTranny)</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate DualTransforn node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1DualTransformConstraint.xhtml#a42bbe8d59b2db5db2c53bb5fcdbb252d" title="Take the data stored in an XML and overwrite this instance of this object with it.">DualTransformConstraint::ProtoDeSerialize</a>(DualTranny);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ab0cc4a4821c728d9047c272bc0b02dbe" title="Set the Softness of the linear Limits.">SetLinearLimitSoftness</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;LinearLimitSoftness&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>());</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa5535bbf24301fd9a01d28c6ffc588c5" title="Set the Damping of the linear Limits.">SetLinearLimitDamping</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;LinearLimitDamping&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>());</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a7ec546b02f3d4b5a28f91c884e7cae96" title="Set the Restitution of the linear Limits.">SetLinearLimitRestitution</a>(OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a7257f2f9f8e08461260afae0d5062aa7" title="Attempt to get an Attribute on this Node with a given name.">GetAttribute</a>(<span class="stringliteral">&quot;LinearLimitRestitution&quot;</span>).<a class="code" href="classMezzanine_1_1XML_1_1Attribute.xhtml#a4a8e7e953f94b05f8be0f0beb3ae1fe3" title="Attempts to convert the value of the attribute to a Real and returns the results.">AsReal</a>());</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                    <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> vec;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinearLimitUpper = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;LinearLimitUpper&quot;</span>);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                    <span class="keywordflow">if</span>(!LinearLimitUpper || !LinearLimitUpper.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate LinearLimitUpper node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;                    vec.ProtoDeSerialize(LinearLimitUpper.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a0fe6b3563691e9fd610c842301256b85" title="Set the lower limits on translation.">SetLinearLimitUpper</a>(vec);</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinearLimitLower = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;LinearLimitLower&quot;</span>);</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;                    <span class="keywordflow">if</span>(!LinearLimitLower || !LinearLimitLower.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate LinearLimitLower node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;                    vec.ProtoDeSerialize(LinearLimitLower.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a39d0ff6eed9c23082b7b58ea9d94cd9b" title="Set the Upper limits on translation.">SetLinearLimitLower</a>(vec);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularLimitUpper = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AngularLimitUpper&quot;</span>);</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                    <span class="keywordflow">if</span>(!AngularLimitUpper || !AngularLimitUpper.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate AngularLimitUpper node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;                    vec.ProtoDeSerialize(AngularLimitUpper.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a4dd9506a9fe441600259f744b79e1af1" title="Set the Upper limits on rotation.">SetAngularLimitUpper</a>(vec);</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularLimitLower = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AngularLimitLower&quot;</span>);</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;                    <span class="keywordflow">if</span>(!AngularLimitLower || !AngularLimitLower.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate AngularLimitLower node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;                    vec.ProtoDeSerialize(AngularLimitLower.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a23ea7a9086535a8aea7e211cb3dfc984" title="Set the Lower limits on rotation.">SetAngularLimitLower</a>(vec);</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularLimitMaxForce = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AngularLimitMaxForce&quot;</span>);</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                    <span class="keywordflow">if</span>(!AngularLimitMaxForce || !AngularLimitMaxForce.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate AngularLimitMaxForce node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                    vec.ProtoDeSerialize(AngularLimitMaxForce.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#afaa1a8fcbb5edf32468dfe1bcab85fc9" title="Set the Maximimum amount of force applied to ensure limits are not surpassed.">SetAngularLimitMaxForce</a>(vec);</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorTargetVelocity = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AngularMotorTargetVelocity&quot;</span>);</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                    <span class="keywordflow">if</span>(!AngularMotorTargetVelocity || !AngularMotorTargetVelocity.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate AngularMotorTargetVelocity node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                    vec.ProtoDeSerialize(AngularMotorTargetVelocity.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aa99740c4f4919309902f7878e5816a88" title="Set the Target velocity of the motor on each anuglar axis.">SetAngularMotorTargetVelocity</a>(vec);</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorMaxForce = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AngularMotorMaxForce&quot;</span>);</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                    <span class="keywordflow">if</span>(!AngularMotorMaxForce || !AngularMotorMaxForce.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate AngularMotorMaxForce node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;                    vec.ProtoDeSerialize(AngularMotorMaxForce.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a95ba01ce14d3375aae74a05f9392eb88" title="Set the Angular Motor Maximum force on all 3 rotational axis.">SetAngularMotorMaxForce</a>(vec);</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorDamping = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AngularMotorDamping&quot;</span>);</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                    <span class="keywordflow">if</span>(!AngularMotorDamping || !AngularMotorDamping.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate AngularMotorDamping node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                    vec.ProtoDeSerialize(AngularMotorDamping.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ae7ae10ec47a67a72da219a7b79a09bc3" title="Set the Angular Motor Damping for each Angular Axis.">SetAngularMotorDamping</a>(vec);</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorRestitution = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AngularMotorRestitution&quot;</span>);</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                    <span class="keywordflow">if</span>(!AngularMotorRestitution || !AngularMotorRestitution.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate AngularMotorRestitution node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                    vec.ProtoDeSerialize(AngularMotorRestitution.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ade49c674f9390d4d280267a13e895527" title="Set the Bounciness/Restition for rotation on all three Axis.">SetAngularMotorRestitution</a>(vec);</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> AngularMotorEnabled = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;AngularMotorEnabled&quot;</span>);</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;                    <span class="keywordflow">if</span>(!AngularMotorEnabled || !AngularMotorEnabled.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate AngularMotorEnabled node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                    vec.ProtoDeSerialize(AngularMotorEnabled.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#ac12a8d15db434e5267752a0f0a180e7c" title="Set whether or not the motor is enabled for all Axis Simultaneously.">SetAngularMotorEnabled</a>(vec);</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinearMotorMaxForce = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;LinearMotorMaxForce&quot;</span>);</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                    <span class="keywordflow">if</span>(!LinearMotorMaxForce || !LinearMotorMaxForce.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate LinearMotorMaxForce node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                    vec.ProtoDeSerialize(LinearMotorMaxForce.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a073a1ce0cde9398387eced26d3b597db" title="Set the Linear Motor Maximum force on all 3 translation axis.">SetLinearMotorMaxForce</a>(vec);</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinearMotorTargetVelocity = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;LinearMotorTargetVelocity&quot;</span>);</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                    <span class="keywordflow">if</span>(!LinearMotorTargetVelocity || !LinearMotorTargetVelocity.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate LinearMotorTargetVelocity node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                    vec.ProtoDeSerialize(LinearMotorTargetVelocity.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#aba9d2bdcc06c539a2d2f35682f57d969" title="Set the Target velocity of the motor on each anuglar axis.">SetLinearMotorTargetVelocity</a>(vec);</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                    <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> LinearMotorEnabled = OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a9c5b7b5376c9444d3d1d0bfeb47e4dc4" title="Attempt to get a child Node with a given name.">GetChild</a>(<span class="stringliteral">&quot;LinearMotorEnabled&quot;</span>);</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                    <span class="keywordflow">if</span>(!LinearMotorEnabled || !LinearMotorEnabled.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>())</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;                        { <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;locate LinearMotorEnabled node&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>()); }</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;                    vec.ProtoDeSerialize(LinearMotorEnabled.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#a4fd3f099201e3e6001bdf2afea598a8a" title="Get the first child Node of this Node.">GetFirstChild</a>());</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;                    this-&gt;<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a63c3b5bd4860828d6664e070624b7d3e" title="Set whether or not the motor is enabled for all Linear Axis Simultaneously.">SetLinearMotorEnabled</a>(vec);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;                }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;                    <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<span class="stringliteral">&quot;find usable serialization version&quot;</span>,<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>());</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                }</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            }<span class="keywordflow">else</span>{</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                <a class="code" href="namespaceMezzanine.xhtml#aec75a8a3369287cb02f331c62b32df73" title="Simply does some string concatenation, then throws an Exception.">DeSerializeError</a>(<a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>(<span class="stringliteral">&quot;find correct class to deserialize, found a &quot;</span>)+OneNode.<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml#ac1b2f6b9c5b1380c524e6a77011aeda4" title="ptrdiff_tGet the name of this Node.">Name</a>(),<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">SerializableName</a>());</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            }</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        }</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div>
<div class="line"><a name="l00562"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf">  562</a></span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#accfd0f5da00121827a58d6bdce6470cf" title="Get the name of the the XML tag this class will leave behind as its instances are serialized...">Generic6DofConstraint::SerializableName</a>()</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            { <span class="keywordflow">return</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>(<span class="stringliteral">&quot;Generic6DofConstraint&quot;</span>); }</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    }<span class="comment">//Physics</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment">///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment"></span><span class="comment">// Class External &lt;&lt; Operators for streaming or assignment</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;std::ostream&amp; operator &lt;&lt; (std::ostream&amp; stream, <span class="keyword">const</span> <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml" title="Create simple but specific limits on any axis of movement or rotation.">Mezzanine::Physics::Generic6DofConstraint</a>&amp; x)</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;{</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a9015c5e668e14b857a27888c56934148" title="Convert any class that supports serialization or has a serializer to a string of chars in a stream...">Mezzanine::Serialize</a>(stream,x);</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="keywordflow">return</span> stream;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;}</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;std::istream&amp; operator &gt;&gt; (std::istream&amp; stream, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml" title="Create simple but specific limits on any axis of movement or rotation.">Mezzanine::Physics::Generic6DofConstraint</a>&amp; x)</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    { <span class="keywordflow">return</span> <a class="code" href="namespaceMezzanine.xhtml#ad8989ea81ccd1ad6d59a11921f0239a4" title="Deserialize the next xml tag in the stream into a specific in memory class instance.">Mezzanine::DeSerialize</a>(stream, x); }</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="keywordtype">void</span> operator &gt;&gt; (<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Mezzanine::XML::Node</a>&amp; OneNode, <a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml" title="Create simple but specific limits on any axis of movement or rotation.">Mezzanine::Physics::Generic6DofConstraint</a>&amp; x)</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    { x.<a class="code" href="classMezzanine_1_1Physics_1_1Generic6DofConstraint.xhtml#a5e67a711c16f6c4ab5c941ee25b0f47e" title="Take the data stored in an XML and overwrite this instance of this object with it.">ProtoDeSerialize</a>(OneNode); }</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Sep 14 2013 01:00:16 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
