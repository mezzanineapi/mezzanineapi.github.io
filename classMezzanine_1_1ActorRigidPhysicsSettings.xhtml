<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::ActorRigidPhysicsSettings Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;16,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml">ActorRigidPhysicsSettings</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1ActorRigidPhysicsSettings-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::ActorRigidPhysicsSettings Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a helper class for configuring physics settings of an <a class="el" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>.  
 <a href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="actorphysicssettings_8h_source.xhtml">actorphysicssettings.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::ActorRigidPhysicsSettings:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ActorRigidPhysicsSettings__inherit__graph.svg" width="230" height="347"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::ActorRigidPhysicsSettings:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ActorRigidPhysicsSettings__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a01aac76583a043e4917546ab6fabe160"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a01aac76583a043e4917546ab6fabe160">ActorRigidPhysicsSettings</a> (<a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *Actor, btRigidBody *PhysicsObject)</td></tr>
<tr class="memdesc:a01aac76583a043e4917546ab6fabe160"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard Constructor.  <a href="#a01aac76583a043e4917546ab6fabe160">More...</a><br/></td></tr>
<tr class="separator:a01aac76583a043e4917546ab6fabe160"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56d106b78dfa0ea5415c7928491e4fa7"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a56d106b78dfa0ea5415c7928491e4fa7">~ActorRigidPhysicsSettings</a> ()</td></tr>
<tr class="memdesc:a56d106b78dfa0ea5415c7928491e4fa7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor.  <a href="#a56d106b78dfa0ea5415c7928491e4fa7">More...</a><br/></td></tr>
<tr class="separator:a56d106b78dfa0ea5415c7928491e4fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafa276832f06cc6a72f8ff0b8ccea155"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#aafa276832f06cc6a72f8ff0b8ccea155">ApplyForce</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Force)</td></tr>
<tr class="memdesc:aafa276832f06cc6a72f8ff0b8ccea155"><td class="mdescLeft">&#160;</td><td class="mdescRight">Push/Apply force to an object.  <a href="#aafa276832f06cc6a72f8ff0b8ccea155">More...</a><br/></td></tr>
<tr class="separator:aafa276832f06cc6a72f8ff0b8ccea155"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a431d7e6e6f8a62d1ff626d2ccf5d7a6d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a431d7e6e6f8a62d1ff626d2ccf5d7a6d">ApplyTorque</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Torque)</td></tr>
<tr class="memdesc:a431d7e6e6f8a62d1ff626d2ccf5d7a6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Spin/Apply Torque to an object.  <a href="#a431d7e6e6f8a62d1ff626d2ccf5d7a6d">More...</a><br/></td></tr>
<tr class="separator:a431d7e6e6f8a62d1ff626d2ccf5d7a6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a5f7320087dc36d235ed9551bba193a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6a5f7320087dc36d235ed9551bba193a"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a6a5f7320087dc36d235ed9551bba193a">ClearStickyContacts</a> ()</td></tr>
<tr class="memdesc:a6a5f7320087dc36d235ed9551bba193a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all the constraints currently active on this object. <br/></td></tr>
<tr class="separator:a6a5f7320087dc36d235ed9551bba193a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afadd3d7e1cee938622fc3781543489eb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#afadd3d7e1cee938622fc3781543489eb">GetAngularDamping</a> () const </td></tr>
<tr class="memdesc:afadd3d7e1cee938622fc3781543489eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Angular damping.  <a href="#afadd3d7e1cee938622fc3781543489eb">More...</a><br/></td></tr>
<tr class="separator:afadd3d7e1cee938622fc3781543489eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b078e767c73636afbabc0434f7af8c7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a5b078e767c73636afbabc0434f7af8c7">GetAngularVelocity</a> () const </td></tr>
<tr class="memdesc:a5b078e767c73636afbabc0434f7af8c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Angular Velocity of this object.  <a href="#a5b078e767c73636afbabc0434f7af8c7">More...</a><br/></td></tr>
<tr class="separator:a5b078e767c73636afbabc0434f7af8c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5b4641d041c0dcbba8ef0a28566ca87"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#af5b4641d041c0dcbba8ef0a28566ca87">GetForce</a> () const </td></tr>
<tr class="memdesc:af5b4641d041c0dcbba8ef0a28566ca87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total Force/Movement on the actor.  <a href="#af5b4641d041c0dcbba8ef0a28566ca87">More...</a><br/></td></tr>
<tr class="separator:af5b4641d041c0dcbba8ef0a28566ca87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec9ec4d94326545b60056043c65bdb49"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#aec9ec4d94326545b60056043c65bdb49">GetIndividualGravity</a> () const </td></tr>
<tr class="memdesc:aec9ec4d94326545b60056043c65bdb49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the gravity being applied to this object.  <a href="#aec9ec4d94326545b60056043c65bdb49">More...</a><br/></td></tr>
<tr class="separator:aec9ec4d94326545b60056043c65bdb49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5cb8f2aa589e7c76d39fee38e8fb5e2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#ac5cb8f2aa589e7c76d39fee38e8fb5e2">GetLinearDamping</a> () const </td></tr>
<tr class="memdesc:ac5cb8f2aa589e7c76d39fee38e8fb5e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the linear damping.  <a href="#ac5cb8f2aa589e7c76d39fee38e8fb5e2">More...</a><br/></td></tr>
<tr class="separator:ac5cb8f2aa589e7c76d39fee38e8fb5e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad238bf0f6d19a65a79a7b8bc0fb552bd"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#ad238bf0f6d19a65a79a7b8bc0fb552bd">GetLinearVelocity</a> () const </td></tr>
<tr class="memdesc:ad238bf0f6d19a65a79a7b8bc0fb552bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the Linear Velocity of this object.  <a href="#ad238bf0f6d19a65a79a7b8bc0fb552bd">More...</a><br/></td></tr>
<tr class="separator:ad238bf0f6d19a65a79a7b8bc0fb552bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71fae7a868e31ce14612336292bc0fca"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a71fae7a868e31ce14612336292bc0fca">GetLocalInertia</a> () const </td></tr>
<tr class="memdesc:a71fae7a868e31ce14612336292bc0fca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current intertia of the Actor.  <a href="#a71fae7a868e31ce14612336292bc0fca">More...</a><br/></td></tr>
<tr class="separator:a71fae7a868e31ce14612336292bc0fca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6426940001f8d8e112763f6619278874"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a6426940001f8d8e112763f6619278874">GetMass</a> () const </td></tr>
<tr class="memdesc:a6426940001f8d8e112763f6619278874"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the total Mass of the actor.  <a href="#a6426940001f8d8e112763f6619278874">More...</a><br/></td></tr>
<tr class="separator:a6426940001f8d8e112763f6619278874"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3b11efb413c1e6a80e4fd5cd3f44715"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structMezzanine_1_1StickyData.xhtml">StickyData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#af3b11efb413c1e6a80e4fd5cd3f44715">GetStickyData</a> () const </td></tr>
<tr class="memdesc:af3b11efb413c1e6a80e4fd5cd3f44715"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the struct storing the data related to sticky behavior.  <a href="#af3b11efb413c1e6a80e4fd5cd3f44715">More...</a><br/></td></tr>
<tr class="separator:af3b11efb413c1e6a80e4fd5cd3f44715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7406aca16a67e3ef959ff9cb76a0f44"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#ae7406aca16a67e3ef959ff9cb76a0f44">GetTorque</a> () const </td></tr>
<tr class="memdesc:ae7406aca16a67e3ef959ff9cb76a0f44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Torque/Rotation.  <a href="#ae7406aca16a67e3ef959ff9cb76a0f44">More...</a><br/></td></tr>
<tr class="separator:ae7406aca16a67e3ef959ff9cb76a0f44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94dc33b8a4e969908a6ff97106b98d58"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a94dc33b8a4e969908a6ff97106b98d58">ProtoDeSerialize</a> (const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;OneNode)</td></tr>
<tr class="memdesc:a94dc33b8a4e969908a6ff97106b98d58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it.  <a href="#a94dc33b8a4e969908a6ff97106b98d58">More...</a><br/></td></tr>
<tr class="separator:a94dc33b8a4e969908a6ff97106b98d58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a92bc5cc93a371cf9378aa2d68c2615"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a6a92bc5cc93a371cf9378aa2d68c2615">ProtoSerialize</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentRoot) const </td></tr>
<tr class="memdesc:a6a92bc5cc93a371cf9378aa2d68c2615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization.  <a href="#a6a92bc5cc93a371cf9378aa2d68c2615">More...</a><br/></td></tr>
<tr class="separator:a6a92bc5cc93a371cf9378aa2d68c2615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5b8a968b6f41dfeebd0fcfc01c6458"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a0e5b8a968b6f41dfeebd0fcfc01c6458">SetAngularVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;AngVel)</td></tr>
<tr class="memdesc:a0e5b8a968b6f41dfeebd0fcfc01c6458"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Angular Velocity of this object.  <a href="#a0e5b8a968b6f41dfeebd0fcfc01c6458">More...</a><br/></td></tr>
<tr class="separator:a0e5b8a968b6f41dfeebd0fcfc01c6458"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fb30c2b45bce6e8282a8ab36147cd52"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a2fb30c2b45bce6e8282a8ab36147cd52">SetCollisionShape</a> (<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Physics::CollisionShape</a> *Shape)</td></tr>
<tr class="memdesc:a2fb30c2b45bce6e8282a8ab36147cd52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the collision shape to be used.  <a href="#a2fb30c2b45bce6e8282a8ab36147cd52">More...</a><br/></td></tr>
<tr class="separator:a2fb30c2b45bce6e8282a8ab36147cd52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9342e7ff1f485ddf99930f24e081084a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a9342e7ff1f485ddf99930f24e081084a">SetDamping</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;LinDamping, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;AngDamping)</td></tr>
<tr class="memdesc:a9342e7ff1f485ddf99930f24e081084a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Damping for this object.  <a href="#a9342e7ff1f485ddf99930f24e081084a">More...</a><br/></td></tr>
<tr class="separator:a9342e7ff1f485ddf99930f24e081084a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1280574ff86c008c46c10a7133ca274"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#ad1280574ff86c008c46c10a7133ca274">SetIndividualGravity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;Gravity)</td></tr>
<tr class="memdesc:ad1280574ff86c008c46c10a7133ca274"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the gravity for only this object.  <a href="#ad1280574ff86c008c46c10a7133ca274">More...</a><br/></td></tr>
<tr class="separator:ad1280574ff86c008c46c10a7133ca274"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a861a7cf22d838cbbe108cd7daad59e76"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a861a7cf22d838cbbe108cd7daad59e76">SetLinearVelocity</a> (const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;LinVel)</td></tr>
<tr class="memdesc:a861a7cf22d838cbbe108cd7daad59e76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Linear Velocity of this object.  <a href="#a861a7cf22d838cbbe108cd7daad59e76">More...</a><br/></td></tr>
<tr class="separator:a861a7cf22d838cbbe108cd7daad59e76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b2ed9808e7b4a7c8874f33c51fb8ca1"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a9b2ed9808e7b4a7c8874f33c51fb8ca1">SetMass</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> NewMass)</td></tr>
<tr class="memdesc:a9b2ed9808e7b4a7c8874f33c51fb8ca1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the mass of the object.  <a href="#a9b2ed9808e7b4a7c8874f33c51fb8ca1">More...</a><br/></td></tr>
<tr class="separator:a9b2ed9808e7b4a7c8874f33c51fb8ca1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c2a5d88f76478a1d1ba4c194ad5d886"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a8c2a5d88f76478a1d1ba4c194ad5d886">SetMass</a> (<a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> NewMass, const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;NewInertia)</td></tr>
<tr class="memdesc:a8c2a5d88f76478a1d1ba4c194ad5d886"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the mass of the object.  <a href="#a8c2a5d88f76478a1d1ba4c194ad5d886">More...</a><br/></td></tr>
<tr class="separator:a8c2a5d88f76478a1d1ba4c194ad5d886"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c090930426361a573ba939ac9580bce"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a2c090930426361a573ba939ac9580bce">SetStickyData</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;MaxNumContacts)</td></tr>
<tr class="memdesc:a2c090930426361a573ba939ac9580bce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the basic parameters for enabling sticky behavior with this actor.  <a href="#a2c090930426361a573ba939ac9580bce">More...</a><br/></td></tr>
<tr class="separator:a2c090930426361a573ba939ac9580bce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ActorBasePhysicsSettings')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml">Mezzanine::ActorBasePhysicsSettings</a></td></tr>
<tr class="memitem:a88ee3f05285a61e2d9c96170b6110460 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#a88ee3f05285a61e2d9c96170b6110460">ActorBasePhysicsSettings</a> (<a class="el" href="classMezzanine_1_1ActorBase.xhtml">ActorBase</a> *Actor, btCollisionObject *PhysicsObject)</td></tr>
<tr class="memdesc:a88ee3f05285a61e2d9c96170b6110460 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard Constructor.  <a href="#a88ee3f05285a61e2d9c96170b6110460">More...</a><br/></td></tr>
<tr class="separator:a88ee3f05285a61e2d9c96170b6110460 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6273131ed9e51182abde28d5af4ded83 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6273131ed9e51182abde28d5af4ded83"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#a6273131ed9e51182abde28d5af4ded83">~ActorBasePhysicsSettings</a> ()</td></tr>
<tr class="memdesc:a6273131ed9e51182abde28d5af4ded83 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a6273131ed9e51182abde28d5af4ded83 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae43e2938e30b69ac11627b9648c43415 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml">ActorBasePhysicsSettings</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#ae43e2938e30b69ac11627b9648c43415">GetBasePointer</a> ()</td></tr>
<tr class="memdesc:ae43e2938e30b69ac11627b9648c43415 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a pointer to this class of type <a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml" title="This is a base helper class for configuring physics settings of an actor.">ActorBasePhysicsSettings</a>.  <a href="#ae43e2938e30b69ac11627b9648c43415">More...</a><br/></td></tr>
<tr class="separator:ae43e2938e30b69ac11627b9648c43415 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a804941eb77d960dd3c73d331c47c891c inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#a804941eb77d960dd3c73d331c47c891c">GetCCDMotionThreshold</a> () const </td></tr>
<tr class="memdesc:a804941eb77d960dd3c73d331c47c891c inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the amount of motion needed to enable CCD for this object.  <a href="#a804941eb77d960dd3c73d331c47c891c">More...</a><br/></td></tr>
<tr class="separator:a804941eb77d960dd3c73d331c47c891c inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3729e8ee88bc2d8892d921016aa4a4c0 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#a3729e8ee88bc2d8892d921016aa4a4c0">GetCCDSphereRadius</a> () const </td></tr>
<tr class="memdesc:a3729e8ee88bc2d8892d921016aa4a4c0 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the radius of the embedded sphere used for CCD.  <a href="#a3729e8ee88bc2d8892d921016aa4a4c0">More...</a><br/></td></tr>
<tr class="separator:a3729e8ee88bc2d8892d921016aa4a4c0 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a702a20cfb7d87dbc2a7d44ba9260ead2 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#a702a20cfb7d87dbc2a7d44ba9260ead2">SetCCDParams</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;MotionThreshold, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;SweptSphereRadius=0)</td></tr>
<tr class="memdesc:a702a20cfb7d87dbc2a7d44ba9260ead2 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the parameters used for Continuous Collision Detection.  <a href="#a702a20cfb7d87dbc2a7d44ba9260ead2">More...</a><br/></td></tr>
<tr class="separator:a702a20cfb7d87dbc2a7d44ba9260ead2 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b01243f038e30eb39b04f8e38fb8a14 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#a3b01243f038e30eb39b04f8e38fb8a14">SetKinematic</a> ()</td></tr>
<tr class="memdesc:a3b01243f038e30eb39b04f8e38fb8a14 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the state of the object to Kinematic.  <a href="#a3b01243f038e30eb39b04f8e38fb8a14">More...</a><br/></td></tr>
<tr class="separator:a3b01243f038e30eb39b04f8e38fb8a14 inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac72f39fa6bc9e2f050fdf90e42dd0deb inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#ac72f39fa6bc9e2f050fdf90e42dd0deb">SetStatic</a> ()</td></tr>
<tr class="memdesc:ac72f39fa6bc9e2f050fdf90e42dd0deb inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the state of the object to Static.  <a href="#ac72f39fa6bc9e2f050fdf90e42dd0deb">More...</a><br/></td></tr>
<tr class="separator:ac72f39fa6bc9e2f050fdf90e42dd0deb inherit pub_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml">Mezzanine::NonTriggerPhysicsSettings</a></td></tr>
<tr class="memitem:aaeda1ca7117e33be5c285e59f4d78cba inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml#aaeda1ca7117e33be5c285e59f4d78cba">NonTriggerPhysicsSettings</a> (<a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *WO, btCollisionObject *PhysicsObject)</td></tr>
<tr class="memdesc:aaeda1ca7117e33be5c285e59f4d78cba inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#aaeda1ca7117e33be5c285e59f4d78cba">More...</a><br/></td></tr>
<tr class="separator:aaeda1ca7117e33be5c285e59f4d78cba inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c32afaa05f2f971533659ddca2f95b4 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7c32afaa05f2f971533659ddca2f95b4"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml#a7c32afaa05f2f971533659ddca2f95b4">~NonTriggerPhysicsSettings</a> ()</td></tr>
<tr class="memdesc:a7c32afaa05f2f971533659ddca2f95b4 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a7c32afaa05f2f971533659ddca2f95b4 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a26cd19ebf73d58b52c794665c66c79 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml#a8a26cd19ebf73d58b52c794665c66c79">GetFriction</a> () const </td></tr>
<tr class="memdesc:a8a26cd19ebf73d58b52c794665c66c79 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object friction coefficient.  <a href="#a8a26cd19ebf73d58b52c794665c66c79">More...</a><br/></td></tr>
<tr class="separator:a8a26cd19ebf73d58b52c794665c66c79 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcd2fa0a18a77f08d95f5824f94a8d1b inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml#afcd2fa0a18a77f08d95f5824f94a8d1b">GetRestitution</a> () const </td></tr>
<tr class="memdesc:afcd2fa0a18a77f08d95f5824f94a8d1b inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object restitution coefficient.  <a href="#afcd2fa0a18a77f08d95f5824f94a8d1b">More...</a><br/></td></tr>
<tr class="separator:afcd2fa0a18a77f08d95f5824f94a8d1b inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4812a17ef87c192ee6204e216334c878 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml#a4812a17ef87c192ee6204e216334c878">SetCollisionResponse</a> (bool Enable)</td></tr>
<tr class="memdesc:a4812a17ef87c192ee6204e216334c878 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object to be able to collide with other objects in the world.  <a href="#a4812a17ef87c192ee6204e216334c878">More...</a><br/></td></tr>
<tr class="separator:a4812a17ef87c192ee6204e216334c878 inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f0c352df35028b7b51c8c14bcba8ce inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml#a75f0c352df35028b7b51c8c14bcba8ce">SetFriction</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Friction)</td></tr>
<tr class="memdesc:a75f0c352df35028b7b51c8c14bcba8ce inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object friction coefficient.  <a href="#a75f0c352df35028b7b51c8c14bcba8ce">More...</a><br/></td></tr>
<tr class="separator:a75f0c352df35028b7b51c8c14bcba8ce inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafac25739c10d408c38a3fdd107897be inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml#aafac25739c10d408c38a3fdd107897be">SetRestitution</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Restitution)</td></tr>
<tr class="memdesc:aafac25739c10d408c38a3fdd107897be inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the <a class="el" href="classMezzanine_1_1World.xhtml" title="This class represents a world for objects to interact within.">World</a> Object restitution coefficient.  <a href="#aafac25739c10d408c38a3fdd107897be">More...</a><br/></td></tr>
<tr class="separator:aafac25739c10d408c38a3fdd107897be inherit pub_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">Mezzanine::WorldObjectPhysicsSettings</a></td></tr>
<tr class="memitem:affb46355a699ca229f906dda739bc5da inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#affb46355a699ca229f906dda739bc5da">WorldObjectPhysicsSettings</a> (<a class="el" href="classMezzanine_1_1WorldObject.xhtml">WorldObject</a> *WO, btCollisionObject *PhysicsObject)</td></tr>
<tr class="memdesc:affb46355a699ca229f906dda739bc5da inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard Constructor.  <a href="#affb46355a699ca229f906dda739bc5da">More...</a><br/></td></tr>
<tr class="separator:affb46355a699ca229f906dda739bc5da inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19b8556f7dedb40ac4b987fb5d0c02d8 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a19b8556f7dedb40ac4b987fb5d0c02d8"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a19b8556f7dedb40ac4b987fb5d0c02d8">~WorldObjectPhysicsSettings</a> ()</td></tr>
<tr class="memdesc:a19b8556f7dedb40ac4b987fb5d0c02d8 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a19b8556f7dedb40ac4b987fb5d0c02d8 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd8253eee7006f61f2960a6099f0b7f1 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine_1_1Physics.xhtml#a17f518115a6221cce3619160261ca407">Physics::ActivationState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#afd8253eee7006f61f2960a6099f0b7f1">GetActivationState</a> () const </td></tr>
<tr class="memdesc:afd8253eee7006f61f2960a6099f0b7f1 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">How activated or deactivated is the object.  <a href="#afd8253eee7006f61f2960a6099f0b7f1">More...</a><br/></td></tr>
<tr class="separator:afd8253eee7006f61f2960a6099f0b7f1 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a3daebdb7d7a40116b1869c59441d2c inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a7a3daebdb7d7a40116b1869c59441d2c">GetCollisionGroup</a> () const </td></tr>
<tr class="memdesc:a7a3daebdb7d7a40116b1869c59441d2c inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the actors collision group.  <a href="#a7a3daebdb7d7a40116b1869c59441d2c">More...</a><br/></td></tr>
<tr class="separator:a7a3daebdb7d7a40116b1869c59441d2c inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1c74e07047aeebe5fa60504a03a20b9 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#ad1c74e07047aeebe5fa60504a03a20b9">GetCollisionMask</a> () const </td></tr>
<tr class="memdesc:ad1c74e07047aeebe5fa60504a03a20b9 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the actors collision mask.  <a href="#ad1c74e07047aeebe5fa60504a03a20b9">More...</a><br/></td></tr>
<tr class="separator:ad1c74e07047aeebe5fa60504a03a20b9 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab875f0480dbde3dd97a26ddf89bdb6c4 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#ab875f0480dbde3dd97a26ddf89bdb6c4">GetCollisionResponse</a> () const </td></tr>
<tr class="memdesc:ab875f0480dbde3dd97a26ddf89bdb6c4 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will this respond to 3d collisions.  <a href="#ab875f0480dbde3dd97a26ddf89bdb6c4">More...</a><br/></td></tr>
<tr class="separator:ab875f0480dbde3dd97a26ddf89bdb6c4 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72665926b42d30539fe88f78e3323e34 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Physics::CollisionShape</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a72665926b42d30539fe88f78e3323e34">GetCollisionShape</a> () const </td></tr>
<tr class="memdesc:a72665926b42d30539fe88f78e3323e34 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the collision shape currently in use by this actor.  <a href="#a72665926b42d30539fe88f78e3323e34">More...</a><br/></td></tr>
<tr class="separator:a72665926b42d30539fe88f78e3323e34 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9933baf62361c7e32eff29dce6219d2c inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a9933baf62361c7e32eff29dce6219d2c">IsActive</a> () const </td></tr>
<tr class="memdesc:a9933baf62361c7e32eff29dce6219d2c inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if the object is active in the simulation.  <a href="#a9933baf62361c7e32eff29dce6219d2c">More...</a><br/></td></tr>
<tr class="separator:a9933baf62361c7e32eff29dce6219d2c inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c9e2839266e49d073c09d9396eab600 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a0c9e2839266e49d073c09d9396eab600">IsKinematic</a> () const </td></tr>
<tr class="memdesc:a0c9e2839266e49d073c09d9396eab600 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the actir kinematic.  <a href="#a0c9e2839266e49d073c09d9396eab600">More...</a><br/></td></tr>
<tr class="separator:a0c9e2839266e49d073c09d9396eab600 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad66ee17bc6331910a1a1bb583fe2b424 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#ad66ee17bc6331910a1a1bb583fe2b424">IsStatic</a> () const </td></tr>
<tr class="memdesc:ad66ee17bc6331910a1a1bb583fe2b424 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is the actor static.  <a href="#ad66ee17bc6331910a1a1bb583fe2b424">More...</a><br/></td></tr>
<tr class="separator:ad66ee17bc6331910a1a1bb583fe2b424 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb5ca51d40befb558cc5b1b85ef8b092 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#adb5ca51d40befb558cc5b1b85ef8b092">IsStaticOrKinematic</a> () const </td></tr>
<tr class="memdesc:adb5ca51d40befb558cc5b1b85ef8b092 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks of the actor is static or kinematic.  <a href="#adb5ca51d40befb558cc5b1b85ef8b092">More...</a><br/></td></tr>
<tr class="separator:adb5ca51d40befb558cc5b1b85ef8b092 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8ffb5dbfd6ad689da020ecba7e61b5e inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#ac8ffb5dbfd6ad689da020ecba7e61b5e">SetActivationState</a> (const <a class="el" href="namespaceMezzanine_1_1Physics.xhtml#a17f518115a6221cce3619160261ca407">Physics::ActivationState</a> &amp;State, bool Force=false)</td></tr>
<tr class="memdesc:ac8ffb5dbfd6ad689da020ecba7e61b5e inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the activation state of the actor.  <a href="#ac8ffb5dbfd6ad689da020ecba7e61b5e">More...</a><br/></td></tr>
<tr class="separator:ac8ffb5dbfd6ad689da020ecba7e61b5e inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46d794796272ed68fffb32a91d4a6420 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a46d794796272ed68fffb32a91d4a6420">SetCollisionGroupAndMask</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Group, const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Mask)</td></tr>
<tr class="memdesc:a46d794796272ed68fffb32a91d4a6420 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the collision group and mask for the actor to determine what it should collide with.  <a href="#a46d794796272ed68fffb32a91d4a6420">More...</a><br/></td></tr>
<tr class="separator:a46d794796272ed68fffb32a91d4a6420 inherit pub_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8dab39e71eb26175a3cb4bbb3966c9b1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a8dab39e71eb26175a3cb4bbb3966c9b1">SerializableName</a> ()</td></tr>
<tr class="memdesc:a8dab39e71eb26175a3cb4bbb3966c9b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#a8dab39e71eb26175a3cb4bbb3966c9b1">More...</a><br/></td></tr>
<tr class="separator:a8dab39e71eb26175a3cb4bbb3966c9b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1ActorBasePhysicsSettings')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml">Mezzanine::ActorBasePhysicsSettings</a></td></tr>
<tr class="memitem:aa386f1bf24f1cc09fceba5d337c3ab29 inherit pub_static_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#aa386f1bf24f1cc09fceba5d337c3ab29">SerializableName</a> ()</td></tr>
<tr class="memdesc:aa386f1bf24f1cc09fceba5d337c3ab29 inherit pub_static_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#aa386f1bf24f1cc09fceba5d337c3ab29">More...</a><br/></td></tr>
<tr class="separator:aa386f1bf24f1cc09fceba5d337c3ab29 inherit pub_static_methods_classMezzanine_1_1ActorBasePhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1NonTriggerPhysicsSettings')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml">Mezzanine::NonTriggerPhysicsSettings</a></td></tr>
<tr class="memitem:aaa6448dd1e05f3ca9ac673e924ef26af inherit pub_static_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1NonTriggerPhysicsSettings.xhtml#aaa6448dd1e05f3ca9ac673e924ef26af">SerializableName</a> ()</td></tr>
<tr class="memdesc:aaa6448dd1e05f3ca9ac673e924ef26af inherit pub_static_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#aaa6448dd1e05f3ca9ac673e924ef26af">More...</a><br/></td></tr>
<tr class="separator:aaa6448dd1e05f3ca9ac673e924ef26af inherit pub_static_methods_classMezzanine_1_1NonTriggerPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1WorldObjectPhysicsSettings')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">Mezzanine::WorldObjectPhysicsSettings</a></td></tr>
<tr class="memitem:aeb904cc45c213f55febfe397f7bc639b inherit pub_static_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#aeb904cc45c213f55febfe397f7bc639b">SerializableName</a> ()</td></tr>
<tr class="memdesc:aeb904cc45c213f55febfe397f7bc639b inherit pub_static_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized.  <a href="#aeb904cc45c213f55febfe397f7bc639b">More...</a><br/></td></tr>
<tr class="separator:aeb904cc45c213f55febfe397f7bc639b inherit pub_static_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a6b8383d096105187418886ac0f28daf3"><td class="memItemLeft" align="right" valign="top">btRigidBody *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a6b8383d096105187418886ac0f28daf3">ActorRB</a></td></tr>
<tr class="memdesc:a6b8383d096105187418886ac0f28daf3"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Object of the actor.  <a href="#a6b8383d096105187418886ac0f28daf3">More...</a><br/></td></tr>
<tr class="separator:a6b8383d096105187418886ac0f28daf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac83840161a9a88ecdcbacfa3c204bd6e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac83840161a9a88ecdcbacfa3c204bd6e"></a>
<a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#ac83840161a9a88ecdcbacfa3c204bd6e">RigidParent</a></td></tr>
<tr class="memdesc:ac83840161a9a88ecdcbacfa3c204bd6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The Actor this belongs to. <br/></td></tr>
<tr class="separator:ac83840161a9a88ecdcbacfa3c204bd6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ddca7ae371cae162657763543f970bb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8ddca7ae371cae162657763543f970bb"></a>
<a class="el" href="structMezzanine_1_1StickyData.xhtml">StickyData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ActorRigidPhysicsSettings.xhtml#a8ddca7ae371cae162657763543f970bb">StickyContacts</a></td></tr>
<tr class="memdesc:a8ddca7ae371cae162657763543f970bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data related to sticky behavior, if any is enabled. <br/></td></tr>
<tr class="separator:a8ddca7ae371cae162657763543f970bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1WorldObjectPhysicsSettings')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml">Mezzanine::WorldObjectPhysicsSettings</a></td></tr>
<tr class="memitem:a64d389171b783f275a418b6d96000ea9 inherit pro_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a64d389171b783f275a418b6d96000ea9">AssignShape</a> (<a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Physics::CollisionShape</a> *Shape)</td></tr>
<tr class="memdesc:a64d389171b783f275a418b6d96000ea9 inherit pro_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a shape to the appropriate objects.  <a href="#a64d389171b783f275a418b6d96000ea9">More...</a><br/></td></tr>
<tr class="separator:a64d389171b783f275a418b6d96000ea9 inherit pro_methods_classMezzanine_1_1WorldObjectPhysicsSettings"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is a helper class for configuring physics settings of an <a class="el" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>. </p>
<p>This class contains functions for the configuring of physics specific settings of an <a class="el" href="classMezzanine_1_1ActorRigid.xhtml" title="This is the actor class for Rigid Objects.">ActorRigid</a>. This class can only configure the ActorRigids physics. For configuring actor graphics, see ActorGraphicsSettings. </p>

<p>Definition at line <a class="el" href="actorphysicssettings_8h_source.xhtml#l00178">178</a> of file <a class="el" href="actorphysicssettings_8h_source.xhtml">actorphysicssettings.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a01aac76583a043e4917546ab6fabe160"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ActorRigidPhysicsSettings::ActorRigidPhysicsSettings </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1ActorRigid.xhtml">ActorRigid</a> *&#160;</td>
          <td class="paramname"><em>Actor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">btRigidBody *&#160;</td>
          <td class="paramname"><em>PhysicsObject</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Standard Constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Actor</td><td>The actor this settings class configures. </td></tr>
    <tr><td class="paramname">PhysicsObject</td><td>The physics object belonging to the actor this class configures. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00170">170</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a56d106b78dfa0ea5415c7928491e4fa7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ActorRigidPhysicsSettings::~ActorRigidPhysicsSettings </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Class destructor. </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000002">Todo:</a></b></dt><dd>Occasionally a SIGTRAP occurs here without any breakpoint set while debugging. Needs to be fixed. on Linux it is a SIGSEGV. </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aafa276832f06cc6a72f8ff0b8ccea155"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::ApplyForce </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Force</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Push/Apply force to an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Force</td><td>The amount and direction of the force in a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00278">278</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a431d7e6e6f8a62d1ff626d2ccf5d7a6d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::ApplyTorque </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Torque</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Spin/Apply Torque to an object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Torque</td><td>The amount and direction of the torque in a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00281">281</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afadd3d7e1cee938622fc3781543489eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::ActorRigidPhysicsSettings::GetAngularDamping </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Angular damping. </p>
<dl class="section return"><dt>Returns</dt><dd>A Real that has the Angular damping. </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00251">251</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5b078e767c73636afbabc0434f7af8c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::ActorRigidPhysicsSettings::GetAngularVelocity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Angular Velocity of this object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the currently set Angular Velocity of this object. </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00263">263</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af5b4641d041c0dcbba8ef0a28566ca87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::ActorRigidPhysicsSettings::GetForce </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the total Force/Movement on the actor. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the force of the entire Actor </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00272">272</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aec9ec4d94326545b60056043c65bdb49"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::ActorRigidPhysicsSettings::GetIndividualGravity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the gravity being applied to this object. </p>
<p>This is the gravity applied to this object, which may or may not be the same as the world gravity. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the gravity currently being applied to this object. </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00269">269</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac5cb8f2aa589e7c76d39fee38e8fb5e2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::ActorRigidPhysicsSettings::GetLinearDamping </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the linear damping. </p>
<dl class="section return"><dt>Returns</dt><dd>A Real that has the Linear damping. </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00248">248</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad238bf0f6d19a65a79a7b8bc0fb552bd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::ActorRigidPhysicsSettings::GetLinearVelocity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the Linear Velocity of this object. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the currently set Linear Velocity of this object. </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00257">257</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a71fae7a868e31ce14612336292bc0fca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::ActorRigidPhysicsSettings::GetLocalInertia </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the current intertia of the Actor. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Inertia </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00287">287</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6426940001f8d8e112763f6619278874"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::ActorRigidPhysicsSettings::GetMass </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the total Mass of the actor. </p>
<dl class="section return"><dt>Returns</dt><dd>A Real with the Mass of the Actor </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00284">284</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af3b11efb413c1e6a80e4fd5cd3f44715"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structMezzanine_1_1StickyData.xhtml">StickyData</a> * Mezzanine::ActorRigidPhysicsSettings::GetStickyData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the struct storing the data related to sticky behavior. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the struct storing the sticky data for this actor. </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00242">242</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae7406aca16a67e3ef959ff9cb76a0f44"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> Mezzanine::ActorRigidPhysicsSettings::GetTorque </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Torque/Rotation. </p>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> with the Torque </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00275">275</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a94dc33b8a4e969908a6ff97106b98d58"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::ProtoDeSerialize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>OneNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Take the data stored in an <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> and overwrite this instance of this object with it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OneNode</td><td>and <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> containing the data. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#a6410a001b1d8a932ea87f66ed50cdc31">Mezzanine::ActorBasePhysicsSettings</a>.</p>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00358">358</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6a92bc5cc93a371cf9378aa2d68c2615"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::ProtoSerialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>CurrentRoot</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Convert this class to an <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a> ready for serialization. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">CurrentRoot</td><td>The point in the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> hierarchy that all this quaternion should be appended to. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1ActorBasePhysicsSettings.xhtml#a56059cc085ceab1167ce96f1b63b0e4d">Mezzanine::ActorBasePhysicsSettings</a>.</p>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00298">298</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8dab39e71eb26175a3cb4bbb3966c9b1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ActorRigidPhysicsSettings::SerializableName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the name of the the <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> tag this class will leave behind as its instances are serialized. </p>
<dl class="section return"><dt>Returns</dt><dd>A string containing "ActorRigidPhysicsSettings" </dd></dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00449">449</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0e5b8a968b6f41dfeebd0fcfc01c6458"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::SetAngularVelocity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>AngVel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Angular Velocity of this object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">AngVel</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the Angular Velocity to be set. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00260">260</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2fb30c2b45bce6e8282a8ab36147cd52"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::SetCollisionShape </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Physics_1_1CollisionShape.xhtml">Physics::CollisionShape</a> *&#160;</td>
          <td class="paramname"><em>Shape</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the collision shape to be used. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Shape</td><td>The shape to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classMezzanine_1_1WorldObjectPhysicsSettings.xhtml#a664fc829f53bd6a1e2f4eed34ab6d715">Mezzanine::WorldObjectPhysicsSettings</a>.</p>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00191">191</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9342e7ff1f485ddf99930f24e081084a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::SetDamping </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>LinDamping</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>AngDamping</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Damping for this object. </p>
<p>Both of Linear Damping and Angular Damping default to zero. This is useful if you wish to simulate something like air resistance. Values can range from 0.0 to 1.0. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">LinDamping</td><td>Real representing the amount of Linear Damping(Movement) to be applied. </td></tr>
    <tr><td class="paramname">AngDamping</td><td>Real representing the amount of Angular Damping(Rotation) to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00245">245</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad1280574ff86c008c46c10a7133ca274"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::SetIndividualGravity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>Gravity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the gravity for only this object. </p>
<p>This value will override the world gravity. Should be called after adding to the world. When the object is added to the world the world gravity is applied to it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Gravity</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the direction and strength of gravity to be applied. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00266">266</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a861a7cf22d838cbbe108cd7daad59e76"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::SetLinearVelocity </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>LinVel</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the Linear Velocity of this object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">LinVel</td><td><a class="el" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> representing the Linear Velocity to be set. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00254">254</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9b2ed9808e7b4a7c8874f33c51fb8ca1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::SetMass </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>NewMass</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the mass of the object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">NewMass</td><td>The amount of mass this should have. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00290">290</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8c2a5d88f76478a1d1ba4c194ad5d886"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::SetMass </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>NewMass</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classMezzanine_1_1Vector3.xhtml">Vector3</a> &amp;&#160;</td>
          <td class="paramname"><em>NewInertia</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the mass of the object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">NewMass</td><td>The amount of mass this should have. </td></tr>
    <tr><td class="paramname">NewInertia</td><td>The new inertia the object has. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00293">293</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2c090930426361a573ba939ac9580bce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ActorRigidPhysicsSettings::SetStickyData </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>MaxNumContacts</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the basic parameters for enabling sticky behavior with this actor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MaxNumContacts</td><td>The maximum number of object this object can stick to or have stuck to it. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="actorphysicssettings_8cpp_source.xhtml#l00210">210</a> of file <a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a6b8383d096105187418886ac0f28daf3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">btRigidBody* Mezzanine::ActorRigidPhysicsSettings::ActorRB</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="namespaceMezzanine_1_1Physics.xhtml" title="This namespace is for all the classes belonging to the Physics Subsystem.">Physics</a> Object of the actor. </p>

<p>Definition at line <a class="el" href="actorphysicssettings_8h_source.xhtml#l00183">183</a> of file <a class="el" href="actorphysicssettings_8h_source.xhtml">actorphysicssettings.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="actorphysicssettings_8h_source.xhtml">actorphysicssettings.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="actorphysicssettings_8cpp_source.xhtml">actorphysicssettings.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Sep 16 2013 06:21:45 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
