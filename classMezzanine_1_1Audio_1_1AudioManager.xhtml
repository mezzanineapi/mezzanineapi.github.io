<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::Audio::AudioManager Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;15,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1Audio.xhtml">Audio</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml">AudioManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1Audio_1_1AudioManager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::Audio::AudioManager Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the base manager class for the <a class="el" href="namespaceMezzanine_1_1Audio.xhtml" title="This namespace is for all the classes belonging to the Audio Subsystem.">Audio</a> subsystem and it's operations.  
 <a href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="audiomanager_8h_source.xhtml">audiomanager.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::Audio::AudioManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Audio_1_1AudioManager__inherit__graph.svg" width="486" height="179"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::Audio::AudioManager:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1Audio_1_1AudioManager__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a037010a165cfe02541c3276dc747decf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a037010a165cfe02541c3276dc747decf"></a>
typedef <br class="typebreak"/>
DecoderFactoryContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a037010a165cfe02541c3276dc747decf">ConstDecoderFactoryIterator</a></td></tr>
<tr class="memdesc:a037010a165cfe02541c3276dc747decf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const Iterator type for <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> instances stored by this class. <br/></td></tr>
<tr class="separator:a037010a165cfe02541c3276dc747decf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6971c7f71f9690d4c704fb1eed7561ce"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6971c7f71f9690d4c704fb1eed7561ce"></a>
typedef std::map<br class="typebreak"/>
&lt; <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6971c7f71f9690d4c704fb1eed7561ce">DecoderFactoryContainer</a></td></tr>
<tr class="memdesc:a6971c7f71f9690d4c704fb1eed7561ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic container type for <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> storage by this class. <br/></td></tr>
<tr class="separator:a6971c7f71f9690d4c704fb1eed7561ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3acc5dfecc6c387ce326e0dba21e38bd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3acc5dfecc6c387ce326e0dba21e38bd"></a>
typedef <br class="typebreak"/>
DecoderFactoryContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3acc5dfecc6c387ce326e0dba21e38bd">DecoderFactoryIterator</a></td></tr>
<tr class="memdesc:a3acc5dfecc6c387ce326e0dba21e38bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator type for <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> instances stored by this class. <br/></td></tr>
<tr class="separator:a3acc5dfecc6c387ce326e0dba21e38bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a9a6f3e238f66cbc68dfec11e4160aa6c inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> { <br/>
&#160;&#160;<b>MT_AudioManager</b> = 1, 
<b>MT_AnimationManager</b>, 
<b>MT_CollisionShapeManager</b>, 
<b>MT_GraphicsManager</b>, 
<br/>
&#160;&#160;<b>MT_EventManager</b>, 
<b>MT_InputManager</b>, 
<b>MT_LogManager</b>, 
<b>MT_MaterialManager</b>, 
<br/>
&#160;&#160;<b>MT_MeshManager</b>, 
<b>MT_NetworkManager</b>, 
<b>MT_ResourceManager</b>, 
<b>MT_ScriptingManager</b>, 
<br/>
&#160;&#160;<b>MT_UIManager</b>, 
<b>MT_ActorManager</b> = 100, 
<b>MT_AreaEffectManager</b>, 
<b>MT_CameraManager</b>, 
<br/>
&#160;&#160;<b>MT_PagingManager</b>, 
<b>MT_PhysicsManager</b>, 
<b>MT_SceneManager</b>, 
<b>MT_SoundScapeManager</b>, 
<br/>
&#160;&#160;<b>MT_TerrainManager</b>, 
<b>MT_VehicleManager</b>, 
<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6caf1bafaadc056164a0e4c183917edd06e">MT_UserCreated</a> = 512
<br/>
 }</td></tr>
<tr class="separator:a9a6f3e238f66cbc68dfec11e4160aa6c inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1ObjectSettingsHandler"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1ObjectSettingsHandler')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml">Mezzanine::ObjectSettingsHandler</a></td></tr>
<tr class="memitem:a2efb2450aa00f5a1e15fb1a79541f9c1 inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2efb2450aa00f5a1e15fb1a79541f9c1"></a>
typedef <br class="typebreak"/>
SettingFilesContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstSettingFilesIterator</b></td></tr>
<tr class="separator:a2efb2450aa00f5a1e15fb1a79541f9c1 inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2efe23faac546b1496696f0bea1b87b3 inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2efe23faac546b1496696f0bea1b87b3"></a>
typedef <br class="typebreak"/>
SettingGroupContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><b>ConstSettingGroupIterator</b></td></tr>
<tr class="separator:a2efe23faac546b1496696f0bea1b87b3 inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a420ddc459c9dafef74035e31c70a3d70 inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a420ddc459c9dafef74035e31c70a3d70"></a>
typedef std::map&lt; <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1ObjectSettingFile.xhtml">ObjectSettingFile</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>SettingFilesContainer</b></td></tr>
<tr class="separator:a420ddc459c9dafef74035e31c70a3d70 inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1611ffa0f680b3eb55c1f77a76865822 inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1611ffa0f680b3eb55c1f77a76865822"></a>
typedef <br class="typebreak"/>
SettingFilesContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>SettingFilesIterator</b></td></tr>
<tr class="separator:a1611ffa0f680b3eb55c1f77a76865822 inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacc2c8cdb0e69c6879ac61af893064cd inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aacc2c8cdb0e69c6879ac61af893064cd"></a>
typedef std::map&lt; <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>, <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1ObjectSettingGroup.xhtml">ObjectSettingGroup</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>SettingGroupContainer</b></td></tr>
<tr class="separator:aacc2c8cdb0e69c6879ac61af893064cd inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5f4647295e09f52e7070fcd1768173f inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa5f4647295e09f52e7070fcd1768173f"></a>
typedef <br class="typebreak"/>
SettingGroupContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><b>SettingGroupIterator</b></td></tr>
<tr class="separator:aa5f4647295e09f52e7070fcd1768173f inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a673b2401b956abd67f876bcb6c53a28c inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a673b2401b956abd67f876bcb6c53a28c"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="classMezzanine_1_1ObjectSettingGroup.xhtml">ObjectSettingGroup</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a673b2401b956abd67f876bcb6c53a28c">SettingGroupVector</a></td></tr>
<tr class="memdesc:a673b2401b956abd67f876bcb6c53a28c inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple typedef for Load method returns. <br/></td></tr>
<tr class="separator:a673b2401b956abd67f876bcb6c53a28c inherit pub_types_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae80daa9124ab9ad069107f32639fbd5d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae80daa9124ab9ad069107f32639fbd5d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ae80daa9124ab9ad069107f32639fbd5d">AudioManager</a> ()</td></tr>
<tr class="memdesc:ae80daa9124ab9ad069107f32639fbd5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Constructor. <br/></td></tr>
<tr class="separator:ae80daa9124ab9ad069107f32639fbd5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554bd5244c44616916b15bdfaa863ac6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a554bd5244c44616916b15bdfaa863ac6">AudioManager</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode)</td></tr>
<tr class="memdesc:a554bd5244c44616916b15bdfaa863ac6"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor.  <a href="#a554bd5244c44616916b15bdfaa863ac6">More...</a><br/></td></tr>
<tr class="separator:a554bd5244c44616916b15bdfaa863ac6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46805fc2688d3c22931b59e406b455d3"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a46805fc2688d3c22931b59e406b455d3">~AudioManager</a> ()</td></tr>
<tr class="memdesc:a46805fc2688d3c22931b59e406b455d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class Destructor.  <a href="#a46805fc2688d3c22931b59e406b455d3">More...</a><br/></td></tr>
<tr class="separator:a46805fc2688d3c22931b59e406b455d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ad4208cc11540da229d2da2562d2615"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a7ad4208cc11540da229d2da2562d2615">_RegisterSoundScapeManager</a> (<a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml">Audio::SoundScapeManager</a> *Manager)=0</td></tr>
<tr class="memdesc:a7ad4208cc11540da229d2da2562d2615"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies this <a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml" title="This is the base manager class for the Audio subsystem and it&#39;s operations.">AudioManager</a> of the creation of a new <a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml" title="This is the base manager class for audio being played in a 3D environment.">SoundScapeManager</a>.  <a href="#a7ad4208cc11540da229d2da2562d2615">More...</a><br/></td></tr>
<tr class="separator:a7ad4208cc11540da229d2da2562d2615"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f42a8decdd6f13435e0d683b3bdd6cf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a1f42a8decdd6f13435e0d683b3bdd6cf">_UnregisterSoundScapeManager</a> (<a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml">Audio::SoundScapeManager</a> *Manager)=0</td></tr>
<tr class="memdesc:a1f42a8decdd6f13435e0d683b3bdd6cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Notifies this <a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml" title="This is the base manager class for the Audio subsystem and it&#39;s operations.">AudioManager</a> of the destruction of a <a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml" title="This is the base manager class for audio being played in a 3D environment.">SoundScapeManager</a>.  <a href="#a1f42a8decdd6f13435e0d683b3bdd6cf">More...</a><br/></td></tr>
<tr class="separator:a1f42a8decdd6f13435e0d683b3bdd6cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5788e225b4fcc2d79e4d7e771141bef0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a5788e225b4fcc2d79e4d7e771141bef0">AddDecoderFactory</a> (<a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> *ToBeAdded)</td></tr>
<tr class="memdesc:a5788e225b4fcc2d79e4d7e771141bef0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to this manager allowing the playback of new types of sound formats.  <a href="#a5788e225b4fcc2d79e4d7e771141bef0">More...</a><br/></td></tr>
<tr class="separator:a5788e225b4fcc2d79e4d7e771141bef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dc65894bbe808c485eebd91872205ed"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a7dc65894bbe808c485eebd91872205ed">CreateAmbientSound</a> ()</td></tr>
<tr class="memdesc:a7dc65894bbe808c485eebd91872205ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a blank Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it.  <a href="#a7dc65894bbe808c485eebd91872205ed">More...</a><br/></td></tr>
<tr class="separator:a7dc65894bbe808c485eebd91872205ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3812d7c8623b994eaeef0f2814d6e1b9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3812d7c8623b994eaeef0f2814d6e1b9">CreateAmbientSound</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)</td></tr>
<tr class="memdesc:a3812d7c8623b994eaeef0f2814d6e1b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded.  <a href="#a3812d7c8623b994eaeef0f2814d6e1b9">More...</a><br/></td></tr>
<tr class="separator:a3812d7c8623b994eaeef0f2814d6e1b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab889eda0e90a524f217bef1f606fb01f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ab889eda0e90a524f217bef1f606fb01f">CreateAmbientSound</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)</td></tr>
<tr class="memdesc:ab889eda0e90a524f217bef1f606fb01f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded.  <a href="#ab889eda0e90a524f217bef1f606fb01f">More...</a><br/></td></tr>
<tr class="separator:ab889eda0e90a524f217bef1f606fb01f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b1dfb329681ce2672855df4b3fb1c17"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a4b1dfb329681ce2672855df4b3fb1c17">CreateAmbientSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group)</td></tr>
<tr class="memdesc:a4b1dfb329681ce2672855df4b3fb1c17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file.  <a href="#a4b1dfb329681ce2672855df4b3fb1c17">More...</a><br/></td></tr>
<tr class="separator:a4b1dfb329681ce2672855df4b3fb1c17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bf4903d942d64bd203576e294fb18f4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a5bf4903d942d64bd203576e294fb18f4">CreateAmbientSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)</td></tr>
<tr class="memdesc:a5bf4903d942d64bd203576e294fb18f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded.  <a href="#a5bf4903d942d64bd203576e294fb18f4">More...</a><br/></td></tr>
<tr class="separator:a5bf4903d942d64bd203576e294fb18f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0101c3f9f71fb45662dd6b6ac86b81a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#af0101c3f9f71fb45662dd6b6ac86b81a">CreateAmbientSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)</td></tr>
<tr class="memdesc:af0101c3f9f71fb45662dd6b6ac86b81a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded.  <a href="#af0101c3f9f71fb45662dd6b6ac86b81a">More...</a><br/></td></tr>
<tr class="separator:af0101c3f9f71fb45662dd6b6ac86b81a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c1900d949b816d3a21c104cafd3a689"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a1c1900d949b816d3a21c104cafd3a689">CreateDialogSound</a> ()</td></tr>
<tr class="memdesc:a1c1900d949b816d3a21c104cafd3a689"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a blank Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it.  <a href="#a1c1900d949b816d3a21c104cafd3a689">More...</a><br/></td></tr>
<tr class="separator:a1c1900d949b816d3a21c104cafd3a689"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80a1476dcd51f615a71a667d21f9680f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a80a1476dcd51f615a71a667d21f9680f">CreateDialogSound</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)</td></tr>
<tr class="memdesc:a80a1476dcd51f615a71a667d21f9680f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded.  <a href="#a80a1476dcd51f615a71a667d21f9680f">More...</a><br/></td></tr>
<tr class="separator:a80a1476dcd51f615a71a667d21f9680f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf4d1e761582a714463b176d9bf5aed5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#aaf4d1e761582a714463b176d9bf5aed5">CreateDialogSound</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)</td></tr>
<tr class="memdesc:aaf4d1e761582a714463b176d9bf5aed5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded.  <a href="#aaf4d1e761582a714463b176d9bf5aed5">More...</a><br/></td></tr>
<tr class="separator:aaf4d1e761582a714463b176d9bf5aed5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefe89cc720e73ab366cf1f7908a6f63c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#aefe89cc720e73ab366cf1f7908a6f63c">CreateDialogSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group)</td></tr>
<tr class="memdesc:aefe89cc720e73ab366cf1f7908a6f63c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file.  <a href="#aefe89cc720e73ab366cf1f7908a6f63c">More...</a><br/></td></tr>
<tr class="separator:aefe89cc720e73ab366cf1f7908a6f63c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2431ea32d9c90f01be4e77fb656ecacf"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a2431ea32d9c90f01be4e77fb656ecacf">CreateDialogSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)</td></tr>
<tr class="memdesc:a2431ea32d9c90f01be4e77fb656ecacf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded.  <a href="#a2431ea32d9c90f01be4e77fb656ecacf">More...</a><br/></td></tr>
<tr class="separator:a2431ea32d9c90f01be4e77fb656ecacf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af66b2f71aa1660710f30311b9dc97fb5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#af66b2f71aa1660710f30311b9dc97fb5">CreateDialogSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)</td></tr>
<tr class="memdesc:af66b2f71aa1660710f30311b9dc97fb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded.  <a href="#af66b2f71aa1660710f30311b9dc97fb5">More...</a><br/></td></tr>
<tr class="separator:af66b2f71aa1660710f30311b9dc97fb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef0fcb4a1d82cd791aa596b51aad7522"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#aef0fcb4a1d82cd791aa596b51aad7522">CreateEffectSound</a> ()</td></tr>
<tr class="memdesc:aef0fcb4a1d82cd791aa596b51aad7522"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a blank Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it.  <a href="#aef0fcb4a1d82cd791aa596b51aad7522">More...</a><br/></td></tr>
<tr class="separator:aef0fcb4a1d82cd791aa596b51aad7522"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34a1ba084e42ee29e232eead71ce23bc"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a34a1ba084e42ee29e232eead71ce23bc">CreateEffectSound</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)</td></tr>
<tr class="memdesc:a34a1ba084e42ee29e232eead71ce23bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded.  <a href="#a34a1ba084e42ee29e232eead71ce23bc">More...</a><br/></td></tr>
<tr class="separator:a34a1ba084e42ee29e232eead71ce23bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f63a5c042af15025ef6165377ded99e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6f63a5c042af15025ef6165377ded99e">CreateEffectSound</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)</td></tr>
<tr class="memdesc:a6f63a5c042af15025ef6165377ded99e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded.  <a href="#a6f63a5c042af15025ef6165377ded99e">More...</a><br/></td></tr>
<tr class="separator:a6f63a5c042af15025ef6165377ded99e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18c8a9034ac05ce011e43a4686127a10"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a18c8a9034ac05ce011e43a4686127a10">CreateEffectSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group)</td></tr>
<tr class="memdesc:a18c8a9034ac05ce011e43a4686127a10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file.  <a href="#a18c8a9034ac05ce011e43a4686127a10">More...</a><br/></td></tr>
<tr class="separator:a18c8a9034ac05ce011e43a4686127a10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f353f3ce3441fe4db279773a6e55db9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a4f353f3ce3441fe4db279773a6e55db9">CreateEffectSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)</td></tr>
<tr class="memdesc:a4f353f3ce3441fe4db279773a6e55db9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded.  <a href="#a4f353f3ce3441fe4db279773a6e55db9">More...</a><br/></td></tr>
<tr class="separator:a4f353f3ce3441fe4db279773a6e55db9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab93e5f59023a733ff459c8816b261336"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ab93e5f59023a733ff459c8816b261336">CreateEffectSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)</td></tr>
<tr class="memdesc:ab93e5f59023a733ff459c8816b261336"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded.  <a href="#ab93e5f59023a733ff459c8816b261336">More...</a><br/></td></tr>
<tr class="separator:ab93e5f59023a733ff459c8816b261336"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a368d3b0b8093c400798f46fe59ce176f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a368d3b0b8093c400798f46fe59ce176f">CreateMusicSound</a> ()</td></tr>
<tr class="memdesc:a368d3b0b8093c400798f46fe59ce176f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a blank Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it.  <a href="#a368d3b0b8093c400798f46fe59ce176f">More...</a><br/></td></tr>
<tr class="separator:a368d3b0b8093c400798f46fe59ce176f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7682fd992258a2e7d618ce51fae12b8a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a7682fd992258a2e7d618ce51fae12b8a">CreateMusicSound</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)</td></tr>
<tr class="memdesc:a7682fd992258a2e7d618ce51fae12b8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded.  <a href="#a7682fd992258a2e7d618ce51fae12b8a">More...</a><br/></td></tr>
<tr class="separator:a7682fd992258a2e7d618ce51fae12b8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe8a99235142a2fb3252376e22c00d8e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#afe8a99235142a2fb3252376e22c00d8e">CreateMusicSound</a> (<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)</td></tr>
<tr class="memdesc:afe8a99235142a2fb3252376e22c00d8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded.  <a href="#afe8a99235142a2fb3252376e22c00d8e">More...</a><br/></td></tr>
<tr class="separator:afe8a99235142a2fb3252376e22c00d8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b7349a8c0ca70985503a149ca308471"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a0b7349a8c0ca70985503a149ca308471">CreateMusicSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group)</td></tr>
<tr class="memdesc:a0b7349a8c0ca70985503a149ca308471"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file.  <a href="#a0b7349a8c0ca70985503a149ca308471">More...</a><br/></td></tr>
<tr class="separator:a0b7349a8c0ca70985503a149ca308471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27a0eedcead660ea56adfad484daaed3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a27a0eedcead660ea56adfad484daaed3">CreateMusicSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)</td></tr>
<tr class="memdesc:a27a0eedcead660ea56adfad484daaed3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded.  <a href="#a27a0eedcead660ea56adfad484daaed3">More...</a><br/></td></tr>
<tr class="separator:a27a0eedcead660ea56adfad484daaed3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c768d8c65d248819031d94a15946ead"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a5c768d8c65d248819031d94a15946ead">CreateMusicSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)</td></tr>
<tr class="memdesc:a5c768d8c65d248819031d94a15946ead"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded.  <a href="#a5c768d8c65d248819031d94a15946ead">More...</a><br/></td></tr>
<tr class="separator:a5c768d8c65d248819031d94a15946ead"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc489b3a7b2d10e9ecb17f0ecb45f6ec"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#afc489b3a7b2d10e9ecb17f0ecb45f6ec">CreateRecorder</a> ()=0</td></tr>
<tr class="memdesc:afc489b3a7b2d10e9ecb17f0ecb45f6ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a>.  <a href="#afc489b3a7b2d10e9ecb17f0ecb45f6ec">More...</a><br/></td></tr>
<tr class="separator:afc489b3a7b2d10e9ecb17f0ecb45f6ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cab9f9dd60801aef8c96ff74d3e648e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3cab9f9dd60801aef8c96ff74d3e648e">CreateSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type)=0</td></tr>
<tr class="memdesc:a3cab9f9dd60801aef8c96ff74d3e648e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a blank <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it.  <a href="#a3cab9f9dd60801aef8c96ff74d3e648e">More...</a><br/></td></tr>
<tr class="separator:a3cab9f9dd60801aef8c96ff74d3e648e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76c6831bc937abeb9d1f643f85588644"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a76c6831bc937abeb9d1f643f85588644">CreateSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, <a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)=0</td></tr>
<tr class="memdesc:a76c6831bc937abeb9d1f643f85588644"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded.  <a href="#a76c6831bc937abeb9d1f643f85588644">More...</a><br/></td></tr>
<tr class="separator:a76c6831bc937abeb9d1f643f85588644"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48d7d4d1b79670f0465b270fb8302919"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a48d7d4d1b79670f0465b270fb8302919">CreateSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, <a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Stream, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)=0</td></tr>
<tr class="memdesc:a48d7d4d1b79670f0465b270fb8302919"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded.  <a href="#a48d7d4d1b79670f0465b270fb8302919">More...</a><br/></td></tr>
<tr class="separator:a48d7d4d1b79670f0465b270fb8302919"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3158e14493646364bcb935060eb0d564"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3158e14493646364bcb935060eb0d564">CreateSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group)=0</td></tr>
<tr class="memdesc:a3158e14493646364bcb935060eb0d564"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file.  <a href="#a3158e14493646364bcb935060eb0d564">More...</a><br/></td></tr>
<tr class="separator:a3158e14493646364bcb935060eb0d564"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3327becdd03f55b32f7eb9eca3b181ba"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3327becdd03f55b32f7eb9eca3b181ba">CreateSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Encode)=0</td></tr>
<tr class="memdesc:a3327becdd03f55b32f7eb9eca3b181ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded.  <a href="#a3327becdd03f55b32f7eb9eca3b181ba">More...</a><br/></td></tr>
<tr class="separator:a3327becdd03f55b32f7eb9eca3b181ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a37e6fbdd0d17719d0a376af64d16e2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a4a37e6fbdd0d17719d0a376af64d16e2">CreateSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;StreamName, <a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Length, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Frequency, const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a> Config)=0</td></tr>
<tr class="memdesc:a4a37e6fbdd0d17719d0a376af64d16e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded.  <a href="#a4a37e6fbdd0d17719d0a376af64d16e2">More...</a><br/></td></tr>
<tr class="separator:a4a37e6fbdd0d17719d0a376af64d16e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a123ee30493e5f3329a0eec6019105550"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a123ee30493e5f3329a0eec6019105550">DecoderFactoryExists</a> (const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Format)</td></tr>
<tr class="memdesc:a123ee30493e5f3329a0eec6019105550"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> is already registered with this manager.  <a href="#a123ee30493e5f3329a0eec6019105550">More...</a><br/></td></tr>
<tr class="separator:a123ee30493e5f3329a0eec6019105550"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ca9f9f3dcdae87b8c6b945b9d54dd3e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a9ca9f9f3dcdae87b8c6b945b9d54dd3e">Deinitialize</a> ()=0</td></tr>
<tr class="memdesc:a9ca9f9f3dcdae87b8c6b945b9d54dd3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes this manager from any necessary configuration so it can be safely disposed of.  <a href="#a9ca9f9f3dcdae87b8c6b945b9d54dd3e">More...</a><br/></td></tr>
<tr class="separator:a9ca9f9f3dcdae87b8c6b945b9d54dd3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70563317183b2a11224ea985857a8f87"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a70563317183b2a11224ea985857a8f87"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a70563317183b2a11224ea985857a8f87">DestroyAllDecoderFactories</a> ()</td></tr>
<tr class="memdesc:a70563317183b2a11224ea985857a8f87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all registered <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> instances. <br/></td></tr>
<tr class="separator:a70563317183b2a11224ea985857a8f87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa66c2361aa51a34fe10b60d25b1831f5"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa66c2361aa51a34fe10b60d25b1831f5"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#aa66c2361aa51a34fe10b60d25b1831f5">DestroyAllRecorders</a> ()=0</td></tr>
<tr class="memdesc:aa66c2361aa51a34fe10b60d25b1831f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> instances being stored by this manager. <br/></td></tr>
<tr class="separator:aa66c2361aa51a34fe10b60d25b1831f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7648390e589a2f0f0ce2a3581993fceb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7648390e589a2f0f0ce2a3581993fceb"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a7648390e589a2f0f0ce2a3581993fceb">DestroyAllSounds</a> ()=0</td></tr>
<tr class="memdesc:a7648390e589a2f0f0ce2a3581993fceb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes all stored <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instances. <br/></td></tr>
<tr class="separator:a7648390e589a2f0f0ce2a3581993fceb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8096fc606ad6ec6af7a2ad27d455ae17"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a8096fc606ad6ec6af7a2ad27d455ae17">DestroyDecoderFactory</a> (<a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:a8096fc606ad6ec6af7a2ad27d455ae17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy a registered <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a>.  <a href="#a8096fc606ad6ec6af7a2ad27d455ae17">More...</a><br/></td></tr>
<tr class="separator:a8096fc606ad6ec6af7a2ad27d455ae17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a275fdab6150b8025eadc46d1993d6927"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a275fdab6150b8025eadc46d1993d6927">DestroyDecoderFactory</a> (const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Encoding</a> Format)</td></tr>
<tr class="memdesc:a275fdab6150b8025eadc46d1993d6927"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroy a registered <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a>.  <a href="#a275fdab6150b8025eadc46d1993d6927">More...</a><br/></td></tr>
<tr class="separator:a275fdab6150b8025eadc46d1993d6927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ca91fb08fa41db9ed91e5cb054975d4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a1ca91fb08fa41db9ed91e5cb054975d4">DestroyRecorder</a> (<a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> *ToBeDestroyed)=0</td></tr>
<tr class="memdesc:a1ca91fb08fa41db9ed91e5cb054975d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> instance by pointer.  <a href="#a1ca91fb08fa41db9ed91e5cb054975d4">More...</a><br/></td></tr>
<tr class="separator:a1ca91fb08fa41db9ed91e5cb054975d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af840c203b98b6841a8c97ff4a427a946"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#af840c203b98b6841a8c97ff4a427a946">DestroySound</a> (<a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *ToBeDestroyed)=0</td></tr>
<tr class="memdesc:af840c203b98b6841a8c97ff4a427a946"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes a <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>.  <a href="#af840c203b98b6841a8c97ff4a427a946">More...</a><br/></td></tr>
<tr class="separator:af840c203b98b6841a8c97ff4a427a946"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af53c243ccdd68d802a6a0ea1f7a10b7e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#af53c243ccdd68d802a6a0ea1f7a10b7e">GetAmbientVolume</a> () const </td></tr>
<tr class="memdesc:af53c243ccdd68d802a6a0ea1f7a10b7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set Ambient volume.  <a href="#af53c243ccdd68d802a6a0ea1f7a10b7e">More...</a><br/></td></tr>
<tr class="separator:af53c243ccdd68d802a6a0ea1f7a10b7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a934c8ddcbb078b888da3b4c9b9ea1dd9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a934c8ddcbb078b888da3b4c9b9ea1dd9">GetAvailablePlaybackDeviceCount</a> () const =0</td></tr>
<tr class="memdesc:a934c8ddcbb078b888da3b4c9b9ea1dd9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of available playback devices.  <a href="#a934c8ddcbb078b888da3b4c9b9ea1dd9">More...</a><br/></td></tr>
<tr class="separator:a934c8ddcbb078b888da3b4c9b9ea1dd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab14549d7c975f99864b54506b1bce755"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ab14549d7c975f99864b54506b1bce755">GetAvailablePlaybackDeviceName</a> (const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;Index) const =0</td></tr>
<tr class="memdesc:ab14549d7c975f99864b54506b1bce755"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of an available playback device by index.  <a href="#ab14549d7c975f99864b54506b1bce755">More...</a><br/></td></tr>
<tr class="separator:ab14549d7c975f99864b54506b1bce755"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46ebf03ddb5df179cfb99afc3c280fb6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a46ebf03ddb5df179cfb99afc3c280fb6">GetAvailableRecordingDeviceCount</a> ()=0</td></tr>
<tr class="memdesc:a46ebf03ddb5df179cfb99afc3c280fb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of currently available recording devices.  <a href="#a46ebf03ddb5df179cfb99afc3c280fb6">More...</a><br/></td></tr>
<tr class="separator:a46ebf03ddb5df179cfb99afc3c280fb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa704ff0ff84e8270c317cc8379f43ab"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#afa704ff0ff84e8270c317cc8379f43ab">GetAvailableRecordingDeviceName</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Index)=0</td></tr>
<tr class="memdesc:afa704ff0ff84e8270c317cc8379f43ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of an available recording device by index.  <a href="#afa704ff0ff84e8270c317cc8379f43ab">More...</a><br/></td></tr>
<tr class="separator:afa704ff0ff84e8270c317cc8379f43ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a7fe750dc53f40c9a4ca37129cf893a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iBufferUpdate2DWorkUnit.xhtml">iBufferUpdate2DWorkUnit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3a7fe750dc53f40c9a4ca37129cf893a">GetBufferUpdate2DWork</a> ()=0</td></tr>
<tr class="memdesc:a3a7fe750dc53f40c9a4ca37129cf893a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the work unit responsible for updating the buffers of sounds.  <a href="#a3a7fe750dc53f40c9a4ca37129cf893a">More...</a><br/></td></tr>
<tr class="separator:a3a7fe750dc53f40c9a4ca37129cf893a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b263080b6760bc583c4c596099e8642"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6b263080b6760bc583c4c596099e8642">GetCurrentPlaybackDeviceName</a> () const =0</td></tr>
<tr class="memdesc:a6b263080b6760bc583c4c596099e8642"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the playback device currently in use.  <a href="#a6b263080b6760bc583c4c596099e8642">More...</a><br/></td></tr>
<tr class="separator:a6b263080b6760bc583c4c596099e8642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24129e7a8c8b302c32fcc7e9e0793236"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a24129e7a8c8b302c32fcc7e9e0793236">GetDecoderFactory</a> (const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Format)</td></tr>
<tr class="memdesc:a24129e7a8c8b302c32fcc7e9e0793236"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> by it's supported <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>.  <a href="#a24129e7a8c8b302c32fcc7e9e0793236">More...</a><br/></td></tr>
<tr class="separator:a24129e7a8c8b302c32fcc7e9e0793236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f0ec6fe9713fc6667c868420dcc7fb5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a5f0ec6fe9713fc6667c868420dcc7fb5">GetDefaultPlaybackDeviceName</a> () const =0</td></tr>
<tr class="memdesc:a5f0ec6fe9713fc6667c868420dcc7fb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the default playback device.  <a href="#a5f0ec6fe9713fc6667c868420dcc7fb5">More...</a><br/></td></tr>
<tr class="separator:a5f0ec6fe9713fc6667c868420dcc7fb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97d16b58316cf132b5fac28528b2feaa"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a97d16b58316cf132b5fac28528b2feaa">GetDefaultRecordingDeviceName</a> ()=0</td></tr>
<tr class="memdesc:a97d16b58316cf132b5fac28528b2feaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the default recording device.  <a href="#a97d16b58316cf132b5fac28528b2feaa">More...</a><br/></td></tr>
<tr class="separator:a97d16b58316cf132b5fac28528b2feaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af46b9451f31325a5ba147951732205ef"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#af46b9451f31325a5ba147951732205ef">GetDialogVolume</a> () const </td></tr>
<tr class="memdesc:af46b9451f31325a5ba147951732205ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set Dialog volume.  <a href="#af46b9451f31325a5ba147951732205ef">More...</a><br/></td></tr>
<tr class="separator:af46b9451f31325a5ba147951732205ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad134e544a6bd6634905626c8e3dbe94b"><td class="memItemLeft" align="right" valign="top">virtual <br class="typebreak"/>
<a class="el" href="classMezzanine_1_1Audio_1_1iEffectFilterCleanWorkUnit.xhtml">iEffectFilterCleanWorkUnit</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ad134e544a6bd6634905626c8e3dbe94b">GetEffectFilterCleanWork</a> ()=0</td></tr>
<tr class="memdesc:ad134e544a6bd6634905626c8e3dbe94b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the work unit responsible for cleaning all effects and filters.  <a href="#ad134e544a6bd6634905626c8e3dbe94b">More...</a><br/></td></tr>
<tr class="separator:ad134e544a6bd6634905626c8e3dbe94b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab153bfb4032f289d914e5ae8c726d115"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iEffectsHandler.xhtml">iEffectsHandler</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ab153bfb4032f289d914e5ae8c726d115">GetEffectsHandler</a> () const =0</td></tr>
<tr class="memdesc:ab153bfb4032f289d914e5ae8c726d115"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the handler responsible for audio effects.  <a href="#ab153bfb4032f289d914e5ae8c726d115">More...</a><br/></td></tr>
<tr class="separator:ab153bfb4032f289d914e5ae8c726d115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a958a33120e844004d98d6c25b23cd80f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a958a33120e844004d98d6c25b23cd80f">GetEffectVolume</a> () const </td></tr>
<tr class="memdesc:a958a33120e844004d98d6c25b23cd80f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set Effect volume.  <a href="#a958a33120e844004d98d6c25b23cd80f">More...</a><br/></td></tr>
<tr class="separator:a958a33120e844004d98d6c25b23cd80f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a562ed8915f3f4b9a57efbf220c86eabd"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a562ed8915f3f4b9a57efbf220c86eabd">GetInterfaceType</a> () const </td></tr>
<tr class="memdesc:a562ed8915f3f4b9a57efbf220c86eabd"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the type of this manager.  <a href="#a562ed8915f3f4b9a57efbf220c86eabd">More...</a><br/></td></tr>
<tr class="separator:a562ed8915f3f4b9a57efbf220c86eabd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acff375525ca833fbc845f2b1dea0f706"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#acff375525ca833fbc845f2b1dea0f706">GetMasterVolume</a> () const =0</td></tr>
<tr class="memdesc:acff375525ca833fbc845f2b1dea0f706"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set Master volume.  <a href="#acff375525ca833fbc845f2b1dea0f706">More...</a><br/></td></tr>
<tr class="separator:acff375525ca833fbc845f2b1dea0f706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3bd148038353399470f2bb79131989"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1MusicPlayer.xhtml">MusicPlayer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3f3bd148038353399470f2bb79131989">GetMusicPlayer</a> () const =0</td></tr>
<tr class="memdesc:a3f3bd148038353399470f2bb79131989"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the music player for this audio subsystem.  <a href="#a3f3bd148038353399470f2bb79131989">More...</a><br/></td></tr>
<tr class="separator:a3f3bd148038353399470f2bb79131989"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43cf5ca5fc21f31fc6c209c3d453d6cb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a43cf5ca5fc21f31fc6c209c3d453d6cb">GetMusicVolume</a> () const </td></tr>
<tr class="memdesc:a43cf5ca5fc21f31fc6c209c3d453d6cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set Music volume.  <a href="#a43cf5ca5fc21f31fc6c209c3d453d6cb">More...</a><br/></td></tr>
<tr class="separator:a43cf5ca5fc21f31fc6c209c3d453d6cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e571193cdb4452cdb47cc13af1d4fb1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3e571193cdb4452cdb47cc13af1d4fb1">GetNumRecorders</a> () const =0</td></tr>
<tr class="memdesc:a3e571193cdb4452cdb47cc13af1d4fb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> instances being stored by this manager.  <a href="#a3e571193cdb4452cdb47cc13af1d4fb1">More...</a><br/></td></tr>
<tr class="separator:a3e571193cdb4452cdb47cc13af1d4fb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb51e3577eed19059dc0227991729b22"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#adb51e3577eed19059dc0227991729b22">GetNumSounds</a> () const =0</td></tr>
<tr class="memdesc:adb51e3577eed19059dc0227991729b22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instances in this manager.  <a href="#adb51e3577eed19059dc0227991729b22">More...</a><br/></td></tr>
<tr class="separator:adb51e3577eed19059dc0227991729b22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb06feba52117960e6aa7a134b2163a1"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#abb06feba52117960e6aa7a134b2163a1">GetRecorder</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Index) const =0</td></tr>
<tr class="memdesc:abb06feba52117960e6aa7a134b2163a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> by index.  <a href="#abb06feba52117960e6aa7a134b2163a1">More...</a><br/></td></tr>
<tr class="separator:abb06feba52117960e6aa7a134b2163a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f5c8b58d83395a2bdc2da67b55f6e4c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a5f5c8b58d83395a2bdc2da67b55f6e4c">GetSound</a> (const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Index) const =0</td></tr>
<tr class="memdesc:a5f5c8b58d83395a2bdc2da67b55f6e4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance by index.  <a href="#a5f5c8b58d83395a2bdc2da67b55f6e4c">More...</a><br/></td></tr>
<tr class="separator:a5f5c8b58d83395a2bdc2da67b55f6e4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b6cbc722658418f2aa6775fa90f64d9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a1b6cbc722658418f2aa6775fa90f64d9">GetTypeVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type) const =0</td></tr>
<tr class="memdesc:a1b6cbc722658418f2aa6775fa90f64d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the volume for all stored Sound instances of the specified type.  <a href="#a1b6cbc722658418f2aa6775fa90f64d9">More...</a><br/></td></tr>
<tr class="separator:a1b6cbc722658418f2aa6775fa90f64d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17993bb82315393c3eb19c12b59be8f1"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a17993bb82315393c3eb19c12b59be8f1">Initialize</a> ()=0</td></tr>
<tr class="memdesc:a17993bb82315393c3eb19c12b59be8f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures this manager for use prior to entering the main loop.  <a href="#a17993bb82315393c3eb19c12b59be8f1">More...</a><br/></td></tr>
<tr class="separator:a17993bb82315393c3eb19c12b59be8f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5048a43024daee4305d3795c9694f99"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#aa5048a43024daee4305d3795c9694f99">InitializePlaybackDevice</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;DeviceName, const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a> OutputFrequency=44100)=0</td></tr>
<tr class="memdesc:aa5048a43024daee4305d3795c9694f99"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the playback device.  <a href="#aa5048a43024daee4305d3795c9694f99">More...</a><br/></td></tr>
<tr class="separator:aa5048a43024daee4305d3795c9694f99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83961ec9d158906a714835824b751477"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a83961ec9d158906a714835824b751477">IsAmbientMuted</a> () const </td></tr>
<tr class="memdesc:a83961ec9d158906a714835824b751477"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not Ambient Sound instances are muted.  <a href="#a83961ec9d158906a714835824b751477">More...</a><br/></td></tr>
<tr class="separator:a83961ec9d158906a714835824b751477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa00282f6663f0b21cf76014c8301b3eb"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#aa00282f6663f0b21cf76014c8301b3eb">IsDialogMuted</a> () const </td></tr>
<tr class="memdesc:aa00282f6663f0b21cf76014c8301b3eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not Dialog Sound instances are muted.  <a href="#aa00282f6663f0b21cf76014c8301b3eb">More...</a><br/></td></tr>
<tr class="separator:aa00282f6663f0b21cf76014c8301b3eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9090877536057c69c8478fd3ee0b7fd9"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a9090877536057c69c8478fd3ee0b7fd9">IsEffectMuted</a> () const </td></tr>
<tr class="memdesc:a9090877536057c69c8478fd3ee0b7fd9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not Effect Sound instances are muted.  <a href="#a9090877536057c69c8478fd3ee0b7fd9">More...</a><br/></td></tr>
<tr class="separator:a9090877536057c69c8478fd3ee0b7fd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c25dbe2e53689d0d535ea809e3baf69"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a2c25dbe2e53689d0d535ea809e3baf69">IsMusicMuted</a> () const </td></tr>
<tr class="memdesc:a2c25dbe2e53689d0d535ea809e3baf69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not Music Sound instances are muted.  <a href="#a2c25dbe2e53689d0d535ea809e3baf69">More...</a><br/></td></tr>
<tr class="separator:a2c25dbe2e53689d0d535ea809e3baf69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae628c968a30641ede1847f3b082b1891"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ae628c968a30641ede1847f3b082b1891">IsMuted</a> () const =0</td></tr>
<tr class="memdesc:ae628c968a30641ede1847f3b082b1891"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not the <a class="el" href="namespaceMezzanine_1_1Audio.xhtml" title="This namespace is for all the classes belonging to the Audio Subsystem.">Audio</a> subsystem is muted.  <a href="#ae628c968a30641ede1847f3b082b1891">More...</a><br/></td></tr>
<tr class="separator:ae628c968a30641ede1847f3b082b1891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99cb22c41625a069eaa887e912b2e1d1"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a99cb22c41625a069eaa887e912b2e1d1">IsTypeMuted</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type) const =0</td></tr>
<tr class="memdesc:a99cb22c41625a069eaa887e912b2e1d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not Sound instances of the specified type are currently muted.  <a href="#a99cb22c41625a069eaa887e912b2e1d1">More...</a><br/></td></tr>
<tr class="separator:a99cb22c41625a069eaa887e912b2e1d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c56655df592a94308e933d86bfff2dc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a4c56655df592a94308e933d86bfff2dc">MuteAmbient</a> (bool Enable)</td></tr>
<tr class="memdesc:a4c56655df592a94308e933d86bfff2dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not to mute all Ambient Sound instances.  <a href="#a4c56655df592a94308e933d86bfff2dc">More...</a><br/></td></tr>
<tr class="separator:a4c56655df592a94308e933d86bfff2dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98606909d84d5de629c13b1c2b5bf6b5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a98606909d84d5de629c13b1c2b5bf6b5">MuteDialog</a> (bool Enable)</td></tr>
<tr class="memdesc:a98606909d84d5de629c13b1c2b5bf6b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not to mute all Dialog Sound instances.  <a href="#a98606909d84d5de629c13b1c2b5bf6b5">More...</a><br/></td></tr>
<tr class="separator:a98606909d84d5de629c13b1c2b5bf6b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe9a39f93dd93b828b3b7bad5cda2ee9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#abe9a39f93dd93b828b3b7bad5cda2ee9">MuteEffect</a> (bool Enable)</td></tr>
<tr class="memdesc:abe9a39f93dd93b828b3b7bad5cda2ee9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not to mute all Effect Sound instances.  <a href="#abe9a39f93dd93b828b3b7bad5cda2ee9">More...</a><br/></td></tr>
<tr class="separator:abe9a39f93dd93b828b3b7bad5cda2ee9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dc6d082cee0ee486b21f1b1c41f0fb1"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a2dc6d082cee0ee486b21f1b1c41f0fb1">MuteMusic</a> (bool Enable)</td></tr>
<tr class="memdesc:a2dc6d082cee0ee486b21f1b1c41f0fb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not to mute all Music Sound instances.  <a href="#a2dc6d082cee0ee486b21f1b1c41f0fb1">More...</a><br/></td></tr>
<tr class="separator:a2dc6d082cee0ee486b21f1b1c41f0fb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81d65f95c866de99f42a6bf7010738bc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a81d65f95c866de99f42a6bf7010738bc">MuteType</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, bool Enable)=0</td></tr>
<tr class="memdesc:a81d65f95c866de99f42a6bf7010738bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not to mute all Sound instances of a specified type.  <a href="#a81d65f95c866de99f42a6bf7010738bc">More...</a><br/></td></tr>
<tr class="separator:a81d65f95c866de99f42a6bf7010738bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a887fe272e2587378d95fef1bafdd62a2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a887fe272e2587378d95fef1bafdd62a2">PlaybackDeviceNameValid</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;DeviceName) const =0</td></tr>
<tr class="memdesc:a887fe272e2587378d95fef1bafdd62a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the named playback device is available.  <a href="#a887fe272e2587378d95fef1bafdd62a2">More...</a><br/></td></tr>
<tr class="separator:a887fe272e2587378d95fef1bafdd62a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62b5604f864cbda5575a3b33705c58f0"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a62b5604f864cbda5575a3b33705c58f0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a62b5604f864cbda5575a3b33705c58f0">RemoveAllDecoderFactories</a> ()</td></tr>
<tr class="memdesc:a62b5604f864cbda5575a3b33705c58f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes (but does not destroy) all registered <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> instances. <br/></td></tr>
<tr class="separator:a62b5604f864cbda5575a3b33705c58f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6b9e0a759a6277b2c905b1c63fd679d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ad6b9e0a759a6277b2c905b1c63fd679d">RemoveDecoderFactory</a> (<a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> *ToBeRemoved)</td></tr>
<tr class="memdesc:ad6b9e0a759a6277b2c905b1c63fd679d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes (but does not destroy) an <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a>.  <a href="#ad6b9e0a759a6277b2c905b1c63fd679d">More...</a><br/></td></tr>
<tr class="separator:ad6b9e0a759a6277b2c905b1c63fd679d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51bec77d3b8e92b428af05513e463544"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a51bec77d3b8e92b428af05513e463544">RemoveDecoderFactory</a> (const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> Format)</td></tr>
<tr class="memdesc:a51bec77d3b8e92b428af05513e463544"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes (but does not destroy) an <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a>.  <a href="#a51bec77d3b8e92b428af05513e463544">More...</a><br/></td></tr>
<tr class="separator:a51bec77d3b8e92b428af05513e463544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae445369538b5ecb9dadc72c73c5a77dd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ae445369538b5ecb9dadc72c73c5a77dd">SetAmbientVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Ambient)</td></tr>
<tr class="memdesc:ae445369538b5ecb9dadc72c73c5a77dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the volume for all stored Ambient Sound instances.  <a href="#ae445369538b5ecb9dadc72c73c5a77dd">More...</a><br/></td></tr>
<tr class="separator:ae445369538b5ecb9dadc72c73c5a77dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad79d35b832086f62234d585064360d3c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#ad79d35b832086f62234d585064360d3c">SetDialogVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Dialog)</td></tr>
<tr class="memdesc:ad79d35b832086f62234d585064360d3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the volume for all stored Dialog Sound instances.  <a href="#ad79d35b832086f62234d585064360d3c">More...</a><br/></td></tr>
<tr class="separator:ad79d35b832086f62234d585064360d3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6693243c98ed75b41ff696a757c800e3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6693243c98ed75b41ff696a757c800e3">SetEffectVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Effect)</td></tr>
<tr class="memdesc:a6693243c98ed75b41ff696a757c800e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the volume for all stored Effect Sound instances.  <a href="#a6693243c98ed75b41ff696a757c800e3">More...</a><br/></td></tr>
<tr class="separator:a6693243c98ed75b41ff696a757c800e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e0c61c5946c74d32cd018238ad1aa7c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6e0c61c5946c74d32cd018238ad1aa7c">SetMasterMute</a> (bool Enable)=0</td></tr>
<tr class="memdesc:a6e0c61c5946c74d32cd018238ad1aa7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets whether or not to mute all <a class="el" href="namespaceMezzanine_1_1Audio.xhtml" title="This namespace is for all the classes belonging to the Audio Subsystem.">Audio</a>.  <a href="#a6e0c61c5946c74d32cd018238ad1aa7c">More...</a><br/></td></tr>
<tr class="separator:a6e0c61c5946c74d32cd018238ad1aa7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70046fc4889434a4ee7c8eb5315d32dc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a70046fc4889434a4ee7c8eb5315d32dc">SetMasterVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Master)=0</td></tr>
<tr class="memdesc:a70046fc4889434a4ee7c8eb5315d32dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the volume for all stored Sound instances.  <a href="#a70046fc4889434a4ee7c8eb5315d32dc">More...</a><br/></td></tr>
<tr class="separator:a70046fc4889434a4ee7c8eb5315d32dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93e699db7c2e90fabdcff5f255070472"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a93e699db7c2e90fabdcff5f255070472">SetMusicVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;Music)</td></tr>
<tr class="memdesc:a93e699db7c2e90fabdcff5f255070472"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the volume for all stored Music Sound instances.  <a href="#a93e699db7c2e90fabdcff5f255070472">More...</a><br/></td></tr>
<tr class="separator:a93e699db7c2e90fabdcff5f255070472"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf1e15a4d136b470e2710b85bfb051ce"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#adf1e15a4d136b470e2710b85bfb051ce">SetTypeVolume</a> (const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a> Type, const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Vol)=0</td></tr>
<tr class="memdesc:adf1e15a4d136b470e2710b85bfb051ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the volume for all stored Sound instances of the specified type.  <a href="#adf1e15a4d136b470e2710b85bfb051ce">More...</a><br/></td></tr>
<tr class="separator:adf1e15a4d136b470e2710b85bfb051ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae5dc71153e6dfd4843d198999f16ffc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#aae5dc71153e6dfd4843d198999f16ffc">ShutdownPlaybackDevice</a> ()=0</td></tr>
<tr class="memdesc:aae5dc71153e6dfd4843d198999f16ffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shuts down the current playback device and unloads all sounds.  <a href="#aae5dc71153e6dfd4843d198999f16ffc">More...</a><br/></td></tr>
<tr class="separator:aae5dc71153e6dfd4843d198999f16ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee3249f71f330394e81e349370d57a8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6ee3249f71f330394e81e349370d57a8">ManagerBase</a> ()</td></tr>
<tr class="memdesc:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a04cb832dc79f4559cc5b2f57cabfa70d"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a04cb832dc79f4559cc5b2f57cabfa70d">~ManagerBase</a> ()</td></tr>
<tr class="memdesc:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac41d60f674e75d3d16b5544f4feb199c inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac41d60f674e75d3d16b5544f4feb199c">GetImplementationTypeName</a> () const =0</td></tr>
<tr class="memdesc:ac41d60f674e75d3d16b5544f4feb199c inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Allows any manager name to be sent to a stream. Primarily used for logging.  <a href="#ac41d60f674e75d3d16b5544f4feb199c">More...</a><br/></td></tr>
<tr class="separator:ac41d60f674e75d3d16b5544f4feb199c inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a70b61244d5182ad40dd056b2664a6aa7">GetInterfaceTypeAsString</a> () const </td></tr>
<tr class="memdesc:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a string of the interface type of this manager.  <a href="#a70b61244d5182ad40dd056b2664a6aa7">More...</a><br/></td></tr>
<tr class="separator:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#adc9433deb9026dbbb0b51f35a3a10f02">IsInitialized</a> () const </td></tr>
<tr class="memdesc:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager has been initialized.  <a href="#adc9433deb9026dbbb0b51f35a3a10f02">More...</a><br/></td></tr>
<tr class="separator:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ObjectSettingsHandler')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml">Mezzanine::ObjectSettingsHandler</a></td></tr>
<tr class="memitem:aa9a6ab6fbf3c47218915a8f71241e769 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa9a6ab6fbf3c47218915a8f71241e769"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#aa9a6ab6fbf3c47218915a8f71241e769">ObjectSettingsHandler</a> ()</td></tr>
<tr class="memdesc:aa9a6ab6fbf3c47218915a8f71241e769 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:aa9a6ab6fbf3c47218915a8f71241e769 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa60fb959cd9fc9a74f148d2d27d3fd5d inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa60fb959cd9fc9a74f148d2d27d3fd5d"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#aa60fb959cd9fc9a74f148d2d27d3fd5d">~ObjectSettingsHandler</a> ()</td></tr>
<tr class="memdesc:aa60fb959cd9fc9a74f148d2d27d3fd5d inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:aa60fb959cd9fc9a74f148d2d27d3fd5d inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a824dd37692e51c9f43b77bcf12436031 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a824dd37692e51c9f43b77bcf12436031">AddGroupToFile</a> (<a class="el" href="classMezzanine_1_1ObjectSettingGroup.xhtml">ObjectSettingGroup</a> *Group, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:a824dd37692e51c9f43b77bcf12436031 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a SettingGroup to a file name that will be used when settings are saved.  <a href="#a824dd37692e51c9f43b77bcf12436031">More...</a><br/></td></tr>
<tr class="separator:a824dd37692e51c9f43b77bcf12436031 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a985b1e33002c0f01a454e68c147bf35a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a985b1e33002c0f01a454e68c147bf35a">ApplySettingGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;GroupName)</td></tr>
<tr class="memdesc:a985b1e33002c0f01a454e68c147bf35a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies all the settings (and their values) defined in a setting group.  <a href="#a985b1e33002c0f01a454e68c147bf35a">More...</a><br/></td></tr>
<tr class="separator:a985b1e33002c0f01a454e68c147bf35a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2997fc71330b402c87800bf753de8dd7 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ObjectSettingFile.xhtml">ObjectSettingFile</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a2997fc71330b402c87800bf753de8dd7">CreateSettingFile</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:a2997fc71330b402c87800bf753de8dd7 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new Setting file that will track which groups are a part of it.  <a href="#a2997fc71330b402c87800bf753de8dd7">More...</a><br/></td></tr>
<tr class="separator:a2997fc71330b402c87800bf753de8dd7 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b5bf38846a2617d770167326512b0ec inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ObjectSettingGroup.xhtml">ObjectSettingGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a2b5bf38846a2617d770167326512b0ec">CreateSettingGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name)</td></tr>
<tr class="memdesc:a2b5bf38846a2617d770167326512b0ec inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new blank setting group that can have it's settings populated.  <a href="#a2b5bf38846a2617d770167326512b0ec">More...</a><br/></td></tr>
<tr class="separator:a2b5bf38846a2617d770167326512b0ec inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e68b3973ae422792e95fb244858f557 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a7e68b3973ae422792e95fb244858f557">DestroyAllSettingFiles</a> ()</td></tr>
<tr class="memdesc:a7e68b3973ae422792e95fb244858f557 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all Setting files in this handler.  <a href="#a7e68b3973ae422792e95fb244858f557">More...</a><br/></td></tr>
<tr class="separator:a7e68b3973ae422792e95fb244858f557 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad832ed1ddd530528ed42bbbbf8db2bc3 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad832ed1ddd530528ed42bbbbf8db2bc3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#ad832ed1ddd530528ed42bbbbf8db2bc3">DestroyAllSettingGroups</a> ()</td></tr>
<tr class="memdesc:ad832ed1ddd530528ed42bbbbf8db2bc3 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all setting groups stored in this handler. <br/></td></tr>
<tr class="separator:ad832ed1ddd530528ed42bbbbf8db2bc3 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47832e3c9b65e7ed7d110d02654d0597 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a47832e3c9b65e7ed7d110d02654d0597">DestroySettingFile</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:a47832e3c9b65e7ed7d110d02654d0597 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a Setting file by name.  <a href="#a47832e3c9b65e7ed7d110d02654d0597">More...</a><br/></td></tr>
<tr class="separator:a47832e3c9b65e7ed7d110d02654d0597 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2cbfea44b42087a405606573d276fa4 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#ac2cbfea44b42087a405606573d276fa4">DestroySettingFile</a> (<a class="el" href="classMezzanine_1_1ObjectSettingFile.xhtml">ObjectSettingFile</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:ac2cbfea44b42087a405606573d276fa4 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a Setting file.  <a href="#ac2cbfea44b42087a405606573d276fa4">More...</a><br/></td></tr>
<tr class="separator:ac2cbfea44b42087a405606573d276fa4 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a783ba092e9a41af0f5115048169a9de4 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a783ba092e9a41af0f5115048169a9de4">DestroySettingGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name)</td></tr>
<tr class="memdesc:a783ba092e9a41af0f5115048169a9de4 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a setting group by name.  <a href="#a783ba092e9a41af0f5115048169a9de4">More...</a><br/></td></tr>
<tr class="separator:a783ba092e9a41af0f5115048169a9de4 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6032ddb1364971221a1c840dac380de inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#ac6032ddb1364971221a1c840dac380de">DestroySettingGroup</a> (<a class="el" href="classMezzanine_1_1ObjectSettingGroup.xhtml">ObjectSettingGroup</a> *ToBeDestroyed)</td></tr>
<tr class="memdesc:ac6032ddb1364971221a1c840dac380de inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys a setting group.  <a href="#ac6032ddb1364971221a1c840dac380de">More...</a><br/></td></tr>
<tr class="separator:ac6032ddb1364971221a1c840dac380de inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab51d9634497757f2045f5d147503457e inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#ab51d9634497757f2045f5d147503457e">GetAutoGenFiles</a> () const </td></tr>
<tr class="memdesc:ab51d9634497757f2045f5d147503457e inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this object is currently allowed to create/update settings files upon initialization and destruction.  <a href="#ab51d9634497757f2045f5d147503457e">More...</a><br/></td></tr>
<tr class="separator:ab51d9634497757f2045f5d147503457e inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e66244ea9685abaaedfbfe03b38d9ee inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a5e66244ea9685abaaedfbfe03b38d9ee">GetAutoGenPath</a> () const </td></tr>
<tr class="memdesc:a5e66244ea9685abaaedfbfe03b38d9ee inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this object is currently allowed to create folders when saving.  <a href="#a5e66244ea9685abaaedfbfe03b38d9ee">More...</a><br/></td></tr>
<tr class="separator:a5e66244ea9685abaaedfbfe03b38d9ee inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb95147380378d0f94e4f28b3cd96508 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#a63cd699ac54b73953f35ec9cfc05e506">ConstString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#acb95147380378d0f94e4f28b3cd96508">GetCurrentSettingsSaveFile</a> () const </td></tr>
<tr class="memdesc:acb95147380378d0f94e4f28b3cd96508 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the name of the file the "Current" setting group is saved to.  <a href="#acb95147380378d0f94e4f28b3cd96508">More...</a><br/></td></tr>
<tr class="separator:acb95147380378d0f94e4f28b3cd96508 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a911ba6e6ddf33f71261f226983762ece inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ObjectSettingFile.xhtml">ObjectSettingFile</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a911ba6e6ddf33f71261f226983762ece">GetSettingFile</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:a911ba6e6ddf33f71261f226983762ece inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a Setting file by name.  <a href="#a911ba6e6ddf33f71261f226983762ece">More...</a><br/></td></tr>
<tr class="separator:a911ba6e6ddf33f71261f226983762ece inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace46795e4434f12495746c14c30d581b inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ObjectSettingGroup.xhtml">ObjectSettingGroup</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#ace46795e4434f12495746c14c30d581b">GetSettingGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name) const </td></tr>
<tr class="memdesc:ace46795e4434f12495746c14c30d581b inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a setting group by name.  <a href="#ace46795e4434f12495746c14c30d581b">More...</a><br/></td></tr>
<tr class="separator:ace46795e4434f12495746c14c30d581b inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4292d363bba44b1244c4e3fafca726a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#ae4292d363bba44b1244c4e3fafca726a">GetSettingsFilePath</a> () const </td></tr>
<tr class="memdesc:ae4292d363bba44b1244c4e3fafca726a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the currently set settings file path.  <a href="#ae4292d363bba44b1244c4e3fafca726a">More...</a><br/></td></tr>
<tr class="separator:ae4292d363bba44b1244c4e3fafca726a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3777e9716ae4c2a7188e30f5f39f79f2 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CountedPtr.xhtml">CountedPtr</a>&lt; <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a673b2401b956abd67f876bcb6c53a28c">SettingGroupVector</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a3777e9716ae4c2a7188e30f5f39f79f2">LoadSettings</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Path)</td></tr>
<tr class="memdesc:a3777e9716ae4c2a7188e30f5f39f79f2 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads settings from a settings file.  <a href="#a3777e9716ae4c2a7188e30f5f39f79f2">More...</a><br/></td></tr>
<tr class="separator:a3777e9716ae4c2a7188e30f5f39f79f2 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dc214e7817f3a2a9a044490b98d3c09 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CountedPtr.xhtml">CountedPtr</a>&lt; <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a673b2401b956abd67f876bcb6c53a28c">SettingGroupVector</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a6dc214e7817f3a2a9a044490b98d3c09">LoadSettings</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:a6dc214e7817f3a2a9a044490b98d3c09 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads settings from a settings file using the specified settings path.  <a href="#a6dc214e7817f3a2a9a044490b98d3c09">More...</a><br/></td></tr>
<tr class="separator:a6dc214e7817f3a2a9a044490b98d3c09 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e3953d05fb5446539fa5e56dfb8f2b6 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CountedPtr.xhtml">CountedPtr</a>&lt; <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a673b2401b956abd67f876bcb6c53a28c">SettingGroupVector</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a4e3953d05fb5446539fa5e56dfb8f2b6">LoadSettingsFromGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group)</td></tr>
<tr class="memdesc:a4e3953d05fb5446539fa5e56dfb8f2b6 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads settings from a settings file.  <a href="#a4e3953d05fb5446539fa5e56dfb8f2b6">More...</a><br/></td></tr>
<tr class="separator:a4e3953d05fb5446539fa5e56dfb8f2b6 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66d85f481956daf504240c4062887869 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CountedPtr.xhtml">CountedPtr</a>&lt; <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a673b2401b956abd67f876bcb6c53a28c">SettingGroupVector</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a66d85f481956daf504240c4062887869">LoadSettingsFromXML</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;RootSettings)</td></tr>
<tr class="memdesc:a66d85f481956daf504240c4062887869 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads settings from an xml node.  <a href="#a66d85f481956daf504240c4062887869">More...</a><br/></td></tr>
<tr class="separator:a66d85f481956daf504240c4062887869 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5290e6622ef1fcdd5658053f0d53e35 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#ad5290e6622ef1fcdd5658053f0d53e35">RemoveGroupFromFile</a> (<a class="el" href="classMezzanine_1_1ObjectSettingGroup.xhtml">ObjectSettingGroup</a> *Group, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:ad5290e6622ef1fcdd5658053f0d53e35 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes a previously assigned group from a save file name.  <a href="#ad5290e6622ef1fcdd5658053f0d53e35">More...</a><br/></td></tr>
<tr class="separator:ad5290e6622ef1fcdd5658053f0d53e35 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb701d81b590606477f739a0d7c6d0e0 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#acb701d81b590606477f739a0d7c6d0e0">SaveAllSettings</a> ()</td></tr>
<tr class="memdesc:acb701d81b590606477f739a0d7c6d0e0 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves all settings that need saving.  <a href="#acb701d81b590606477f739a0d7c6d0e0">More...</a><br/></td></tr>
<tr class="separator:acb701d81b590606477f739a0d7c6d0e0 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4681c2280bf67e3662ace1fd958d54fe inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a4681c2280bf67e3662ace1fd958d54fe">SaveSettingGroups</a> (<a class="el" href="namespaceMezzanine.xhtml#a9b3665ebc21b3444e1d7858d460475f6">StringVector</a> &amp;GroupNames, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Path)</td></tr>
<tr class="memdesc:a4681c2280bf67e3662ace1fd958d54fe inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves all settings to a settings file.  <a href="#a4681c2280bf67e3662ace1fd958d54fe">More...</a><br/></td></tr>
<tr class="separator:a4681c2280bf67e3662ace1fd958d54fe inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf0d35ab0c32fb8196b8c12d56b77cf7 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#adf0d35ab0c32fb8196b8c12d56b77cf7">SaveSettingGroups</a> (<a class="el" href="namespaceMezzanine.xhtml#a9b3665ebc21b3444e1d7858d460475f6">StringVector</a> &amp;GroupNames, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:adf0d35ab0c32fb8196b8c12d56b77cf7 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves all settings to a settings file using the specified settings path.  <a href="#adf0d35ab0c32fb8196b8c12d56b77cf7">More...</a><br/></td></tr>
<tr class="separator:adf0d35ab0c32fb8196b8c12d56b77cf7 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96f66c0dd1adc921071bab7a387b07cd inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a96f66c0dd1adc921071bab7a387b07cd">SaveSettingsByFile</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Path)</td></tr>
<tr class="memdesc:a96f66c0dd1adc921071bab7a387b07cd inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves all settings that have their optional filename set to the specified file.  <a href="#a96f66c0dd1adc921071bab7a387b07cd">More...</a><br/></td></tr>
<tr class="separator:a96f66c0dd1adc921071bab7a387b07cd inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd5f4af261e30de8b02599a9d3cc3a88 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#afd5f4af261e30de8b02599a9d3cc3a88">SaveSettingsByFile</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:afd5f4af261e30de8b02599a9d3cc3a88 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves all settings that have their optional filename set to the specified file.  <a href="#afd5f4af261e30de8b02599a9d3cc3a88">More...</a><br/></td></tr>
<tr class="separator:afd5f4af261e30de8b02599a9d3cc3a88 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac93a239a2d69022d9a27d387dbcf5abe inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#ac93a239a2d69022d9a27d387dbcf5abe">SaveSettingsToXML</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;RootSettings, bool SaveCurrent=true)</td></tr>
<tr class="memdesc:ac93a239a2d69022d9a27d387dbcf5abe inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves all the current setting groups as children of the provided <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> node.  <a href="#ac93a239a2d69022d9a27d387dbcf5abe">More...</a><br/></td></tr>
<tr class="separator:ac93a239a2d69022d9a27d387dbcf5abe inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae2839db005c52ecdd0fad15723243ca inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#aae2839db005c52ecdd0fad15723243ca">SaveSettingsToXML</a> (<a class="el" href="namespaceMezzanine.xhtml#a9b3665ebc21b3444e1d7858d460475f6">StringVector</a> &amp;GroupNames, <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;RootSettings)</td></tr>
<tr class="memdesc:aae2839db005c52ecdd0fad15723243ca inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Saves the named settings groups as children of the provided <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> node.  <a href="#aae2839db005c52ecdd0fad15723243ca">More...</a><br/></td></tr>
<tr class="separator:aae2839db005c52ecdd0fad15723243ca inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21b3109416ff12dea832c8a8f40358a5 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a21b3109416ff12dea832c8a8f40358a5">SetAutoGenFiles</a> (bool Enable)</td></tr>
<tr class="memdesc:a21b3109416ff12dea832c8a8f40358a5 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables the automatic creation of settings files on initialization and destruction of this object.  <a href="#a21b3109416ff12dea832c8a8f40358a5">More...</a><br/></td></tr>
<tr class="separator:a21b3109416ff12dea832c8a8f40358a5 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83a9e8fd044461697fb596c9652cd71f inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a83a9e8fd044461697fb596c9652cd71f">SetAutoGenPath</a> (bool Enable)</td></tr>
<tr class="memdesc:a83a9e8fd044461697fb596c9652cd71f inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables the automatic creation of a directory path when saving.  <a href="#a83a9e8fd044461697fb596c9652cd71f">More...</a><br/></td></tr>
<tr class="separator:a83a9e8fd044461697fb596c9652cd71f inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac4557c72aee5a8f02a7c1515e857175 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#aac4557c72aee5a8f02a7c1515e857175">SetCurrentSettingsSaveFile</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:aac4557c72aee5a8f02a7c1515e857175 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the file that will have this object's "current" settings saved to.  <a href="#aac4557c72aee5a8f02a7c1515e857175">More...</a><br/></td></tr>
<tr class="separator:aac4557c72aee5a8f02a7c1515e857175 inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31002ee8b05d8876500a726448a0dd2a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a31002ee8b05d8876500a726448a0dd2a">SetSettingsFilePath</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Path)</td></tr>
<tr class="memdesc:a31002ee8b05d8876500a726448a0dd2a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the path to be assumed when saving/loading settings to files.  <a href="#a31002ee8b05d8876500a726448a0dd2a">More...</a><br/></td></tr>
<tr class="separator:a31002ee8b05d8876500a726448a0dd2a inherit pub_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; AudioManager &gt;</a></td></tr>
<tr class="memitem:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7174af94e201bdaeab717cdbcbb2e565"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a7174af94e201bdaeab717cdbcbb2e565">Singleton</a> ()</td></tr>
<tr class="memdesc:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e45fc3969b0fae3d095676cc515da1d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a5e45fc3969b0fae3d095676cc515da1d">~Singleton</a> ()</td></tr>
<tr class="memdesc:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a98a2f0eebfc473933e53ca19eef145f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6971c7f71f9690d4c704fb1eed7561ce">DecoderFactoryContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a98a2f0eebfc473933e53ca19eef145f6">DecoderFactories</a></td></tr>
<tr class="memdesc:a98a2f0eebfc473933e53ca19eef145f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Container storing all registered <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> instances.  <a href="#a98a2f0eebfc473933e53ca19eef145f6">More...</a><br/></td></tr>
<tr class="separator:a98a2f0eebfc473933e53ca19eef145f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264">Initialized</a></td></tr>
<tr class="memdesc:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple bool indicating whether or not this manager has been initialized.  <a href="#ada3bad0fe77ff2fa7404eea7a5c16264">More...</a><br/></td></tr>
<tr class="separator:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc">TheEntresol</a></td></tr>
<tr class="memdesc:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">The actual pointer to the <a class="el" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a> core class.  <a href="#ae619b4bd732d7345e0ef59ecde6d03cc">More...</a><br/></td></tr>
<tr class="separator:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1ObjectSettingsHandler')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml">Mezzanine::ObjectSettingsHandler</a></td></tr>
<tr class="memitem:adc490c085bca23a7da115db79b2e3e70 inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adc490c085bca23a7da115db79b2e3e70"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>AutoGenFiles</b></td></tr>
<tr class="separator:adc490c085bca23a7da115db79b2e3e70 inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad70119200c6866ad053eb799f0655522 inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad70119200c6866ad053eb799f0655522"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>AutoGenPath</b></td></tr>
<tr class="separator:ad70119200c6866ad053eb799f0655522 inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cb79cf1452cc3286bc942abecc0650f inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9cb79cf1452cc3286bc942abecc0650f"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CurrentSettingsSaveFile</b></td></tr>
<tr class="separator:a9cb79cf1452cc3286bc942abecc0650f inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab529bc8e090b3f329190edda25ffed2f inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab529bc8e090b3f329190edda25ffed2f"></a>
SettingFilesContainer&#160;</td><td class="memItemRight" valign="bottom"><b>SettingFiles</b></td></tr>
<tr class="separator:ab529bc8e090b3f329190edda25ffed2f inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90fc555c28397eeb35aae7836dfa4638 inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a90fc555c28397eeb35aae7836dfa4638"></a>
SettingGroupContainer&#160;</td><td class="memItemRight" valign="bottom"><b>SettingGroups</b></td></tr>
<tr class="separator:a90fc555c28397eeb35aae7836dfa4638 inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a236bd0dba38492b7a70f9d3ae8142a12 inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a236bd0dba38492b7a70f9d3ae8142a12"></a>
<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>SettingsFilePath</b></td></tr>
<tr class="separator:a236bd0dba38492b7a70f9d3ae8142a12 inherit pro_attribs_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#aa148d67ebe4538adcd74d3f02f7ddc97">GetTypeAsString</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> &amp;<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>)</td></tr>
<tr class="memdesc:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the string form of the type of manager.  <a href="#aa148d67ebe4538adcd74d3f02f7ddc97">More...</a><br/></td></tr>
<tr class="separator:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#acb0c0b9192f8ce94c725d5550e8439f6">GetTypeFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerName)</td></tr>
<tr class="memdesc:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of manager requested from a string.  <a href="#acb0c0b9192f8ce94c725d5550e8439f6">More...</a><br/></td></tr>
<tr class="separator:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; AudioManager &gt;</a></td></tr>
<tr class="memitem:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static AudioManager *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67">GetSingletonPtr</a> ()</td></tr>
<tr class="memdesc:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fetches a pointer to the singleton.  <a href="#a78fc425584913f0b2c615ec440871a67">More...</a><br/></td></tr>
<tr class="separator:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9">SingletonValid</a> ()</td></tr>
<tr class="memdesc:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the singleton pointer is valid.  <a href="#a554165fe3e4b594b678d64215fd7a6f9">More...</a><br/></td></tr>
<tr class="separator:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classMezzanine_1_1ObjectSettingsHandler')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml">Mezzanine::ObjectSettingsHandler</a></td></tr>
<tr class="memitem:ae662009cd3cbd713ad79ac95ac9cf320 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae662009cd3cbd713ad79ac95ac9cf320"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>AppendCurrentSettings</b> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;CurrentNode)=0</td></tr>
<tr class="separator:ae662009cd3cbd713ad79ac95ac9cf320 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69acdca039f113c3bc7b6410e6277c21 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a69acdca039f113c3bc7b6410e6277c21"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ApplySettingGroupImpl</b> (<a class="el" href="classMezzanine_1_1ObjectSettingGroup.xhtml">ObjectSettingGroup</a> *Group)=0</td></tr>
<tr class="separator:a69acdca039f113c3bc7b6410e6277c21 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addfbe41cc6d52613edad52b2572121c0 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="addfbe41cc6d52613edad52b2572121c0"></a>
virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetObjectRootNodeName</b> () const =0</td></tr>
<tr class="separator:addfbe41cc6d52613edad52b2572121c0 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8387d2882dbc1726650d105a05ae8981 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a8387d2882dbc1726650d105a05ae8981"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>LoadSettingSetFromXML</b> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode, <a class="el" href="classMezzanine_1_1ObjectSettingSet.xhtml">ObjectSettingSet</a> *Set)</td></tr>
<tr class="separator:a8387d2882dbc1726650d105a05ae8981 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a449d13d7cae00ebf4499d5e58d22eadb inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1CountedPtr.xhtml">CountedPtr</a>&lt; <a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a673b2401b956abd67f876bcb6c53a28c">SettingGroupVector</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a449d13d7cae00ebf4499d5e58d22eadb">LoadSettingsFromFile</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Path)</td></tr>
<tr class="separator:a449d13d7cae00ebf4499d5e58d22eadb inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af28de5a69811f09e37cfff412900c204 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af28de5a69811f09e37cfff412900c204"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SaveSettingSetToXML</b> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode, <a class="el" href="classMezzanine_1_1ObjectSettingSet.xhtml">ObjectSettingSet</a> *Set)</td></tr>
<tr class="separator:af28de5a69811f09e37cfff412900c204 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dfe2e9ee9c26b7c44ffcd9c253b8fa7 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ObjectSettingsHandler.xhtml#a4dfe2e9ee9c26b7c44ffcd9c253b8fa7">SaveSettingsToFile</a> (<a class="el" href="namespaceMezzanine.xhtml#a9b3665ebc21b3444e1d7858d460475f6">StringVector</a> &amp;GroupNames, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Path)</td></tr>
<tr class="separator:a4dfe2e9ee9c26b7c44ffcd9c253b8fa7 inherit pro_methods_classMezzanine_1_1ObjectSettingsHandler"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_attribs_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pro_static_attribs_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; AudioManager &gt;</a></td></tr>
<tr class="memitem:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0db9959ccd7daa1345f4567aa0b0655d"></a>
static AudioManager *&#160;</td><td class="memItemRight" valign="bottom"><b>SingletonPtr</b></td></tr>
<tr class="separator:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is the base manager class for the <a class="el" href="namespaceMezzanine_1_1Audio.xhtml" title="This namespace is for all the classes belonging to the Audio Subsystem.">Audio</a> subsystem and it's operations. </p>
<p>This is a place for loading, storing, and running sound files as necessary in a given application. </p>

<p>Definition at line <a class="el" href="audiomanager_8h_source.xhtml#l00114">114</a> of file <a class="el" href="audiomanager_8h_source.xhtml">audiomanager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a554bd5244c44616916b15bdfaa863ac6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Audio::AudioManager::AudioManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>XMLNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">XMLNode</td><td>The node of the xml document to construct from. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a46805fc2688d3c22931b59e406b455d3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::Audio::AudioManager::~AudioManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Class Destructor. </p>
<p>The class destructor. </p>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a7ad4208cc11540da229d2da2562d2615"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::_RegisterSoundScapeManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml">Audio::SoundScapeManager</a> *&#160;</td>
          <td class="paramname"><em>Manager</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Notifies this <a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml" title="This is the base manager class for the Audio subsystem and it&#39;s operations.">AudioManager</a> of the creation of a new <a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml" title="This is the base manager class for audio being played in a 3D environment.">SoundScapeManager</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Manager</td><td>A pointer to the manager being registered. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1f42a8decdd6f13435e0d683b3bdd6cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::_UnregisterSoundScapeManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml">Audio::SoundScapeManager</a> *&#160;</td>
          <td class="paramname"><em>Manager</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Notifies this <a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml" title="This is the base manager class for the Audio subsystem and it&#39;s operations.">AudioManager</a> of the destruction of a <a class="el" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml" title="This is the base manager class for audio being played in a 3D environment.">SoundScapeManager</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Manager</td><td>A pointer to the manager being unregistered. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5788e225b4fcc2d79e4d7e771141bef0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::AddDecoderFactory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> *&#160;</td>
          <td class="paramname"><em>ToBeAdded</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to this manager allowing the playback of new types of sound formats. </p>
<dl class="section note"><dt>Note</dt><dd>If an <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> is already registered to the same <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>, it will be replaced. It will not be deleted. Use with care. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeAdded</td><td>A pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to be added. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00199">199</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7dc65894bbe808c485eebd91872205ed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateAmbientSound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a blank Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00094">94</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3812d7c8623b994eaeef0f2814d6e1b9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateAmbientSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00103">103</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab889eda0e90a524f217bef1f606fb01f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateAmbientSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00112">112</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4b1dfb329681ce2672855df4b3fb1c17"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateAmbientSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FileName</td><td>The name of the file to read audio data from. </td></tr>
    <tr><td class="paramname">Group</td><td>The resource group in which the file resides. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00121">121</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5bf4903d942d64bd203576e294fb18f4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateAmbientSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded. </p>
<dl class="section note"><dt>Note</dt><dd>The buffer is copied and put into a memory stream. Thus safe for disposal afterward. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af0101c3f9f71fb45662dd6b6ac86b81a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateAmbientSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Ambient <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded. </p>
<dl class="section note"><dt>Note</dt><dd>The buffer is copied and put into a memory stream. Thus safe for disposal afterward. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00139">139</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1c1900d949b816d3a21c104cafd3a689"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateDialogSound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a blank Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00096">96</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a80a1476dcd51f615a71a667d21f9680f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateDialogSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00105">105</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaf4d1e761582a714463b176d9bf5aed5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateDialogSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aefe89cc720e73ab366cf1f7908a6f63c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateDialogSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FileName</td><td>The name of the file to read audio data from. </td></tr>
    <tr><td class="paramname">Group</td><td>The resource group in which the file resides. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00123">123</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2431ea32d9c90f01be4e77fb656ecacf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateDialogSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded. </p>
<dl class="section note"><dt>Note</dt><dd>The buffer is copied and put into a memory stream. Thus safe for disposal afterward. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">SoundName</td><td>The name of the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00132">132</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af66b2f71aa1660710f30311b9dc97fb5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateDialogSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Dialog <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded. </p>
<dl class="section note"><dt>Note</dt><dd>The buffer is copied and put into a memory stream. Thus safe for disposal afterward. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00141">141</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aef0fcb4a1d82cd791aa596b51aad7522"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateEffectSound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a blank Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00098">98</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a34a1ba084e42ee29e232eead71ce23bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateEffectSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00107">107</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6f63a5c042af15025ef6165377ded99e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateEffectSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00116">116</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a18c8a9034ac05ce011e43a4686127a10"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateEffectSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FileName</td><td>The name of the file to read audio data from. </td></tr>
    <tr><td class="paramname">Group</td><td>The resource group in which the file resides. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00125">125</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4f353f3ce3441fe4db279773a6e55db9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateEffectSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded. </p>
<dl class="section note"><dt>Note</dt><dd>The buffer is copied and put into a memory stream. Thus safe for disposal afterward. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab93e5f59023a733ff459c8816b261336"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateEffectSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Effect <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded. </p>
<dl class="section note"><dt>Note</dt><dd>The buffer is copied and put into a memory stream. Thus safe for disposal afterward. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00143">143</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a368d3b0b8093c400798f46fe59ce176f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateMusicSound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a blank Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7682fd992258a2e7d618ce51fae12b8a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateMusicSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afe8a99235142a2fb3252376e22c00d8e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateMusicSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00118">118</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0b7349a8c0ca70985503a149ca308471"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateMusicSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FileName</td><td>The name of the file to read audio data from. </td></tr>
    <tr><td class="paramname">Group</td><td>The resource group in which the file resides. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00127">127</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a27a0eedcead660ea56adfad484daaed3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateMusicSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded. </p>
<dl class="section note"><dt>Note</dt><dd>The buffer is copied and put into a memory stream. Thus safe for disposal afterward. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00136">136</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5c768d8c65d248819031d94a15946ead"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> * Mezzanine::Audio::AudioManager::CreateMusicSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new Music <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded. </p>
<dl class="section note"><dt>Note</dt><dd>The buffer is copied and put into a memory stream. Thus safe for disposal afterward. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00145">145</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="afc489b3a7b2d10e9ecb17f0ecb45f6ec"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a>* Mezzanine::Audio::AudioManager::CreateRecorder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the created <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a>. </dd></dl>

</div>
</div>
<a class="anchor" id="a3cab9f9dd60801aef8c96ff74d3e648e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>* Mezzanine::Audio::AudioManager::CreateSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a blank <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> without a stream attached to it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of sound the created <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> is to be categorized as. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

</div>
</div>
<a class="anchor" id="a76c6831bc937abeb9d1f643f85588644"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>* Mezzanine::Audio::AudioManager::CreateSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is encoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of sound the created <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> is to be categorized as. </td></tr>
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

</div>
</div>
<a class="anchor" id="a48d7d4d1b79670f0465b270fb8302919"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>* Mezzanine::Audio::AudioManager::CreateSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td>
          <td class="paramname"><em>Stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a custom stream that is unencoded. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of sound the created <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> is to be categorized as. </td></tr>
    <tr><td class="paramname">Stream</td><td>A Datastream containing the data to be streamed for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

</div>
</div>
<a class="anchor" id="a3158e14493646364bcb935060eb0d564"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>* Mezzanine::Audio::AudioManager::CreateSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of sound the created <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> is to be categorized as. </td></tr>
    <tr><td class="paramname">FileName</td><td>The name of the file to read audio data from. </td></tr>
    <tr><td class="paramname">Group</td><td>The resource group in which the file resides. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

</div>
</div>
<a class="anchor" id="a3327becdd03f55b32f7eb9eca3b181ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>* Mezzanine::Audio::AudioManager::CreateSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Encode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is encoded. </p>
<dl class="section note"><dt>Note</dt><dd>The created stream will take ownership of the buffer you provide. If you want it to have a separate buffer then create a copy and pass that in. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of sound the created <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> is to be categorized as. </td></tr>
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Encode</td><td>The encoding to be expected when decoding audio for this <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

</div>
</div>
<a class="anchor" id="a4a37e6fbdd0d17719d0a376af64d16e2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>* Mezzanine::Audio::AudioManager::CreateSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>StreamName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7">Char8</a> *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Frequency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782">Audio::BitConfig</a>&#160;</td>
          <td class="paramname"><em>Config</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> from a memory buffer that is unencoded. </p>
<dl class="section note"><dt>Note</dt><dd>The created stream will take ownership of the buffer you provide. If you want it to have a separate buffer then create a copy and pass that in. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of sound the created <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> is to be categorized as. </td></tr>
    <tr><td class="paramname">StreamName</td><td>The name to be given to the stream being created. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the buffer where the audio data is located. </td></tr>
    <tr><td class="paramname">Length</td><td>The length of the buffer provided to this method(in bytes). </td></tr>
    <tr><td class="paramname">Frequency</td><td>The frequency (or sample rate) of the audio data. </td></tr>
    <tr><td class="paramname">Config</td><td>The bit configuration of the audio data. Helps to determine sample size. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance that was created. </dd></dl>

</div>
</div>
<a class="anchor" id="a123ee30493e5f3329a0eec6019105550"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::AudioManager::DecoderFactoryExists </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if a <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> is already registered with this manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Format</td><td>The <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> supported by the <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to look for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if a <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> supporting that <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> exists, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00206">206</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9ca9f9f3dcdae87b8c6b945b9d54dd3e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::Deinitialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes this manager from any necessary configuration so it can be safely disposed of. </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab13bf1e752c3b54c7c392ba9a869fb72">Mezzanine::ManagerBase</a>.</p>

</div>
</div>
<a class="anchor" id="a8096fc606ad6ec6af7a2ad27d455ae17"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::DestroyDecoderFactory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> *&#160;</td>
          <td class="paramname"><em>ToBeDestroyed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroy a registered <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeDestroyed</td><td>A pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to be destroyed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00233">233</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a275fdab6150b8025eadc46d1993d6927"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::DestroyDecoderFactory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Encoding</a>&#160;</td>
          <td class="paramname"><em>Format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroy a registered <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Format</td><td>The <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> supported by the <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to be destroyed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00238">238</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1ca91fb08fa41db9ed91e5cb054975d4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::DestroyRecorder </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> *&#160;</td>
          <td class="paramname"><em>ToBeDestroyed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys a <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> instance by pointer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeDestroyed</td><td>A pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> instance to be destroyed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af840c203b98b6841a8c97ff4a427a946"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::DestroySound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> *&#160;</td>
          <td class="paramname"><em>ToBeDestroyed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deletes a <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeDestroyed</td><td>A pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> you want deleted. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af53c243ccdd68d802a6a0ea1f7a10b7e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::AudioManager::GetAmbientVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the currently set Ambient volume. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the current Ambient volume. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a934c8ddcbb078b888da3b4c9b9ea1dd9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> Mezzanine::Audio::AudioManager::GetAvailablePlaybackDeviceCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of available playback devices. </p>
<p>This function will return the total number of available devices, including the default. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of available devices. </dd></dl>

</div>
</div>
<a class="anchor" id="ab14549d7c975f99864b54506b1bce755"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Audio::AudioManager::GetAvailablePlaybackDeviceName </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493">Whole</a> &amp;&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of an available playback device by index. </p>
<p>This function will retrieve the name of a device by it's index on the sound managers device list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The position on the device list you wish to access the name of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the name of the device. </dd></dl>

</div>
</div>
<a class="anchor" id="a46ebf03ddb5df179cfb99afc3c280fb6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Mezzanine::Audio::AudioManager::GetAvailableRecordingDeviceCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of currently available recording devices. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt32 containing the number of recording devices on this system. </dd></dl>

</div>
</div>
<a class="anchor" id="afa704ff0ff84e8270c317cc8379f43ab"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Audio::AudioManager::GetAvailableRecordingDeviceName </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of an available recording device by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the device to retrieve the name for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a String containing the available device name at the specified index. </dd></dl>

</div>
</div>
<a class="anchor" id="a3a7fe750dc53f40c9a4ca37129cf893a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iBufferUpdate2DWorkUnit.xhtml">iBufferUpdate2DWorkUnit</a>* Mezzanine::Audio::AudioManager::GetBufferUpdate2DWork </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the work unit responsible for updating the buffers of sounds. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the BufferUpdate2DWorkUnit used by this manager. </dd></dl>

</div>
</div>
<a class="anchor" id="a6b263080b6760bc583c4c596099e8642"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Audio::AudioManager::GetCurrentPlaybackDeviceName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of the playback device currently in use. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a String containing the name of the device this manager was initiailzed with, or empty if one hasn't been set. </dd></dl>

</div>
</div>
<a class="anchor" id="a24129e7a8c8b302c32fcc7e9e0793236"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> * Mezzanine::Audio::AudioManager::GetDecoderFactory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets an <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> by it's supported <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Format</td><td>The <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> supported by the <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to retrieve. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> registered to the provided <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>, or NULL if none are registered. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00211">211</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5f0ec6fe9713fc6667c868420dcc7fb5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Audio::AudioManager::GetDefaultPlaybackDeviceName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of the default playback device. </p>
<p>This function will return the name of the system default device. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the name of the default device. </dd></dl>

</div>
</div>
<a class="anchor" id="a97d16b58316cf132b5fac28528b2feaa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::Audio::AudioManager::GetDefaultRecordingDeviceName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the name of the default recording device. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a String containing the name of the default recording device on this system. </dd></dl>

</div>
</div>
<a class="anchor" id="af46b9451f31325a5ba147951732205ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::AudioManager::GetDialogVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the currently set Dialog volume. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the current Dialog volume. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00165">165</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad134e544a6bd6634905626c8e3dbe94b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iEffectFilterCleanWorkUnit.xhtml">iEffectFilterCleanWorkUnit</a>* Mezzanine::Audio::AudioManager::GetEffectFilterCleanWork </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the work unit responsible for cleaning all effects and filters. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the BufferUpdateWorkUnit used by this manager. </dd></dl>

</div>
</div>
<a class="anchor" id="ab153bfb4032f289d914e5ae8c726d115"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iEffectsHandler.xhtml">iEffectsHandler</a>* Mezzanine::Audio::AudioManager::GetEffectsHandler </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the handler responsible for audio effects. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iEffectsHandler.xhtml">iEffectsHandler</a> for this audio subsystem. </dd></dl>

</div>
</div>
<a class="anchor" id="a958a33120e844004d98d6c25b23cd80f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::AudioManager::GetEffectVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the currently set Effect volume. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the current Effect volume. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00174">174</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a562ed8915f3f4b9a57efbf220c86eabd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> Mezzanine::Audio::AudioManager::GetInterfaceType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the type of this manager. </p>
<p>This is intended to make using and casting from Manager base easier. With this is is possible to cast from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a> to the correct Manager Type. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a ManagerTypeName to identify what this can be safely cast to. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a388aa37ed71b8667785b789c137aa8c6">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00260">260</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="acff375525ca833fbc845f2b1dea0f706"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::AudioManager::GetMasterVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the currently set Master volume. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the current Master volume. </dd></dl>

</div>
</div>
<a class="anchor" id="a3f3bd148038353399470f2bb79131989"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1MusicPlayer.xhtml">MusicPlayer</a>* Mezzanine::Audio::AudioManager::GetMusicPlayer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the music player for this audio subsystem. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the Music player belonging to this system, or NULL if this manager does not support one. </dd></dl>

</div>
</div>
<a class="anchor" id="a43cf5ca5fc21f31fc6c209c3d453d6cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::AudioManager::GetMusicVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the currently set Music volume. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the current Music volume. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3e571193cdb4452cdb47cc13af1d4fb1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Mezzanine::Audio::AudioManager::GetNumRecorders </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> instances being stored by this manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt32 representing the number of <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> instances within this manager. </dd></dl>

</div>
</div>
<a class="anchor" id="adb51e3577eed19059dc0227991729b22"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> Mezzanine::Audio::AudioManager::GetNumSounds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the number of <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instances in this manager. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a UInt32 representing the number of <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instances contained in this manager. </dd></dl>

</div>
</div>
<a class="anchor" id="abb06feba52117960e6aa7a134b2163a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a>* Mezzanine::Audio::AudioManager::GetRecorder </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> to retrieve. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml">iRecorder</a> at the specified index. </dd></dl>

</div>
</div>
<a class="anchor" id="a5f5c8b58d83395a2bdc2da67b55f6e4c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a>* Mezzanine::Audio::AudioManager::GetSound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> instance by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>The index of the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> to be retrieved. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iSound.xhtml">iSound</a> at the specified index. </dd></dl>

</div>
</div>
<a class="anchor" id="a1b6cbc722658418f2aa6775fa90f64d9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> Mezzanine::Audio::AudioManager::GetTypeVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the volume for all stored Sound instances of the specified type. </p>
<dl class="section note"><dt>Note</dt><dd>Although this can accept any UInt16 value, be mindful of the SoundType enum to avoid type collisions. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">This</td><td>method can throw a "II_IDENTITY_NOT_FOUND_EXCEPTION" if the a handler of the specified type does not exist. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of Sound instances to get the volume of. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a Real representing the current volume of the specified sound type. </dd></dl>

</div>
</div>
<a class="anchor" id="a17993bb82315393c3eb19c12b59be8f1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::Initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configures this manager for use prior to entering the main loop. </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a864e3cac11928a602c1db28fa2d52ee2">Mezzanine::ManagerBase</a>.</p>

</div>
</div>
<a class="anchor" id="aa5048a43024daee4305d3795c9694f99"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::AudioManager::InitializePlaybackDevice </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>DeviceName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465">Integer</a>&#160;</td>
          <td class="paramname"><em>OutputFrequency</em> = <code>44100</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the playback device. </p>
<p>This function will initialize the device using the parameters provided. You need to call this function if you passed false into the sound manager constructor before you can use the manager. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DeviceName</td><td>The name of the device you wish to have this manager interface with/use. </td></tr>
    <tr><td class="paramname">OutputFrequency</td><td>Frequency of the output audio, -1 for the devices default. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the device was initialized successfully. False on a failure. </dd></dl>

</div>
</div>
<a class="anchor" id="a83961ec9d158906a714835824b751477"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::AudioManager::IsAmbientMuted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not Ambient Sound instances are muted. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if Ambient sounds are muted, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00160">160</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa00282f6663f0b21cf76014c8301b3eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::AudioManager::IsDialogMuted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not Dialog Sound instances are muted. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if Dialog sounds are muted, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9090877536057c69c8478fd3ee0b7fd9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::AudioManager::IsEffectMuted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not Effect Sound instances are muted. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if Effect sounds are muted, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00178">178</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2c25dbe2e53689d0d535ea809e3baf69"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::Audio::AudioManager::IsMusicMuted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not Music Sound instances are muted. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns true if Music sounds are muted, false otherwise. </dd></dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00187">187</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae628c968a30641ede1847f3b082b1891"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::AudioManager::IsMuted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not the <a class="el" href="namespaceMezzanine_1_1Audio.xhtml" title="This namespace is for all the classes belonging to the Audio Subsystem.">Audio</a> subsystem is muted. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a bool indicating whether or not the <a class="el" href="namespaceMezzanine_1_1Audio.xhtml" title="This namespace is for all the classes belonging to the Audio Subsystem.">Audio</a> subsystem is currently muted. </dd></dl>

</div>
</div>
<a class="anchor" id="a99cb22c41625a069eaa887e912b2e1d1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::AudioManager::IsTypeMuted </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets whether or not Sound instances of the specified type are currently muted. </p>
<dl class="section note"><dt>Note</dt><dd>Although this can accept any UInt16 value, be mindful of the SoundType enum to avoid type collisions. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">This</td><td>method can throw a "II_IDENTITY_NOT_FOUND_EXCEPTION" if the a handler of the specified type does not exist. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of Sound instances to check. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if sounds of the specifed type are muted, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="a4c56655df592a94308e933d86bfff2dc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::MuteAmbient </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether or not to mute all Ambient Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>True to mute Ambient sounds, false to unmute them. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00158">158</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a98606909d84d5de629c13b1c2b5bf6b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::MuteDialog </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether or not to mute all Dialog Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>True to mute Dialog sounds, false to unmute them. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00167">167</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="abe9a39f93dd93b828b3b7bad5cda2ee9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::MuteEffect </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether or not to mute all Effect Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>True to mute Effect sounds, false to unmute them. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00176">176</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2dc6d082cee0ee486b21f1b1c41f0fb1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::MuteMusic </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether or not to mute all Music Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>True to mute Music sounds, false to unmute them. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00185">185</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a81d65f95c866de99f42a6bf7010738bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::MuteType </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether or not to mute all Sound instances of a specified type. </p>
<dl class="section note"><dt>Note</dt><dd>Although this can accept any UInt16 value, be mindful of the SoundType enum to avoid type collisions. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">This</td><td>method can throw a "II_IDENTITY_NOT_FOUND_EXCEPTION" if the a handler of the specified type does not exist. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of Sound instances to mute or unmute. </td></tr>
    <tr><td class="paramname">Enable</td><td>True to mute sounds of the specified type, false to unmute them. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a887fe272e2587378d95fef1bafdd62a2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::Audio::AudioManager::PlaybackDeviceNameValid </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>DeviceName</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks to see if the named playback device is available. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DeviceName</td><td>The name of the device to check for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the device is available on this system, false otherwise. </dd></dl>

</div>
</div>
<a class="anchor" id="ad6b9e0a759a6277b2c905b1c63fd679d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::RemoveDecoderFactory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> *&#160;</td>
          <td class="paramname"><em>ToBeRemoved</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes (but does not destroy) an <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ToBeRemoved</td><td>A pointer to the <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to be removed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00218">218</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a51bec77d3b8e92b428af05513e463544"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::RemoveDecoderFactory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a>&#160;</td>
          <td class="paramname"><em>Format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Removes (but does not destroy) an <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Format</td><td>The <a class="el" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee">Audio::Encoding</a> supported by the <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> to remove. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00223">223</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae445369538b5ecb9dadc72c73c5a77dd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::SetAmbientVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Ambient</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the volume for all stored Ambient Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Ambient</td><td>The volume to apply to all Ambient sounds. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00154">154</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad79d35b832086f62234d585064360d3c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::SetDialogVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Dialog</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the volume for all stored Dialog Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Dialog</td><td>The volume to apply to all Dialog sounds. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6693243c98ed75b41ff696a757c800e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::SetEffectVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Effect</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the volume for all stored Effect Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Effect</td><td>The volume to apply to all Effect sounds. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00172">172</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6e0c61c5946c74d32cd018238ad1aa7c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::SetMasterMute </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets whether or not to mute all <a class="el" href="namespaceMezzanine_1_1Audio.xhtml" title="This namespace is for all the classes belonging to the Audio Subsystem.">Audio</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Enable</td><td>Whether or not all sounds should be muted. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a70046fc4889434a4ee7c8eb5315d32dc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::SetMasterVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Master</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the volume for all stored Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Music</td><td>The volume to apply to all sounds. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a93e699db7c2e90fabdcff5f255070472"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::Audio::AudioManager::SetMusicVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a> &amp;&#160;</td>
          <td class="paramname"><em>Music</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the volume for all stored Music Sound instances. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Music</td><td>The volume to apply to all Music sounds. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="audiomanager_8cpp_source.xhtml#l00181">181</a> of file <a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="adf1e15a4d136b470e2710b85bfb051ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::SetTypeVolume </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767">UInt16</a>&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6">Real</a>&#160;</td>
          <td class="paramname"><em>Vol</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the volume for all stored Sound instances of the specified type. </p>
<dl class="section note"><dt>Note</dt><dd>Although this can accept any UInt16 value, be mindful of the SoundType enum to avoid type collisions. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">This</td><td>method can throw a "II_IDENTITY_NOT_FOUND_EXCEPTION" if the a handler of the specified type does not exist. </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Type</td><td>A UInt16 that is the ID for the type of Sound instances to set the volume for. </td></tr>
    <tr><td class="paramname">Vol</td><td>The new volume to apply to all sounds of the specified type. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aae5dc71153e6dfd4843d198999f16ffc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void Mezzanine::Audio::AudioManager::ShutdownPlaybackDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shuts down the current playback device and unloads all sounds. </p>
<dl class="section warning"><dt>Warning</dt><dd>This will destroy all sounds and sound proxies in the system. </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a98a2f0eebfc473933e53ca19eef145f6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6971c7f71f9690d4c704fb1eed7561ce">DecoderFactoryContainer</a> Mezzanine::Audio::AudioManager::DecoderFactories</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Container storing all registered <a class="el" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml">iDecoderFactory</a> instances. </p>

<p>Definition at line <a class="el" href="audiomanager_8h_source.xhtml#l00126">126</a> of file <a class="el" href="audiomanager_8h_source.xhtml">audiomanager.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/Audio/<a class="el" href="audiomanager_8h_source.xhtml">audiomanager.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/Audio/<a class="el" href="audiomanager_8cpp_source.xhtml">audiomanager.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 15 2013 02:46:42 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
