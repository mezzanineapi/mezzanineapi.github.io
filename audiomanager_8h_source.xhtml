<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/Audio/audiomanager.h Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September 2, 2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_1c8a5c654534094d884033768b4843f2.xhtml">Audio</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">audiomanager.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">// Copyright (c) 2008-2010 Raynaldo (Wildicv) Rivera, Joshua (Dark_Kilauea) Jones</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">// This file is part of the &quot;cAudio Engine&quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">// For conditions of distribution and use, see copyright notice in cAudio-ZLIBLicense.txt</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#ifndef _audioaudiomanager_h</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _audioaudiomanager_h</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="datatypes_8h.xhtml" title="All the definitions for datatypes as well as some basic conversion functions are defined here...">datatypes.h</a>&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;managerbase.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;managerfactory.h&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;singleton.h&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#include &quot;objectsettings.h&quot;</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &quot;audioenumerations.h&quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="datastream_8h.xhtml" title="Declaration of DataStream.">Resource/datastream.h</a>&quot;</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#include &quot;Threading/workunit.h&quot;</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">namespace </span>Audio</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keyword">class </span>iSound;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">class </span>iRecorder;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">class </span>iDecoder;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keyword">class </span>iDecoderFactory;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keyword">class </span>iEffectsHandler;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keyword">class </span>MusicPlayer;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keyword">class </span>SoundScapeManager;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">        /// @brief This is the work unit for updating audio buffers as necessary for audio playback.</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">        /// @details</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1iBufferUpdate2DWorkUnit.xhtml">   72</a></span>&#160;<span class="comment"></span>        <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1Audio_1_1iBufferUpdate2DWorkUnit.xhtml" title="This is the work unit for updating audio buffers as necessary for audio playback.">iBufferUpdate2DWorkUnit</a> : <span class="keyword">public</span> Threading::DefaultWorkUnit</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment">            /// @brief Class destructor.</span></div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1iBufferUpdate2DWorkUnit.xhtml#ac5ccff45811a88c099584f82e1eb549f">   76</a></span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iBufferUpdate2DWorkUnit.xhtml#ac5ccff45811a88c099584f82e1eb549f" title="Class destructor.">~iBufferUpdate2DWorkUnit</a>() {  }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"></span>            <span class="comment">// Utility</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">            /// @brief This does any required updating of audio buffers belonging to sources in this manager.</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">            /// @param CurrentThreadStorage The storage class for all resources owned by this work unit during it&#39;s execution.</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoWork(Threading::DefaultThreadSpecificStorage::Type&amp; CurrentThreadStorage) = 0;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        };<span class="comment">//iBufferUpdate2DWorkUnit</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">        /// @brief This is the work unit for marking all effects and filters as clean after sounds have been processed.</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">        /// @details</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1iEffectFilterCleanWorkUnit.xhtml">   90</a></span>&#160;<span class="comment"></span>        <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1Audio_1_1iEffectFilterCleanWorkUnit.xhtml" title="This is the work unit for marking all effects and filters as clean after sounds have been processed...">iEffectFilterCleanWorkUnit</a> : <span class="keyword">public</span> Threading::DefaultWorkUnit</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="comment">            /// @brief Class destructor.</span></div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1iEffectFilterCleanWorkUnit.xhtml#ae3c1a813e17b825429c322d52cbde851">   94</a></span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iEffectFilterCleanWorkUnit.xhtml#ae3c1a813e17b825429c322d52cbde851" title="Class destructor.">~iEffectFilterCleanWorkUnit</a>() {  }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment"></span>            <span class="comment">// Utility</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="comment">            /// @brief This does the required cleaning of all effects and filters in use by this manager.</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">            /// @param CurrentThreadStorage The storage class for all resources owned by this work unit during it&#39;s execution.</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DoWork(Threading::DefaultThreadSpecificStorage::Type&amp; CurrentThreadStorage) = 0;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        };<span class="comment">//iEffectFilterCleanWorkUnit</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="comment">// Used by the scripting language binder to help create bindgings for this class. SWIG does know to creation template instances</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">        #ifdef SWIG</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor"></span>        %<span class="keyword">template</span>(SingletonAudioManager) <a class="code" href="classMezzanine_1_1Singleton.xhtml">Singleton&lt;AudioManager&gt;</a>;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">        #endif</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor"></span><span class="comment"></span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">        ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">        /// @brief This is the base manager class for the Audio subsystem and it&#39;s operations.</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">        /// @details This is a place for loading, storing, and running sound files as</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">        /// necessary in a given application.</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">        ///////////////////////////////////////</span></div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml">  114</a></span>&#160;<span class="comment"></span>        <span class="keyword">class </span><a class="code" href="crossplatformexport_8h.xhtml#a455f91aab9e6a1cf4286f5cdfa74c7bc" title="Some platforms require special decorations to denote what is exported/imported in a share library...">MEZZ_LIB</a> <a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml" title="This is the base manager class for the Audio subsystem and it&#39;s operations.">AudioManager</a> : <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a>, <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1ObjectSettingsHandler.xhtml" title="An abstract class for other classes that manage groups of settings.">ObjectSettingsHandler</a>, <span class="keyword">public</span> <a class="code" href="classMezzanine_1_1Singleton.xhtml">Singleton&lt;AudioManager&gt;</a></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">            /// @brief Basic container type for @ref iDecoderFactory storage by this class.</span></div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6971c7f71f9690d4c704fb1eed7561ce">  118</a></span>&#160;<span class="comment"></span>            <span class="keyword">typedef</span> std::map&lt;Audio::Encoding,iDecoderFactory*&gt;  <a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a6971c7f71f9690d4c704fb1eed7561ce" title="Basic container type for iDecoderFactory storage by this class.">DecoderFactoryContainer</a>;<span class="comment"></span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">            /// @brief Iterator type for @ref iDecoderFactory instances stored by this class.</span></div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3acc5dfecc6c387ce326e0dba21e38bd">  120</a></span>&#160;<span class="comment"></span>            <span class="keyword">typedef</span> DecoderFactoryContainer::iterator           <a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a3acc5dfecc6c387ce326e0dba21e38bd" title="Iterator type for iDecoderFactory instances stored by this class.">DecoderFactoryIterator</a>;<span class="comment"></span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">            /// @brief Const Iterator type for @ref iDecoderFactory instances stored by this class.</span></div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a037010a165cfe02541c3276dc747decf">  122</a></span>&#160;<span class="comment"></span>            <span class="keyword">typedef</span> DecoderFactoryContainer::const_iterator     <a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a037010a165cfe02541c3276dc747decf" title="Const Iterator type for iDecoderFactory instances stored by this class.">ConstDecoderFactoryIterator</a>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keyword">protected</span>:<span class="comment"></span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">            /// @brief Container storing all registered @ref iDecoderFactory instances.</span></div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a98a2f0eebfc473933e53ca19eef145f6">  126</a></span>&#160;<span class="comment"></span>            DecoderFactoryContainer <a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml#a98a2f0eebfc473933e53ca19eef145f6" title="Container storing all registered iDecoderFactory instances.">DecoderFactories</a>;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment">            /// @brief Class Constructor.</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml" title="This is the base manager class for the Audio subsystem and it&#39;s operations.">AudioManager</a>();<span class="comment"></span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment">            /// @brief XML constructor.</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">            /// @param XMLNode The node of the xml document to construct from.</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml" title="This is the base manager class for the Audio subsystem and it&#39;s operations.">AudioManager</a>(<a class="code" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">XML::Node</a>&amp; XMLNode);<span class="comment"></span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">            /// @brief Class Destructor.</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment">            /// @details The class destructor.</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> ~<a class="code" href="classMezzanine_1_1Audio_1_1AudioManager.xhtml" title="This is the base manager class for the Audio subsystem and it&#39;s operations.">AudioManager</a>();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment"></span>            <span class="comment">// Sound Management</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">            /// @brief Creates a blank @ref iSound without a stream attached to it.</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of sound the created @ref iSound is to be categorized as.</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">            /// @brief Creates a new @ref iSound from a custom stream that is encoded.</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of sound the created @ref iSound is to be categorized as.</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type, <a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">            /// @brief Creates a new @ref iSound from a custom stream that is unencoded.</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of sound the created @ref iSound is to be categorized as.</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type, <a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment">            /// @brief Creates a new @ref iSound from a file.</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of sound the created @ref iSound is to be categorized as.</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">            /// @param FileName The name of the file to read audio data from.</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">            /// @param Group The resource group in which the file resides.</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; FileName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">            /// @brief Creates a new @ref iSound from a memory buffer that is encoded.</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">            /// @note The created stream will take ownership of the buffer you provide.  If you want it to have a separate buffer then create a copy and pass that in.</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of sound the created @ref iSound is to be categorized as.</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="comment">            /// @brief Creates a new @ref iSound from a memory buffer that is unencoded.</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment">            /// @note The created stream will take ownership of the buffer you provide.  If you want it to have a separate buffer then create a copy and pass that in.</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of sound the created @ref iSound is to be categorized as.</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">            /// @brief Gets an @ref iSound instance by index.</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">            /// @param Index The index of the @ref iSound to be retrieved.</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound at the specified index.</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* GetSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Index) <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="comment">            /// @brief Gets the number of @ref iSound instances in this manager.</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="comment">            /// @return Returns a UInt32 representing the number of @ref iSound instances contained in this manager.</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> GetNumSounds() <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="comment">            /// @brief Deletes a @ref iSound.</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">            /// @param ToBeDestroyed A pointer to the @ref iSound you want deleted.</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroySound(<a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* ToBeDestroyed) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="comment">            /// @brief Deletes all stored @ref iSound instances.</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyAllSounds() = 0;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="comment"></span>            <span class="comment">// Convenience Creation Methods</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">            /// @brief Creates a blank Ambient @ref iSound without a stream attached to it.</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateAmbientSound();<span class="comment"></span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="comment">            /// @brief Creates a blank Dialog @ref iSound without a stream attached to it.</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateDialogSound();<span class="comment"></span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="comment">            /// @brief Creates a blank Effect @ref iSound without a stream attached to it.</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateEffectSound();<span class="comment"></span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="comment">            /// @brief Creates a blank Music @ref iSound without a stream attached to it.</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateMusicSound();</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="comment">            /// @brief Creates a new Ambient @ref iSound from a custom stream that is encoded.</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateAmbientSound(<a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode);<span class="comment"></span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="comment">            /// @brief Creates a new Dialog @ref iSound from a custom stream that is encoded.</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateDialogSound(<a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode);<span class="comment"></span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="comment">            /// @brief Creates a new Effect @ref iSound from a custom stream that is encoded.</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateEffectSound(<a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode);<span class="comment"></span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="comment">            /// @brief Creates a new Music @ref iSound from a custom stream that is encoded.</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateMusicSound(<a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">            /// @brief Creates a new Ambient @ref iSound from a custom stream that is unencoded.</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateAmbientSound(<a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config);<span class="comment"></span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">            /// @brief Creates a new Dialog @ref iSound from a custom stream that is unencoded.</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateDialogSound(<a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config);<span class="comment"></span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">            /// @brief Creates a new Effect @ref iSound from a custom stream that is unencoded.</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateEffectSound(<a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config);<span class="comment"></span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">            /// @brief Creates a new Music @ref iSound from a custom stream that is unencoded.</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="comment">            /// @param Stream A Datastream containing the data to be streamed for this @ref iSound.</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateMusicSound(<a class="code" href="classMezzanine_1_1CountedPtr.xhtml" title="A simple reference counting pointer.">Resource::DataStreamPtr</a> Stream, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="comment">            /// @brief Creates a new Ambient @ref iSound from a file.</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="comment">            /// @param FileName The name of the file to read audio data from.</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">            /// @param Group The resource group in which the file resides.</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateAmbientSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; FileName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group);<span class="comment"></span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="comment">            /// @brief Creates a new Dialog @ref iSound from a file.</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="comment">            /// @param FileName The name of the file to read audio data from.</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">            /// @param Group The resource group in which the file resides.</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateDialogSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; FileName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group);<span class="comment"></span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="comment">            /// @brief Creates a new Effect @ref iSound from a file.</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="comment">            /// @param FileName The name of the file to read audio data from.</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="comment">            /// @param Group The resource group in which the file resides.</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateEffectSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; FileName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group);<span class="comment"></span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="comment">            /// @brief Creates a new Music @ref iSound from a file.</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">            /// @param FileName The name of the file to read audio data from.</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="comment">            /// @param Group The resource group in which the file resides.</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateMusicSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; FileName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; Group);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="comment">            /// @brief Creates a new Ambient @ref iSound from a memory buffer that is encoded.</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="comment">            /// @note The buffer is copied and put into a memory stream. Thus safe for disposal afterward.</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateAmbientSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode);<span class="comment"></span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="comment">            /// @brief Creates a new Dialog @ref iSound from a memory buffer that is encoded.</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="comment">            /// @note The buffer is copied and put into a memory stream. Thus safe for disposal afterward.</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="comment">            /// @param SoundName The name of the @ref iSound instance.</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateDialogSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode);<span class="comment"></span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">            /// @brief Creates a new Effect @ref iSound from a memory buffer that is encoded.</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="comment">            /// @note The buffer is copied and put into a memory stream. Thus safe for disposal afterward.</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateEffectSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode);<span class="comment"></span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="comment">            /// @brief Creates a new Music @ref iSound from a memory buffer that is encoded.</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">            /// @note The buffer is copied and put into a memory stream. Thus safe for disposal afterward.</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">            /// @param Encode The encoding to be expected when decoding audio for this @ref iSound.</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateMusicSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Encode);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">            /// @brief Creates a new Ambient @ref iSound from a memory buffer that is unencoded.</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="comment">            /// @note The buffer is copied and put into a memory stream. Thus safe for disposal afterward.</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateAmbientSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config);<span class="comment"></span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="comment">            /// @brief Creates a new Dialog @ref iSound from a memory buffer that is unencoded.</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">            /// @note The buffer is copied and put into a memory stream. Thus safe for disposal afterward.</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateDialogSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config);<span class="comment"></span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">            /// @brief Creates a new Effect @ref iSound from a memory buffer that is unencoded.</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="comment">            /// @note The buffer is copied and put into a memory stream. Thus safe for disposal afterward.</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateEffectSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config);<span class="comment"></span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">            /// @brief Creates a new Music @ref iSound from a memory buffer that is unencoded.</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">            /// @note The buffer is copied and put into a memory stream. Thus safe for disposal afterward.</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">            /// @param StreamName The name to be given to the stream being created.</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">            /// @param Buffer A pointer to the buffer where the audio data is located.</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">            /// @param Length The length of the buffer provided to this method(in bytes).</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">            /// @param Frequency The frequency (or sample rate) of the audio data.</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">            /// @param Config The bit configuration of the audio data.  Helps to determine sample size.</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iSound instance that was created.</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iSound.xhtml" title="This is an interface class for a non-spacialized sound.">iSound</a>* CreateMusicSound(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; StreamName, <a class="code" href="namespaceMezzanine.xhtml#ab4f5efed51a1f6fc1799c821c3daf4b7" title="A datatype to represent one character.">Char8</a>* Buffer, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Length, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Frequency, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#a9978d2013313ec7bf6978c622e80d782" title="Used to describe the different bit configurations supported by this audio system.">Audio::BitConfig</a> Config);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment"></span>            <span class="comment">// Volume Management</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">            /// @brief Sets the volume for all stored Sound instances of the specified type.</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">            /// @note Although this can accept any UInt16 value, be mindful of the SoundType enum to avoid type collisions.</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">            /// @exception This method can throw a &quot;II_IDENTITY_NOT_FOUND_EXCEPTION&quot; if the a handler of the specified type does not exist.</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of Sound instances to set the volume for.</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">            /// @param Vol The new volume to apply to all sounds of the specified type.</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetTypeVolume(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Vol) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">            /// @brief Gets the volume for all stored Sound instances of the specified type.</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">            /// @note Although this can accept any UInt16 value, be mindful of the SoundType enum to avoid type collisions.</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">            /// @exception This method can throw a &quot;II_IDENTITY_NOT_FOUND_EXCEPTION&quot; if the a handler of the specified type does not exist.</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of Sound instances to get the volume of.</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="comment">            /// @return Returns a Real representing the current volume of the specified sound type.</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> GetTypeVolume(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type) <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">            /// @brief Sets whether or not to mute all Sound instances of a specified type.</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="comment">            /// @note Although this can accept any UInt16 value, be mindful of the SoundType enum to avoid type collisions.</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">            /// @exception This method can throw a &quot;II_IDENTITY_NOT_FOUND_EXCEPTION&quot; if the a handler of the specified type does not exist.</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of Sound instances to mute or unmute.</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">            /// @param Enable True to mute sounds of the specified type, false to unmute them.</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> MuteType(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type, <span class="keywordtype">bool</span> Enable) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="comment">            /// @brief Gets whether or not Sound instances of the specified type are currently muted.</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="comment">            /// @note Although this can accept any UInt16 value, be mindful of the SoundType enum to avoid type collisions.</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="comment">            /// @exception This method can throw a &quot;II_IDENTITY_NOT_FOUND_EXCEPTION&quot; if the a handler of the specified type does not exist.</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="comment">            /// @param Type A UInt16 that is the ID for the type of Sound instances to check.</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="comment">            /// @return Returns true if sounds of the specifed type are muted, false otherwise.</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsTypeMuted(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a1b6c09063432c7ddd87011c88306c767" title="An 16-bit unsigned integer.">UInt16</a> Type) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="comment">            /// @brief Sets the volume for all stored Sound instances.</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;<span class="comment">            /// @param Music The volume to apply to all sounds.</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetMasterVolume(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Master) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;<span class="comment">            /// @brief Gets the currently set Master volume.</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="comment">            /// @return Returns a Real representing the current Master volume.</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> GetMasterVolume() <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="comment">            /// @brief Sets whether or not to mute all Audio.</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="comment">            /// @param Enable Whether or not all sounds should be muted.</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetMasterMute(<span class="keywordtype">bool</span> Enable) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="comment">            /// @brief Gets whether or not the Audio subsystem is muted.</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="comment">            /// @return Returns a bool indicating whether or not the Audio subsystem is currently muted.</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsMuted() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="comment"></span>            <span class="comment">// Convenience Type Volume Methods</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="comment">            /// @brief Sets the volume for all stored Ambient Sound instances.</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<span class="comment">            /// @param Ambient The volume to apply to all Ambient sounds.</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetAmbientVolume(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Ambient);<span class="comment"></span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;<span class="comment">            /// @brief Gets the currently set Ambient volume.</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;<span class="comment">            /// @return Returns a Real representing the current Ambient volume.</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> GetAmbientVolume() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">            /// @brief Sets whether or not to mute all Ambient Sound instances.</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="comment">            /// @param Enable True to mute Ambient sounds, false to unmute them.</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> MuteAmbient(<span class="keywordtype">bool</span> Enable);<span class="comment"></span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">            /// @brief Gets whether or not Ambient Sound instances are muted.</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="comment">            /// @return Returns true if Ambient sounds are muted, false otherwise.</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsAmbientMuted() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="comment">            /// @brief Sets the volume for all stored Dialog Sound instances.</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="comment">            /// @param Dialog The volume to apply to all Dialog sounds.</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetDialogVolume(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Dialog);<span class="comment"></span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="comment">            /// @brief Gets the currently set Dialog volume.</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="comment">            /// @return Returns a Real representing the current Dialog volume.</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> GetDialogVolume() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="comment">            /// @brief Sets whether or not to mute all Dialog Sound instances.</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="comment">            /// @param Enable True to mute Dialog sounds, false to unmute them.</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> MuteDialog(<span class="keywordtype">bool</span> Enable);<span class="comment"></span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="comment">            /// @brief Gets whether or not Dialog Sound instances are muted.</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="comment">            /// @return Returns true if Dialog sounds are muted, false otherwise.</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsDialogMuted() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="comment">            /// @brief Sets the volume for all stored Effect Sound instances.</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="comment">            /// @param Effect The volume to apply to all Effect sounds.</span></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetEffectVolume(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Effect);<span class="comment"></span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="comment">            /// @brief Gets the currently set Effect volume.</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="comment">            /// @return Returns a Real representing the current Effect volume.</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> GetEffectVolume() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="comment">            /// @brief Sets whether or not to mute all Effect Sound instances.</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="comment">            /// @param Enable True to mute Effect sounds, false to unmute them.</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> MuteEffect(<span class="keywordtype">bool</span> Enable);<span class="comment"></span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="comment">            /// @brief Gets whether or not Effect Sound instances are muted.</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="comment">            /// @return Returns true if Effect sounds are muted, false otherwise.</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsEffectMuted() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="comment">            /// @brief Sets the volume for all stored Music Sound instances.</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="comment">            /// @param Music The volume to apply to all Music sounds.</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetMusicVolume(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Music);<span class="comment"></span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="comment">            /// @brief Gets the currently set Music volume.</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="comment">            /// @return Returns a Real representing the current Music volume.</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> GetMusicVolume() <span class="keyword">const</span>;<span class="comment"></span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;<span class="comment">            /// @brief Sets whether or not to mute all Music Sound instances.</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="comment">            /// @param Enable True to mute Music sounds, false to unmute them.</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> MuteMusic(<span class="keywordtype">bool</span> Enable);<span class="comment"></span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="comment">            /// @brief Gets whether or not Music Sound instances are muted.</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="comment">            /// @return Returns true if Music sounds are muted, false otherwise.</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsMusicMuted() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="comment"></span>            <span class="comment">// Recorder Management</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="comment">            /// @brief Creates a new @ref iRecorder.</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;<span class="comment">            /// @return Returns a pointer to the created @ref iRecorder.</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml" title="This is an interface class for the recording of audio.">iRecorder</a>* CreateRecorder() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="comment">            /// @brief Gets a @ref iRecorder by index.</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;<span class="comment">            /// @param Index The index of the @ref iRecorder to retrieve.</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iRecorder at the specified index.</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml" title="This is an interface class for the recording of audio.">iRecorder</a>* GetRecorder(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Index) <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="comment">            /// @brief Gets the number of @ref iRecorder instances being stored by this manager.</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="comment">            /// @return Returns a UInt32 representing the number of @ref iRecorder instances within this manager.</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> GetNumRecorders() <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="comment">            /// @brief Destroys a @ref iRecorder instance by pointer.</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">            /// @param ToBeDestroyed A pointer to the @ref iRecorder instance to be destroyed.</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyRecorder(<a class="code" href="classMezzanine_1_1Audio_1_1iRecorder.xhtml" title="This is an interface class for the recording of audio.">iRecorder</a>* ToBeDestroyed) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="comment">            /// @brief Destroys all @ref iRecorder instances being stored by this manager.</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> DestroyAllRecorders() = 0;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;<span class="comment"></span>            <span class="comment">// Playback Device Management</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;<span class="comment">            /// @brief Gets the name of the playback device currently in use.</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="comment">            /// @return Returns a String containing the name of the device this manager was initiailzed with, or empty if one hasn&#39;t been set.</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GetCurrentPlaybackDeviceName() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="comment">            /// @brief Gets the name of an available playback device by index.</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="comment">            /// @details This function will retrieve the name of a device by it&#39;s index on the sound managers device list.</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="comment">            /// @param Index The position on the device list you wish to access the name of.</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="comment">            /// @return Returns the name of the device.</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GetAvailablePlaybackDeviceName(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a>&amp; Index) <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="comment">            /// @brief Gets the number of available playback devices.</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="comment">            /// @details This function will return the total number of available devices, including the default.</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="comment">            /// @return Returns the number of available devices.</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#adcbb6ce6d1eb4379d109e51171e2e493" title="Whole is an unsigned integer, it will be at least 32bits in size.">Whole</a> GetAvailablePlaybackDeviceCount() <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="comment">            /// @brief Gets the name of the default playback device.</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="comment">            /// @details This function will return the name of the system default device.</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="comment">            /// @return Returns the name of the default device.</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GetDefaultPlaybackDeviceName() <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="comment">            /// @brief Checks to see if the named playback device is available.</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="comment">            /// @param DeviceName The name of the device to check for.</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;<span class="comment">            /// @return Returns true if the device is available on this system, false otherwise.</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> PlaybackDeviceNameValid(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; DeviceName) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">            /// @brief Initializes the playback device.</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">            /// @details This function will initialize the device using the parameters provided.</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">            /// You need to call this function if you passed false into the sound manager constructor before</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">            /// you can use the manager.</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">            /// @param DeviceName The name of the device you wish to have this manager interface with/use.</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">            /// @param OutputFrequency Frequency of the output audio, -1 for the devices default.</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">            /// @return Returns true if the device was initialized successfully.  False on a failure.</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">bool</span> InitializePlaybackDevice(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a>&amp; DeviceName, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#ac3576e52af3c62d13dde94829e0c5465" title="A datatype used to represent any integer close to.">Integer</a> OutputFrequency = 44100) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">            /// @brief Shuts down the current playback device and unloads all sounds.</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment">            /// @warning This will destroy all sounds and sound proxies in the system.</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> ShutdownPlaybackDevice() = 0;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment"></span>            <span class="comment">// Recording Device Management</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">            /// @brief Gets the name of an available recording device by index.</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">            /// @param Index The index of the device to retrieve the name for.</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="comment">            /// @return Returns a String containing the available device name at the specified index.</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GetAvailableRecordingDeviceName(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> Index) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="comment">            /// @brief Gets the number of currently available recording devices.</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="comment">            /// @return Returns a UInt32 containing the number of recording devices on this system.</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d" title="An 32-bit unsigned integer.">UInt32</a> GetAvailableRecordingDeviceCount() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">            /// @brief Gets the name of the default recording device.</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="comment">            /// @return Returns a String containing the name of the default recording device on this system.</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">String</a> GetDefaultRecordingDeviceName() = 0;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="comment"></span>            <span class="comment">// Decoder Management</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="comment">            /// @brief Adds a @ref iDecoderFactory to this manager allowing the playback of new types of sound formats.</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="comment">            /// @note If an @ref iDecoderFactory is already registered to the same @ref Audio::Encoding, it will be replaced.  It will not be deleted.  Use with care.</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="comment">            /// @param ToBeAdded A pointer to the @ref iDecoderFactory to be added.</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> AddDecoderFactory(<a class="code" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml" title="This is an interface class for factories that create decoders.">iDecoderFactory</a>* ToBeAdded);<span class="comment"></span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="comment">            /// @brief Checks if a @ref iDecoderFactory is already registered with this manager.</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="comment">            /// @param Format The @ref Audio::Encoding supported by the @ref iDecoderFactory to look for.</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="comment">            /// @return Returns true if a @ref iDecoderFactory supporting that @ref Audio::Encoding exists, false otherwise.</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="comment"></span>            <span class="keywordtype">bool</span> DecoderFactoryExists(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Format);<span class="comment"></span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="comment">            /// @brief Gets an @ref iDecoderFactory by it&#39;s supported @ref Audio::Encoding.</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="comment">            /// @param Format The @ref Audio::Encoding supported by the @ref iDecoderFactory to retrieve.</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iDecoderFactory registered to the provided @ref Audio::Encoding, or NULL if none are registered.</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="comment"></span>            <a class="code" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml" title="This is an interface class for factories that create decoders.">iDecoderFactory</a>* GetDecoderFactory(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Format);<span class="comment"></span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">            /// @brief Removes (but does not destroy) an @ref iDecoderFactory.</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="comment">            /// @param ToBeRemoved A pointer to the @ref iDecoderFactory to be removed.</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> RemoveDecoderFactory(<a class="code" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml" title="This is an interface class for factories that create decoders.">iDecoderFactory</a>* ToBeRemoved);<span class="comment"></span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="comment">            /// @brief Removes (but does not destroy) an @ref iDecoderFactory.</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="comment">            /// @param Format The @ref Audio::Encoding supported by the @ref iDecoderFactory to remove.</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> RemoveDecoderFactory(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Audio::Encoding</a> Format);<span class="comment"></span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;<span class="comment">            /// @brief Removes (but does not destroy) all registered @ref iDecoderFactory instances.</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> RemoveAllDecoderFactories();<span class="comment"></span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="comment">            /// @brief Destroy a registered @ref iDecoderFactory.</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;<span class="comment">            /// @param ToBeDestroyed A pointer to the @ref iDecoderFactory to be destroyed.</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyDecoderFactory(<a class="code" href="classMezzanine_1_1Audio_1_1iDecoderFactory.xhtml" title="This is an interface class for factories that create decoders.">iDecoderFactory</a>* ToBeDestroyed);<span class="comment"></span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="comment">            /// @brief Destroy a registered @ref iDecoderFactory.</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="comment">            /// @param Format The @ref Audio::Encoding supported by the @ref iDecoderFactory to be destroyed.</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyDecoderFactory(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine_1_1Audio.xhtml#abbdf7b0c5dd3a09710208089436bdbee" title="The encoding to use when reading or writing an audio buffer.">Encoding</a> Format);<span class="comment"></span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="comment">            /// @brief Destroys all registered @ref iDecoderFactory instances.</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;<span class="comment"></span>            <span class="keywordtype">void</span> DestroyAllDecoderFactories();</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="comment"></span>            <span class="comment">// Utility</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">            /// @copydoc ManagerBase::Initialize()</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> Initialize() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">            /// @copydoc ManagerBase::Deinitialize()</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> Deinitialize() = 0;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;<span class="comment">            /// @brief Gets the handler responsible for audio effects.</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;<span class="comment">            /// @return Returns a pointer to the @ref iEffectsHandler for this audio subsystem.</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iEffectsHandler.xhtml" title="This is an interface class for the creation, destruction, and overall management of audio effects...">iEffectsHandler</a>* GetEffectsHandler() <span class="keyword">const</span> = 0;<span class="comment"></span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;<span class="comment">            /// @brief Gets the music player for this audio subsystem.</span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="comment">            /// @return Returns a pointer to the Music player belonging to this system, or NULL if this manager does not support one.</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1MusicPlayer.xhtml" title="This is a convenience class for the playing of music in a game.">MusicPlayer</a>* GetMusicPlayer() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;<span class="comment">            /// @brief Gets the work unit responsible for updating the buffers of sounds.</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="comment">            /// @return Returns a pointer to the BufferUpdate2DWorkUnit used by this manager.</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iBufferUpdate2DWorkUnit.xhtml" title="This is the work unit for updating audio buffers as necessary for audio playback.">iBufferUpdate2DWorkUnit</a>* GetBufferUpdate2DWork() = 0;<span class="comment"></span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="comment">            /// @brief Gets the work unit responsible for cleaning all effects and filters.</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;<span class="comment">            /// @return Returns a pointer to the BufferUpdateWorkUnit used by this manager.</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1Audio_1_1iEffectFilterCleanWorkUnit.xhtml" title="This is the work unit for marking all effects and filters as clean after sounds have been processed...">iEffectFilterCleanWorkUnit</a>* GetEffectFilterCleanWork() = 0;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="comment"></span>            <span class="comment">// Type Identifier Methods</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;<span class="comment">            /// @copydoc ManagerBase::GetInterfaceType()</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <a class="code" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> GetInterfaceType() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="comment">            ///////////////////////////////////////////////////////////////////////////////</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="comment"></span>            <span class="comment">// Internal Methods</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">            /// @brief Notifies this AudioManager of the creation of a new SoundScapeManager.</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="comment">            /// @param Manager A pointer to the manager being registered.</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> _RegisterSoundScapeManager(<a class="code" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml" title="This is the base manager class for audio being played in a 3D environment.">Audio::SoundScapeManager</a>* Manager) = 0;<span class="comment"></span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="comment">            /// @internal</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="comment">            /// @brief Notifies this AudioManager of the destruction of a SoundScapeManager.</span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;<span class="comment">            /// @param Manager A pointer to the manager being unregistered.</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;<span class="comment"></span>            <span class="keyword">virtual</span> <span class="keywordtype">void</span> _UnregisterSoundScapeManager(<a class="code" href="classMezzanine_1_1Audio_1_1SoundScapeManager.xhtml" title="This is the base manager class for audio being played in a 3D environment.">Audio::SoundScapeManager</a>* Manager) = 0;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        };<span class="comment">//AudioManager</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    }<span class="comment">//Audio</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;}<span class="comment">//Mezzanine</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Fri Sep 13 2013 23:29:50 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
