<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>/home/Code/Mezzanine/Mezzanine/src/cameracontroller.cpp Source File</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;18,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_df2e1c8414b6a086be441ff04537838a.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="dir_2b71fc9949116feedacddb93a79d832d.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cameracontroller.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//Â© Copyright 2010 - 2013 BlackTopp Studios Inc.</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/* This file is part of The Mezzanine Engine.</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">    The Mezzanine Engine is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">    it under the terms of the GNU General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">    the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">    (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">    The Mezzanine Engine is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">    but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">    GNU General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">    You should have received a copy of the GNU General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">    along with The Mezzanine Engine.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/* The original authors have included a copy of the license specified above in the</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   &#39;Docs&#39; folder. See &#39;gpl.txt&#39;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">/* We welcome the use of the Mezzanine engine to anyone, including companies who wish to</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">   Build professional software and charge for their product.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">   However there are some practical restrictions, so if your project involves</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">   any of the following you should contact us and we will try to work something</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">   out:</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">    - DRM or Copy Protection of any kind(except Copyrights)</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">    - Software Patents You Do Not Wish to Freely License</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">    - Any Kind of Linking to Non-GPL licensed Works</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">    - Are Currently In Violation of Another Copyright Holder&#39;s GPL License</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">    - If You want to change our code and not add a few hundred MB of stuff to</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">        your distribution</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">   These and other limitations could cause serious legal problems if you ignore</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">   them, so it is best to simply contact us or the Free Software Foundation, if</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">   you have any questions.</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">   Joseph Toppi - toppij@gmail.com</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">   John Blackwood - makoenergy02@gmail.com</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#ifndef _cameracontroller_cpp</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _cameracontroller_cpp</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#include &quot;cameracontroller.h&quot;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="camera_8h.xhtml" title="Declaration of the Mezzanine::Camera class.">camera.h</a>&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#include &quot;mathtool.h&quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#include &quot;rayquerytool.h&quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#include &quot;ray.h&quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#include &quot;vector3wactor.h&quot;</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="enumerations_8h.xhtml" title="Any global enumerations shared between multiple classes is to be declared here.">enumerations.h</a>&quot;</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">namespace </span>Mezzanine</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#ae79433d6fa4501e432e542a82777d03a">   53</a></span>&#160;    <a class="code" href="classMezzanine_1_1CameraController.xhtml#ae79433d6fa4501e432e542a82777d03a" title="Class constructor.">CameraController::CameraController</a>(<a class="code" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a>* ToBeControlled)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        : Controlled(ToBeControlled),</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;          CurrentMMode(CCM_Fly),</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;          HoverHeight(2),</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;          YawRad(0),</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;          PitchRad(0),</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;          RollRad(0),</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;          YawLimits(NULL),</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;          PitchLimits(NULL),</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;          RollLimits(NULL)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a2facf8224198fd2b820b24304abc42b4">   66</a></span>&#160;    <a class="code" href="classMezzanine_1_1CameraController.xhtml#a2facf8224198fd2b820b24304abc42b4" title="Class destructor.">CameraController::~CameraController</a>()</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="classMezzanine_1_1CameraController.xhtml#a646de446143f48b1867086fc5125f9ff" title="Clears any set limits on yaw(Y axis) rotation.">RemoveYawLimits</a>();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="classMezzanine_1_1CameraController.xhtml#a04b2acb69f1085ca197ce8f7e19e17d5" title="Clears any set limits on pitch(X axis) rotation.">RemovePitchLimits</a>();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="classMezzanine_1_1CameraController.xhtml#a37221936412f130ae6b4194f7ef7e543" title="Clears any set limits on roll(Z axis) rotation.">RemoveRollLimits</a>();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">void</span> CameraController::CheckAngleRollover(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Angle)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Pi = <a class="code" href="namespaceMezzanine_1_1MathTools.xhtml#abe336bed2608181d296a50d4b4a244eb" title="This is Pi.">MathTools::Pi</a>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">if</span>(Angle &gt; Pi)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            Angle = -Pi + (Angle - Pi);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(Angle &lt; -Pi)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            Angle = Pi + (Angle + Pi);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">void</span> CameraController::CheckAngleLimits()</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">if</span>(YawLimits)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordflow">if</span>(YawRad &gt; YawLimits-&gt;Upper) YawRad = YawLimits-&gt;Upper;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">if</span>(YawRad &lt; YawLimits-&gt;Lower) YawRad = YawLimits-&gt;Lower;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span>(PitchLimits)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">if</span>(PitchRad &gt; PitchLimits-&gt;Upper) PitchRad = PitchLimits-&gt;Upper;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">if</span>(PitchRad &lt; PitchLimits-&gt;Lower) PitchRad = PitchLimits-&gt;Lower;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">if</span>(YawLimits)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">if</span>(RollRad &gt; RollLimits-&gt;Upper) RollRad = RollLimits-&gt;Upper;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">if</span>(RollRad &lt; RollLimits-&gt;Lower) RollRad = RollLimits-&gt;Lower;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordtype">void</span> CameraController::CheckAllAngles()</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        CheckAngleLimits();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        CheckAngleRollover(YawRad);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        CheckAngleRollover(PitchRad);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        CheckAngleRollover(RollRad);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordtype">void</span> CameraController::CheckHeight()</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        Vector3 Loc(Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#afb87a19855c4cd5361861e1e400d5481" title="Gets the relative location of the camera.">GetLocation</a>());</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Dist = FindDistanceToGround();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">if</span>(0==Dist)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> DeltaDist = Dist - HoverHeight;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        Loc.Y-=DeltaDist;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#afdc236c2c875035c8a11473350d0d17a" title="Sets the location of a camera.">SetLocation</a>(Loc);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> CameraController::FindDistanceToGround()</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        Vector3 Loc(Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#afb87a19855c4cd5361861e1e400d5481" title="Gets the relative location of the camera.">GetLocation</a>());</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        Vector3 Dest(Loc + Vector3(0,-2000,0));</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        Ray* GroundRay = <span class="keyword">new</span> Ray(Loc,Dest);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordtype">int</span> flags = Mezzanine::WSO_MeshTerrain | Mezzanine::WSO_HeightfieldTerrain | Mezzanine::WSO_VectorFieldTerrain | Mezzanine::WSO_VoxelTerrain;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        Vector3WActor* Result = <a class="code" href="classMezzanine_1_1RayQueryTool.xhtml#af1224419c58901fc57fcef2d236a8298" title="This will find the first Actor to intesect the Given ray.">RayQueryTool::GetFirstActorOnRayByPolygon</a>(*GroundRay,flags);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">if</span>(NULL == Result)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keyword">delete</span> Result;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="keyword">delete</span> GroundRay;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">if</span>(NULL == Result-&gt;Actor)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <span class="keyword">delete</span> Result;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            <span class="keyword">delete</span> GroundRay;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Distance = Loc.Y - (Result-&gt;Actor-&gt;GetLocation() + Result-&gt;Vector).Y;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keyword">delete</span> Result;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keyword">delete</span> GroundRay;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> Distance;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#ae1029438ae1587099439de7ba6bb1df8">  149</a></span>&#160;    <a class="code" href="classMezzanine_1_1Camera.xhtml" title="This is the camera class.">Camera</a>* <a class="code" href="classMezzanine_1_1CameraController.xhtml#ae1029438ae1587099439de7ba6bb1df8" title="Gets the camera this controller is controlling.">CameraController::GetControlledCamera</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> Controlled;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a1c66be68f98702152fc2b59b30632d28">  154</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a1c66be68f98702152fc2b59b30632d28" title="Sets the movement mode for this camera/controller.">CameraController::SetMovementMode</a>(<span class="keyword">const</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a2e4a40630fb6c845b8073151dc36c286" title="Possible options for determining how the camera should move relative to the world.">CameraController::MovementMode</a>&amp; MoveMode)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        CurrentMMode = MoveMode;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a41981a1326cf06020c71f17674f82676">  159</a></span>&#160;    <a class="code" href="classMezzanine_1_1CameraController.xhtml#a2e4a40630fb6c845b8073151dc36c286" title="Possible options for determining how the camera should move relative to the world.">CameraController::MovementMode</a> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a41981a1326cf06020c71f17674f82676" title="Gets the currently set movement mode.">CameraController::GetMovementMode</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">return</span> CurrentMMode;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a4919727ce339ca3baa6f03aff7082aba">  164</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a4919727ce339ca3baa6f03aff7082aba" title="Sets the hover distance for the camera while it&#39;s moving.">CameraController::SetHoverHeight</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; Hover)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    {</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        HoverHeight = Hover;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a1973ffb9895ec8ab6d856ed975eb00ad">  169</a></span>&#160;    <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a1973ffb9895ec8ab6d856ed975eb00ad" title="Gets the distance the camera hovers over terrain while in CCM_Walk mode.">CameraController::GetHoverHeight</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">return</span> HoverHeight;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a99491e652e97e725ec058834c2d17b70">  174</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a99491e652e97e725ec058834c2d17b70" title="Sets rotational limits on the Y axis.">CameraController::SetYawLimits</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; UpperLimit, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LowerLimit)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">if</span>(!YawLimits)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            YawLimits = <span class="keyword">new</span> <a class="code" href="structMezzanine_1_1CameraController_1_1AngleLimits.xhtml" title="Boundaries for rotation on one axis.">AngleLimits</a>();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        YawLimits-&gt;Upper = UpperLimit;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        YawLimits-&gt;Lower = LowerLimit;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a646de446143f48b1867086fc5125f9ff">  182</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a646de446143f48b1867086fc5125f9ff" title="Clears any set limits on yaw(Y axis) rotation.">CameraController::RemoveYawLimits</a>()</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    {</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">if</span>(YawLimits)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <span class="keyword">delete</span> YawLimits;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            YawLimits = NULL;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#afbf7f8b9b27f565e4002ea2944724b2f">  191</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#afbf7f8b9b27f565e4002ea2944724b2f" title="Sets rotational limits on the X axis.">CameraController::SetPitchLimits</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; UpperLimit, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LowerLimit)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    {</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">if</span>(!PitchLimits)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            PitchLimits = <span class="keyword">new</span> <a class="code" href="structMezzanine_1_1CameraController_1_1AngleLimits.xhtml" title="Boundaries for rotation on one axis.">AngleLimits</a>();</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        PitchLimits-&gt;Upper = UpperLimit;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        PitchLimits-&gt;Lower = LowerLimit;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a04b2acb69f1085ca197ce8f7e19e17d5">  199</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a04b2acb69f1085ca197ce8f7e19e17d5" title="Clears any set limits on pitch(X axis) rotation.">CameraController::RemovePitchLimits</a>()</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="keywordflow">if</span>(PitchLimits)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            <span class="keyword">delete</span> PitchLimits;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            PitchLimits = NULL;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#aeda898e8a4e244eec905478b7f033c41">  208</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#aeda898e8a4e244eec905478b7f033c41" title="Sets rotational limits on the Z axis.">CameraController::SetRollLimits</a>(<span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; UpperLimit, <span class="keyword">const</span> <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a>&amp; LowerLimit)</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">if</span>(!RollLimits)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            RollLimits = <span class="keyword">new</span> <a class="code" href="structMezzanine_1_1CameraController_1_1AngleLimits.xhtml" title="Boundaries for rotation on one axis.">AngleLimits</a>();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        RollLimits-&gt;Upper = UpperLimit;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        RollLimits-&gt;Lower = LowerLimit;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a37221936412f130ae6b4194f7ef7e543">  216</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a37221936412f130ae6b4194f7ef7e543" title="Clears any set limits on roll(Z axis) rotation.">CameraController::RemoveRollLimits</a>()</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">if</span>(RollLimits)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keyword">delete</span> RollLimits;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            RollLimits = NULL;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a6d57bd3d51d3329d0c33be37df609a10">  225</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a6d57bd3d51d3329d0c33be37df609a10" title="Moves the camera forward.">CameraController::MoveForward</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Units)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Move(0,0,-Units);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#ac8f450698006baf6e8fca2a864d59533" title="Moves the camera while factoring orientation.">MoveRelative</a>(Move);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1CameraController.xhtml#a2e4a40630fb6c845b8073151dc36c286a3e59766116db3f0d979787d66405d2fb" title="CCM_Walk: This forces the camera to be only a certain distance above the terrain.">CCM_Walk</a> == CurrentMMode)</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            CheckHeight();</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a305107ca4e77609ecaa54b387db42acd">  233</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a305107ca4e77609ecaa54b387db42acd" title="Moves the camera backward.">CameraController::MoveBackward</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Units)</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Move(0,0,Units);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#ac8f450698006baf6e8fca2a864d59533" title="Moves the camera while factoring orientation.">MoveRelative</a>(Move);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1CameraController.xhtml#a2e4a40630fb6c845b8073151dc36c286a3e59766116db3f0d979787d66405d2fb" title="CCM_Walk: This forces the camera to be only a certain distance above the terrain.">CCM_Walk</a> == CurrentMMode)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            CheckHeight();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a6297e8a56f401bd2967032a6370c07b8">  241</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a6297e8a56f401bd2967032a6370c07b8" title="Moves the camera to the left.">CameraController::StrafeLeft</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Units)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Move(-Units,0,0);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#ac8f450698006baf6e8fca2a864d59533" title="Moves the camera while factoring orientation.">MoveRelative</a>(Move);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1CameraController.xhtml#a2e4a40630fb6c845b8073151dc36c286a3e59766116db3f0d979787d66405d2fb" title="CCM_Walk: This forces the camera to be only a certain distance above the terrain.">CCM_Walk</a> == CurrentMMode)</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            CheckHeight();</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a37e9081283df3f3f7129879e01ee62ae">  249</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a37e9081283df3f3f7129879e01ee62ae" title="Moves the camera to the right.">CameraController::StrafeRight</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Units)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <a class="code" href="classMezzanine_1_1Vector3.xhtml" title="This is used to represent a point in space, or a vector through space.">Vector3</a> Move(Units,0,0);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#ac8f450698006baf6e8fca2a864d59533" title="Moves the camera while factoring orientation.">MoveRelative</a>(Move);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="keywordflow">if</span>(<a class="code" href="classMezzanine_1_1CameraController.xhtml#a2e4a40630fb6c845b8073151dc36c286a3e59766116db3f0d979787d66405d2fb" title="CCM_Walk: This forces the camera to be only a certain distance above the terrain.">CCM_Walk</a> == CurrentMMode)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;            CheckHeight();</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#ace7eb6ddc365e71d7732aae7837aa61a">  257</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#ace7eb6ddc365e71d7732aae7837aa61a" title="Rotates the camera.">CameraController::Rotate</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Yaw, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Pitch, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Roll)</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        YawRad+=Yaw;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        PitchRad+=Pitch;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        RollRad+=Roll;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        CheckAllAngles();</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> YawQuat, PitchQuat, RollQuat;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">if</span>(0==YawRad)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            YawQuat = <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(0,0,0,1);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;            YawQuat = <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(-YawRad,<a class="code" href="classMezzanine_1_1Vector3.xhtml#a62285c6842027aec46da54553c22bc61" title="Gets a vector representing the Y unit of a vector.">Vector3::Unit_Y</a>());</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordflow">if</span>(0==PitchRad)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            PitchQuat = <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(0,0,0,1);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;            PitchQuat = <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(-PitchRad,<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa3d186d62631a38fe6cd553a1a92469a" title="Gets a vector representing the X unit of a Vector3.">Vector3::Unit_X</a>());</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keywordflow">if</span>(0==RollRad)</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            RollQuat = <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(0,0,0,1);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            RollQuat = <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(-RollRad,<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6a70011d21182d44fd458458b1627ea1" title="Gets a vector representing the Z unit of a vector.">Vector3::Unit_Z</a>());</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> CamRot = YawQuat * PitchQuat * RollQuat;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#af502b9c47b1acce46e1482ce049320eb" title="Sets the orientation of the camera.">SetOrientation</a>(CamRot);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno"><a class="code" href="classMezzanine_1_1CameraController.xhtml#a395fbee8538137d99c5c96118308e5ee">  284</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classMezzanine_1_1CameraController.xhtml#a395fbee8538137d99c5c96118308e5ee" title="Rotates the camera.">CameraController::Rotate6DOF</a>(<a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Yaw, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Pitch, <a class="code" href="namespaceMezzanine.xhtml#a726731b1a7df72bf3583e4a97282c6f6" title="A Datatype used to represent a real floating point number.">Real</a> Roll)</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    {</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a> CamRot(Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#af693fe97c4f281940a33dc8087a80fcb" title="Gets the direction the camera is facing.">GetOrientation</a>());</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        CamRot = CamRot *</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(-Yaw,<a class="code" href="classMezzanine_1_1Vector3.xhtml#a62285c6842027aec46da54553c22bc61" title="Gets a vector representing the Y unit of a vector.">Vector3::Unit_Y</a>()) *</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(-Pitch,<a class="code" href="classMezzanine_1_1Vector3.xhtml#aa3d186d62631a38fe6cd553a1a92469a" title="Gets a vector representing the X unit of a Vector3.">Vector3::Unit_X</a>()) *</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;            <a class="code" href="classMezzanine_1_1Quaternion.xhtml" title="This is used to store information about rotation in 3d space.">Quaternion</a>(-Roll,<a class="code" href="classMezzanine_1_1Vector3.xhtml#a6a70011d21182d44fd458458b1627ea1" title="Gets a vector representing the Z unit of a vector.">Vector3::Unit_Z</a>());</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        Controlled-&gt;<a class="code" href="classMezzanine_1_1Camera.xhtml#af502b9c47b1acce46e1482ce049320eb" title="Sets the orientation of the camera.">SetOrientation</a>(CamRot);<span class="comment">// */</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;}</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Sep 18 2013 23:31:13 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
