<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::ResourceManager Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;15,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml">ResourceManager</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classMezzanine_1_1ResourceManager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::ResourceManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the manager responsible for the loading and unloading of files.  
 <a href="classMezzanine_1_1ResourceManager.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for Mezzanine::ResourceManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ResourceManager__inherit__graph.svg" width="387" height="136"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for Mezzanine::ResourceManager:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classMezzanine_1_1ResourceManager__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a0cee58f017873b2f6aeb2eeb948e3cbf"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0cee58f017873b2f6aeb2eeb948e3cbf"></a>
typedef <br class="typebreak"/>
DataStreamContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a0cee58f017873b2f6aeb2eeb948e3cbf">ConstDataStreamIterator</a></td></tr>
<tr class="memdesc:a0cee58f017873b2f6aeb2eeb948e3cbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const Iterator type for DataStream instances stored by this class. <br/></td></tr>
<tr class="separator:a0cee58f017873b2f6aeb2eeb948e3cbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebf447f804ec46a85dd8bc95a388b686"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aebf447f804ec46a85dd8bc95a388b686"></a>
typedef <br class="typebreak"/>
NamedDataStreamContainer::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#aebf447f804ec46a85dd8bc95a388b686">ConstNamedDataStreamIterator</a></td></tr>
<tr class="memdesc:aebf447f804ec46a85dd8bc95a388b686"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const Iterator type for named DataStream instances stored by this class. <br/></td></tr>
<tr class="separator:aebf447f804ec46a85dd8bc95a388b686"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00c89e4ec9f68f4bf42675c0aa106916"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a00c89e4ec9f68f4bf42675c0aa106916"></a>
typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a00c89e4ec9f68f4bf42675c0aa106916">DataStreamContainer</a></td></tr>
<tr class="memdesc:a00c89e4ec9f68f4bf42675c0aa106916"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic container type for DataStream storage by this class. <br/></td></tr>
<tr class="separator:a00c89e4ec9f68f4bf42675c0aa106916"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19d644ae526795f0ea24ee4e6151cf94"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a19d644ae526795f0ea24ee4e6151cf94"></a>
typedef <br class="typebreak"/>
DataStreamContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a19d644ae526795f0ea24ee4e6151cf94">DataStreamIterator</a></td></tr>
<tr class="memdesc:a19d644ae526795f0ea24ee4e6151cf94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator type for DataStream instances stored by this class. <br/></td></tr>
<tr class="separator:a19d644ae526795f0ea24ee4e6151cf94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a191784416ff1caad4c7f5631fc7ec491"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a191784416ff1caad4c7f5631fc7ec491"></a>
typedef std::map&lt; <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>, <br class="typebreak"/>
<a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a191784416ff1caad4c7f5631fc7ec491">NamedDataStreamContainer</a></td></tr>
<tr class="memdesc:a191784416ff1caad4c7f5631fc7ec491"><td class="mdescLeft">&#160;</td><td class="mdescRight">Basic container type for named DataStream storage by this class. <br/></td></tr>
<tr class="separator:a191784416ff1caad4c7f5631fc7ec491"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a8d71c7e983c0119f8b7aa1d34dabd1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2a8d71c7e983c0119f8b7aa1d34dabd1"></a>
typedef <br class="typebreak"/>
NamedDataStreamContainer::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a2a8d71c7e983c0119f8b7aa1d34dabd1">NamedDataStreamIterator</a></td></tr>
<tr class="memdesc:a2a8d71c7e983c0119f8b7aa1d34dabd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterator type for named DataStream instances stored by this class. <br/></td></tr>
<tr class="separator:a2a8d71c7e983c0119f8b7aa1d34dabd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a9a6f3e238f66cbc68dfec11e4160aa6c inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> { <br/>
&#160;&#160;<b>MT_AudioManager</b> = 1, 
<b>MT_AnimationManager</b>, 
<b>MT_CollisionShapeManager</b>, 
<b>MT_GraphicsManager</b>, 
<br/>
&#160;&#160;<b>MT_EventManager</b>, 
<b>MT_InputManager</b>, 
<b>MT_LogManager</b>, 
<b>MT_MaterialManager</b>, 
<br/>
&#160;&#160;<b>MT_MeshManager</b>, 
<b>MT_NetworkManager</b>, 
<b>MT_ResourceManager</b>, 
<b>MT_ScriptingManager</b>, 
<br/>
&#160;&#160;<b>MT_UIManager</b>, 
<b>MT_ActorManager</b> = 100, 
<b>MT_AreaEffectManager</b>, 
<b>MT_CameraManager</b>, 
<br/>
&#160;&#160;<b>MT_PagingManager</b>, 
<b>MT_PhysicsManager</b>, 
<b>MT_SceneManager</b>, 
<b>MT_SoundScapeManager</b>, 
<br/>
&#160;&#160;<b>MT_TerrainManager</b>, 
<b>MT_VehicleManager</b>, 
<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6caf1bafaadc056164a0e4c183917edd06e">MT_UserCreated</a> = 512
<br/>
 }</td></tr>
<tr class="separator:a9a6f3e238f66cbc68dfec11e4160aa6c inherit pub_types_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af83fc9a32915564cb54d5aa41e8422b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#af83fc9a32915564cb54d5aa41e8422b4">ResourceManager</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;EngineDataPath=&quot;.&quot;, const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> ArchType=<a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538bae0f6ba7e60a408f888d1c616ca20e266">AT_FileSystem</a>, int ArgCount=0, char **ArgVars=NULL)</td></tr>
<tr class="memdesc:af83fc9a32915564cb54d5aa41e8422b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor.  <a href="#af83fc9a32915564cb54d5aa41e8422b4">More...</a><br/></td></tr>
<tr class="separator:af83fc9a32915564cb54d5aa41e8422b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23c46c4660e85d0e38f8e61ed12fde3c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a23c46c4660e85d0e38f8e61ed12fde3c">ResourceManager</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;XMLNode)</td></tr>
<tr class="memdesc:a23c46c4660e85d0e38f8e61ed12fde3c"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor.  <a href="#a23c46c4660e85d0e38f8e61ed12fde3c">More...</a><br/></td></tr>
<tr class="separator:a23c46c4660e85d0e38f8e61ed12fde3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10cfccc0ecb1322995c170f2756460ea"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a10cfccc0ecb1322995c170f2756460ea">~ResourceManager</a> ()</td></tr>
<tr class="separator:a10cfccc0ecb1322995c170f2756460ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84416259e8515e1686803705ff7554d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a84416259e8515e1686803705ff7554d4">AddAssetLocation</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Location, const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> Type, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group, const bool Recursive=false)</td></tr>
<tr class="memdesc:a84416259e8515e1686803705ff7554d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a location for graphical resources.  <a href="#a84416259e8515e1686803705ff7554d4">More...</a><br/></td></tr>
<tr class="separator:a84416259e8515e1686803705ff7554d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee353dc44370081eaabd70f233b9368b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#aee353dc44370081eaabd70f233b9368b">CreateAssetGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;GroupName)</td></tr>
<tr class="memdesc:aee353dc44370081eaabd70f233b9368b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an asset group.  <a href="#aee353dc44370081eaabd70f233b9368b">More...</a><br/></td></tr>
<tr class="separator:aee353dc44370081eaabd70f233b9368b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9760765477c96037e4fbf0d459978a9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#ae9760765477c96037e4fbf0d459978a9">CreateDataStream</a> (void *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> BufferSize)</td></tr>
<tr class="memdesc:ae9760765477c96037e4fbf0d459978a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a stream from a memory buffer.  <a href="#ae9760765477c96037e4fbf0d459978a9">More...</a><br/></td></tr>
<tr class="separator:ae9760765477c96037e4fbf0d459978a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c94fe14dab84af929c29d1ee1bd0d67"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a1c94fe14dab84af929c29d1ee1bd0d67">CreateDataStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;AssetName, void *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> BufferSize)</td></tr>
<tr class="memdesc:a1c94fe14dab84af929c29d1ee1bd0d67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a named stream from a memory buffer.  <a href="#a1c94fe14dab84af929c29d1ee1bd0d67">More...</a><br/></td></tr>
<tr class="separator:a1c94fe14dab84af929c29d1ee1bd0d67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a4c08e364f0ea468c911d6228d8c08f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a7a4c08e364f0ea468c911d6228d8c08f">CreateDataStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;AssetName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;AssetGroup, void *Buffer, const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a> BufferSize)</td></tr>
<tr class="memdesc:a7a4c08e364f0ea468c911d6228d8c08f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a named stream from a memory buffer and adds it to the named AssetGroup.  <a href="#a7a4c08e364f0ea468c911d6228d8c08f">More...</a><br/></td></tr>
<tr class="separator:a7a4c08e364f0ea468c911d6228d8c08f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a069aa5c4dbe6aa73ed31d2ee28d119f2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a069aa5c4dbe6aa73ed31d2ee28d119f2">CreateDirectoryPath</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;DirectoryPath)</td></tr>
<tr class="memdesc:a069aa5c4dbe6aa73ed31d2ee28d119f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates all directories that do not exist in the provided path.  <a href="#a069aa5c4dbe6aa73ed31d2ee28d119f2">More...</a><br/></td></tr>
<tr class="separator:a069aa5c4dbe6aa73ed31d2ee28d119f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65163e71f68b17107e92580f077a3176"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a65163e71f68b17107e92580f077a3176">DeclareAsset</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Type, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group)</td></tr>
<tr class="memdesc:a65163e71f68b17107e92580f077a3176"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepares the asset for use.  <a href="#a65163e71f68b17107e92580f077a3176">More...</a><br/></td></tr>
<tr class="separator:a65163e71f68b17107e92580f077a3176"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e5941ffd24d79c6f9e54ff535cc0f83"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a6e5941ffd24d79c6f9e54ff535cc0f83">Deinitialize</a> ()</td></tr>
<tr class="memdesc:a6e5941ffd24d79c6f9e54ff535cc0f83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes this manager from any necessary configuration so it can be safely disposed of.  <a href="#a6e5941ffd24d79c6f9e54ff535cc0f83">More...</a><br/></td></tr>
<tr class="separator:a6e5941ffd24d79c6f9e54ff535cc0f83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee575de144fe2ac87df4e06f54cb3b92"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#aee575de144fe2ac87df4e06f54cb3b92">DestroyAssetGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;GroupName)</td></tr>
<tr class="memdesc:aee575de144fe2ac87df4e06f54cb3b92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an asset group, unloading all of it's resources.  <a href="#aee575de144fe2ac87df4e06f54cb3b92">More...</a><br/></td></tr>
<tr class="separator:aee575de144fe2ac87df4e06f54cb3b92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53cc17afe902c15d261ba1297366370d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a53cc17afe902c15d261ba1297366370d">GetAssetPath</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Group)</td></tr>
<tr class="memdesc:a53cc17afe902c15d261ba1297366370d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the actual path to an asset.  <a href="#a53cc17afe902c15d261ba1297366370d">More...</a><br/></td></tr>
<tr class="separator:a53cc17afe902c15d261ba1297366370d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33d2d0ca80d2247f668b4a2416fd8a0b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a33d2d0ca80d2247f668b4a2416fd8a0b">GetCommonUserDataDir</a> () const </td></tr>
<tr class="memdesc:a33d2d0ca80d2247f668b4a2416fd8a0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the path to the directory intended for game saves and user profile data for all users.  <a href="#a33d2d0ca80d2247f668b4a2416fd8a0b">More...</a><br/></td></tr>
<tr class="separator:a33d2d0ca80d2247f668b4a2416fd8a0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af53b3f68a9b16a55c593cd5ed6a2eba0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#af53b3f68a9b16a55c593cd5ed6a2eba0">GetCurrentUserDataDir</a> () const </td></tr>
<tr class="memdesc:af53b3f68a9b16a55c593cd5ed6a2eba0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the path to the directory intended for game saves and user profile data for the current user.  <a href="#af53b3f68a9b16a55c593cd5ed6a2eba0">More...</a><br/></td></tr>
<tr class="separator:af53b3f68a9b16a55c593cd5ed6a2eba0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b2bd318749c5d6e236680410c13f8bc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a5b2bd318749c5d6e236680410c13f8bc">GetEngineDataDirectory</a> () const </td></tr>
<tr class="memdesc:a5b2bd318749c5d6e236680410c13f8bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pathname where engine data is stored.  <a href="#a5b2bd318749c5d6e236680410c13f8bc">More...</a><br/></td></tr>
<tr class="separator:a5b2bd318749c5d6e236680410c13f8bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39c7fe8cd11a8883a66a10d6547d4187"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a39c7fe8cd11a8883a66a10d6547d4187">GetExecutableDir</a> () const </td></tr>
<tr class="memdesc:a39c7fe8cd11a8883a66a10d6547d4187"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Path to the current executable, in a fast way if possible.  <a href="#a39c7fe8cd11a8883a66a10d6547d4187">More...</a><br/></td></tr>
<tr class="separator:a39c7fe8cd11a8883a66a10d6547d4187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fb0261ce5b242bdbee574471d1b96f0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a8fb0261ce5b242bdbee574471d1b96f0">GetExecutableDirFromArg</a> () const </td></tr>
<tr class="memdesc:a8fb0261ce5b242bdbee574471d1b96f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Uses the main parameters stored on an instance of <a class="el" href="classMezzanine_1_1ResourceManager.xhtml" title="This is the manager responsible for the loading and unloading of files.">Mezzanine::ResourceManager</a> to attempt determine executable directory.  <a href="#a8fb0261ce5b242bdbee574471d1b96f0">More...</a><br/></td></tr>
<tr class="separator:a8fb0261ce5b242bdbee574471d1b96f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59b6f7e33e89aface3733ad44ef9e57e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a59b6f7e33e89aface3733ad44ef9e57e">GetImplementationTypeName</a> () const </td></tr>
<tr class="memdesc:a59b6f7e33e89aface3733ad44ef9e57e"><td class="mdescLeft">&#160;</td><td class="mdescRight">This Allows any manager name to be sent to a stream. Primarily used for logging.  <a href="#a59b6f7e33e89aface3733ad44ef9e57e">More...</a><br/></td></tr>
<tr class="separator:a59b6f7e33e89aface3733ad44ef9e57e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae2b2182d03c3e21de785d79c357a7d"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a9ae2b2182d03c3e21de785d79c357a7d">GetInterfaceType</a> () const </td></tr>
<tr class="memdesc:a9ae2b2182d03c3e21de785d79c357a7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">This returns the type of this manager.  <a href="#a9ae2b2182d03c3e21de785d79c357a7d">More...</a><br/></td></tr>
<tr class="separator:a9ae2b2182d03c3e21de785d79c357a7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a488e3fd88f733177ac5603e52bce1c18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a488e3fd88f733177ac5603e52bce1c18">GetLocalAppDataDir</a> () const </td></tr>
<tr class="memdesc:a488e3fd88f733177ac5603e52bce1c18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the path to the directory intended for game and engine config data that is not meant to be shared.  <a href="#a488e3fd88f733177ac5603e52bce1c18">More...</a><br/></td></tr>
<tr class="separator:a488e3fd88f733177ac5603e52bce1c18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4899779f99bce0c62c31ecc38e7af633"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a4899779f99bce0c62c31ecc38e7af633">GetPluginExtension</a> () const </td></tr>
<tr class="memdesc:a4899779f99bce0c62c31ecc38e7af633"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the dot-and-extention of this platforms plugins.  <a href="#a4899779f99bce0c62c31ecc38e7af633">More...</a><br/></td></tr>
<tr class="separator:a4899779f99bce0c62c31ecc38e7af633"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d6f86f351c9ea275436f31cc792b02b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ResourceInputStream.xhtml">ResourceInputStream</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a5d6f86f351c9ea275436f31cc792b02b">GetResourceStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:a5d6f86f351c9ea275436f31cc792b02b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a stream to read from the specified file.  <a href="#a5d6f86f351c9ea275436f31cc792b02b">More...</a><br/></td></tr>
<tr class="separator:a5d6f86f351c9ea275436f31cc792b02b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5579269be96a5b402f1caaa15a9f26af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a5579269be96a5b402f1caaa15a9f26af">GetShareableAppDataDir</a> () const </td></tr>
<tr class="memdesc:a5579269be96a5b402f1caaa15a9f26af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the path to the directory intended for game and engine config data that is allowed to be shared.  <a href="#a5579269be96a5b402f1caaa15a9f26af">More...</a><br/></td></tr>
<tr class="separator:a5579269be96a5b402f1caaa15a9f26af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c856abff10485077a85d4148bc50597"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a5c856abff10485077a85d4148bc50597">InitAssetGroup</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Name)</td></tr>
<tr class="memdesc:a5c856abff10485077a85d4148bc50597"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes a asset group ready to use.  <a href="#a5c856abff10485077a85d4148bc50597">More...</a><br/></td></tr>
<tr class="separator:a5c856abff10485077a85d4148bc50597"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b4e77984e21e3eaa1c47772d2e9c6f4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a4b4e77984e21e3eaa1c47772d2e9c6f4">Initialize</a> ()</td></tr>
<tr class="memdesc:a4b4e77984e21e3eaa1c47772d2e9c6f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures this manager for use prior to entering the main loop.  <a href="#a4b4e77984e21e3eaa1c47772d2e9c6f4">More...</a><br/></td></tr>
<tr class="separator:a4b4e77984e21e3eaa1c47772d2e9c6f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d02d9b4059ebd6987a1be5118b54efa"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a0d02d9b4059ebd6987a1be5118b54efa">OpenAssetStream</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;AssetName, const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;AssetGroup)</td></tr>
<tr class="memdesc:a0d02d9b4059ebd6987a1be5118b54efa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Opens a stream to an asset in an AssetGroup.  <a href="#a0d02d9b4059ebd6987a1be5118b54efa">More...</a><br/></td></tr>
<tr class="separator:a0d02d9b4059ebd6987a1be5118b54efa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17b72af560fcf890ee2571dab2109a6d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a17b72af560fcf890ee2571dab2109a6d">ResolveDataPathFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;PathVar)</td></tr>
<tr class="memdesc:a17b72af560fcf890ee2571dab2109a6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resolves a string describing one of the platform data paths to the actual path it is.  <a href="#a17b72af560fcf890ee2571dab2109a6d">More...</a><br/></td></tr>
<tr class="separator:a17b72af560fcf890ee2571dab2109a6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34c663ee3449f28aba3aca14fa5c22a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a34c663ee3449f28aba3aca14fa5c22a6">SetMainArgs</a> (int ArgCount, char **ArgVars)</td></tr>
<tr class="memdesc:a34c663ee3449f28aba3aca14fa5c22a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Store the Main arguments for later use.  <a href="#a34c663ee3449f28aba3aca14fa5c22a6">More...</a><br/></td></tr>
<tr class="separator:a34c663ee3449f28aba3aca14fa5c22a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6ee3249f71f330394e81e349370d57a8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a6ee3249f71f330394e81e349370d57a8">ManagerBase</a> ()</td></tr>
<tr class="memdesc:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a6ee3249f71f330394e81e349370d57a8 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a04cb832dc79f4559cc5b2f57cabfa70d"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a04cb832dc79f4559cc5b2f57cabfa70d">~ManagerBase</a> ()</td></tr>
<tr class="memdesc:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a04cb832dc79f4559cc5b2f57cabfa70d inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a70b61244d5182ad40dd056b2664a6aa7">GetInterfaceTypeAsString</a> () const </td></tr>
<tr class="memdesc:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a string of the interface type of this manager.  <a href="#a70b61244d5182ad40dd056b2664a6aa7">More...</a><br/></td></tr>
<tr class="separator:a70b61244d5182ad40dd056b2664a6aa7 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#adc9433deb9026dbbb0b51f35a3a10f02">IsInitialized</a> () const </td></tr>
<tr class="memdesc:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets whether or not this manager has been initialized.  <a href="#adc9433deb9026dbbb0b51f35a3a10f02">More...</a><br/></td></tr>
<tr class="separator:adc9433deb9026dbbb0b51f35a3a10f02 inherit pub_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; ResourceManager &gt;</a></td></tr>
<tr class="memitem:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7174af94e201bdaeab717cdbcbb2e565"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a7174af94e201bdaeab717cdbcbb2e565">Singleton</a> ()</td></tr>
<tr class="memdesc:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class constructor. <br/></td></tr>
<tr class="separator:a7174af94e201bdaeab717cdbcbb2e565 inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5e45fc3969b0fae3d095676cc515da1d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a5e45fc3969b0fae3d095676cc515da1d">~Singleton</a> ()</td></tr>
<tr class="memdesc:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class destructor. <br/></td></tr>
<tr class="separator:a5e45fc3969b0fae3d095676cc515da1d inherit pub_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9e23b6edc0e916ea24a4d7e7d08681cc"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a9e23b6edc0e916ea24a4d7e7d08681cc">BaseName</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:a9e23b6edc0e916ea24a4d7e7d08681cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the filename portion of a string.  <a href="#a9e23b6edc0e916ea24a4d7e7d08681cc">More...</a><br/></td></tr>
<tr class="separator:a9e23b6edc0e916ea24a4d7e7d08681cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee8b91c0fca9d26806bd679659f48367"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#aee8b91c0fca9d26806bd679659f48367">ChangeDirectory</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ChangeTo)</td></tr>
<tr class="memdesc:aee8b91c0fca9d26806bd679659f48367"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change directory, to the directory indicated.  <a href="#aee8b91c0fca9d26806bd679659f48367">More...</a><br/></td></tr>
<tr class="separator:aee8b91c0fca9d26806bd679659f48367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dc9e428f8ac2bfc9a34625730ec625a"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a4dc9e428f8ac2bfc9a34625730ec625a">CreateDirectory</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;DirectoryPath)</td></tr>
<tr class="memdesc:a4dc9e428f8ac2bfc9a34625730ec625a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a single new directory.  <a href="#a4dc9e428f8ac2bfc9a34625730ec625a">More...</a><br/></td></tr>
<tr class="separator:a4dc9e428f8ac2bfc9a34625730ec625a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c104b848b104eee44c566014e6a4000"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a9c104b848b104eee44c566014e6a4000">DirName</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FileName)</td></tr>
<tr class="memdesc:a9c104b848b104eee44c566014e6a4000"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the directory portion of a string.  <a href="#a9c104b848b104eee44c566014e6a4000">More...</a><br/></td></tr>
<tr class="separator:a9c104b848b104eee44c566014e6a4000"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46682649160ebeebcebf1a09351c7beb"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a46682649160ebeebcebf1a09351c7beb">DoesDirectoryExist</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;DirectoryPath)</td></tr>
<tr class="memdesc:a46682649160ebeebcebf1a09351c7beb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the given path exists and if it is a folder.  <a href="#a46682649160ebeebcebf1a09351c7beb">More...</a><br/></td></tr>
<tr class="separator:a46682649160ebeebcebf1a09351c7beb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0a7181d816e7cc8b0ea14521d41857a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#af0a7181d816e7cc8b0ea14521d41857a">GetArchiveTypeFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;FromString)</td></tr>
<tr class="memdesc:af0a7181d816e7cc8b0ea14521d41857a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets an <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> from a string.  <a href="#af0a7181d816e7cc8b0ea14521d41857a">More...</a><br/></td></tr>
<tr class="separator:af0a7181d816e7cc8b0ea14521d41857a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b763387dfd8a33c8723de51cf5b6c22"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#a1055975ce37fe9d65089bb2db3d2952b">StringSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a7b763387dfd8a33c8723de51cf5b6c22">GetDirContents</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;Dir=&quot;.&quot;)</td></tr>
<tr class="memdesc:a7b763387dfd8a33c8723de51cf5b6c22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a Listing of the files and subdirectories in a directory.  <a href="#a7b763387dfd8a33c8723de51cf5b6c22">More...</a><br/></td></tr>
<tr class="separator:a7b763387dfd8a33c8723de51cf5b6c22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5a521ec769c34e7ba498a11b55bcc21"><td class="memItemLeft" align="right" valign="top">static char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#aa5a521ec769c34e7ba498a11b55bcc21">GetDirectorySeparator</a> ()</td></tr>
<tr class="memdesc:aa5a521ec769c34e7ba498a11b55bcc21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the character used to separate directories.  <a href="#aa5a521ec769c34e7ba498a11b55bcc21">More...</a><br/></td></tr>
<tr class="separator:aa5a521ec769c34e7ba498a11b55bcc21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7093b95640f87758650b8ee60b12e0a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#af7093b95640f87758650b8ee60b12e0a">GetExecutableDir</a> (int ArgCount, char **ArgVars)</td></tr>
<tr class="memdesc:af7093b95640f87758650b8ee60b12e0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the Path to the current executable, fast from Args if Possible or from a system call otherwise.  <a href="#af7093b95640f87758650b8ee60b12e0a">More...</a><br/></td></tr>
<tr class="separator:af7093b95640f87758650b8ee60b12e0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e5ae5e47f06ddfbf61262379d1f8ba3"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a5e5ae5e47f06ddfbf61262379d1f8ba3">GetExecutableDirFromArg</a> (int ArgCount, char **ArgVars)</td></tr>
<tr class="memdesc:a5e5ae5e47f06ddfbf61262379d1f8ba3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempt to get the executable directory from the a set of variables like those passed into Main.  <a href="#a5e5ae5e47f06ddfbf61262379d1f8ba3">More...</a><br/></td></tr>
<tr class="separator:a5e5ae5e47f06ddfbf61262379d1f8ba3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d5974c6154f26db6955d8c50a002377"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a8d5974c6154f26db6955d8c50a002377">GetExecutableDirFromSystem</a> ()</td></tr>
<tr class="memdesc:a8d5974c6154f26db6955d8c50a002377"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used a system call to get the curent Directory the executable is in. This make an external system call and is likely slower than GetExecutableDirFromArg.  <a href="#a8d5974c6154f26db6955d8c50a002377">More...</a><br/></td></tr>
<tr class="separator:a8d5974c6154f26db6955d8c50a002377"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad81bd381e885c5e983d3ba33f8a4ba2a"><td class="memItemLeft" align="right" valign="top">static char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#ad81bd381e885c5e983d3ba33f8a4ba2a">GetPathSeparator</a> ()</td></tr>
<tr class="memdesc:ad81bd381e885c5e983d3ba33f8a4ba2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the character used to separate entries in the system PATH.  <a href="#ad81bd381e885c5e983d3ba33f8a4ba2a">More...</a><br/></td></tr>
<tr class="separator:ad81bd381e885c5e983d3ba33f8a4ba2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bbb34a68534b0e696100a1c49267b61"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a2bbb34a68534b0e696100a1c49267b61">GetStringFromArchiveType</a> (const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">Mezzanine::ArchiveType</a> ArchType)</td></tr>
<tr class="memdesc:a2bbb34a68534b0e696100a1c49267b61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a string that describes an <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a>.  <a href="#a2bbb34a68534b0e696100a1c49267b61">More...</a><br/></td></tr>
<tr class="separator:a2bbb34a68534b0e696100a1c49267b61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a61a97cf4504362e03b7843dd54408"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#a9b3665ebc21b3444e1d7858d460475f6">StringVector</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a64a61a97cf4504362e03b7843dd54408">GetSystemPATH</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;PATH=<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>(getenv(&quot;PATH&quot;)))</td></tr>
<tr class="memdesc:a64a61a97cf4504362e03b7843dd54408"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the $PATH or PATH% split and order for easy checking of how the OS does it.  <a href="#a64a61a97cf4504362e03b7843dd54408">More...</a><br/></td></tr>
<tr class="separator:a64a61a97cf4504362e03b7843dd54408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62bb6307f022815fe443a99154cf277f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a62bb6307f022815fe443a99154cf277f">GetWorkingDirectory</a> ()</td></tr>
<tr class="memdesc:a62bb6307f022815fe443a99154cf277f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the working directory as a <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>.  <a href="#a62bb6307f022815fe443a99154cf277f">More...</a><br/></td></tr>
<tr class="separator:a62bb6307f022815fe443a99154cf277f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff14c330394714615b869d884795625"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a9ff14c330394714615b869d884795625">RemoveDirectory</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;DirectoryPath)</td></tr>
<tr class="memdesc:a9ff14c330394714615b869d884795625"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove an empty directory.  <a href="#a9ff14c330394714615b869d884795625">More...</a><br/></td></tr>
<tr class="separator:a9ff14c330394714615b869d884795625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7312c017bcb079f3e78400c27224370b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a7312c017bcb079f3e78400c27224370b">Which</a> (<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> ExecutableName)</td></tr>
<tr class="memdesc:a7312c017bcb079f3e78400c27224370b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search the system path the same way most systems do to find an executable.  <a href="#a7312c017bcb079f3e78400c27224370b">More...</a><br/></td></tr>
<tr class="separator:a7312c017bcb079f3e78400c27224370b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#aa148d67ebe4538adcd74d3f02f7ddc97">GetTypeAsString</a> (const <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a> &amp;<a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>)</td></tr>
<tr class="memdesc:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the string form of the type of manager.  <a href="#aa148d67ebe4538adcd74d3f02f7ddc97">More...</a><br/></td></tr>
<tr class="separator:aa148d67ebe4538adcd74d3f02f7ddc97 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#acb0c0b9192f8ce94c725d5550e8439f6">GetTypeFromString</a> (const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;ManagerName)</td></tr>
<tr class="memdesc:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the type of manager requested from a string.  <a href="#acb0c0b9192f8ce94c725d5550e8439f6">More...</a><br/></td></tr>
<tr class="separator:acb0c0b9192f8ce94c725d5550e8439f6 inherit pub_static_methods_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; ResourceManager &gt;</a></td></tr>
<tr class="memitem:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classMezzanine_1_1ResourceManager.xhtml">ResourceManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a78fc425584913f0b2c615ec440871a67">GetSingletonPtr</a> ()</td></tr>
<tr class="memdesc:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fetches a pointer to the singleton.  <a href="#a78fc425584913f0b2c615ec440871a67">More...</a><br/></td></tr>
<tr class="separator:a78fc425584913f0b2c615ec440871a67 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1Singleton.xhtml#a554165fe3e4b594b678d64215fd7a6f9">SingletonValid</a> ()</td></tr>
<tr class="memdesc:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks to see if the singleton pointer is valid.  <a href="#a554165fe3e4b594b678d64215fd7a6f9">More...</a><br/></td></tr>
<tr class="separator:a554165fe3e4b594b678d64215fd7a6f9 inherit pub_static_methods_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a862bf0027a7f738070b31e22f24e0027"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a862bf0027a7f738070b31e22f24e0027">AddAssetGroupName</a> (<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Name)</td></tr>
<tr class="memdesc:a862bf0027a7f738070b31e22f24e0027"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an asset group name to the list of known AssetGroups.  <a href="#a862bf0027a7f738070b31e22f24e0027">More...</a><br/></td></tr>
<tr class="separator:a862bf0027a7f738070b31e22f24e0027"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a0f107daa3b2e095f938b16da9da89d53"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a0f107daa3b2e095f938b16da9da89d53">ArgC</a></td></tr>
<tr class="memdesc:a0f107daa3b2e095f938b16da9da89d53"><td class="mdescLeft">&#160;</td><td class="mdescRight">ArgC as it was passed into Main.  <a href="#a0f107daa3b2e095f938b16da9da89d53">More...</a><br/></td></tr>
<tr class="separator:a0f107daa3b2e095f938b16da9da89d53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54840a405b0dc9ee3663873d4c9514fa"><td class="memItemLeft" align="right" valign="top">char **&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a54840a405b0dc9ee3663873d4c9514fa">ArgV</a></td></tr>
<tr class="memdesc:a54840a405b0dc9ee3663873d4c9514fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">ArgC as it was passed into Main.  <a href="#a54840a405b0dc9ee3663873d4c9514fa">More...</a><br/></td></tr>
<tr class="separator:a54840a405b0dc9ee3663873d4c9514fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad8e810e3672f2460ec244c8d9b51da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a00c89e4ec9f68f4bf42675c0aa106916">DataStreamContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a2ad8e810e3672f2460ec244c8d9b51da">DataStreams</a></td></tr>
<tr class="memdesc:a2ad8e810e3672f2460ec244c8d9b51da"><td class="mdescLeft">&#160;</td><td class="mdescRight">A container storing all un-named, un-grouped data streams known by the resource system.  <a href="#a2ad8e810e3672f2460ec244c8d9b51da">More...</a><br/></td></tr>
<tr class="separator:a2ad8e810e3672f2460ec244c8d9b51da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0aedd87abe53f208c21628fbc624bb0"><td class="memItemLeft" align="right" valign="top">std::vector<br class="typebreak"/>
&lt; <a class="el" href="classMezzanine_1_1ResourceInputStream.xhtml">ResourceInputStream</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#ab0aedd87abe53f208c21628fbc624bb0">DeleteList</a></td></tr>
<tr class="memdesc:ab0aedd87abe53f208c21628fbc624bb0"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vector of Pointers to streams created to delete periodically.  <a href="#ab0aedd87abe53f208c21628fbc624bb0">More...</a><br/></td></tr>
<tr class="separator:ab0aedd87abe53f208c21628fbc624bb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae511b7a9295377cc54eb22463406dfe5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#ae511b7a9295377cc54eb22463406dfe5">EngineDataDir</a></td></tr>
<tr class="memdesc:ae511b7a9295377cc54eb22463406dfe5"><td class="mdescLeft">&#160;</td><td class="mdescRight">The location of engine data.  <a href="#ae511b7a9295377cc54eb22463406dfe5">More...</a><br/></td></tr>
<tr class="separator:ae511b7a9295377cc54eb22463406dfe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2331a1381ab103523f8e4815d78f9192"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a191784416ff1caad4c7f5631fc7ec491">NamedDataStreamContainer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a2331a1381ab103523f8e4815d78f9192">NamedDataStreams</a></td></tr>
<tr class="memdesc:a2331a1381ab103523f8e4815d78f9192"><td class="mdescLeft">&#160;</td><td class="mdescRight">A container storing all named but un-grouped data streams known by the resource system.  <a href="#a2331a1381ab103523f8e4815d78f9192">More...</a><br/></td></tr>
<tr class="separator:a2331a1381ab103523f8e4815d78f9192"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c1b8d26ef1e623a8f96ff5e0559a829"><td class="memItemLeft" align="right" valign="top">Ogre::ResourceGroupManager *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a3c1b8d26ef1e623a8f96ff5e0559a829">OgreResource</a></td></tr>
<tr class="memdesc:a3c1b8d26ef1e623a8f96ff5e0559a829"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encapsulates the functionality of the ogre resource group manager.  <a href="#a3c1b8d26ef1e623a8f96ff5e0559a829">More...</a><br/></td></tr>
<tr class="separator:a3c1b8d26ef1e623a8f96ff5e0559a829"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95fb64f9f391c9bf2647b6884f370bf9"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a95fb64f9f391c9bf2647b6884f370bf9">ResourceGroups</a></td></tr>
<tr class="memdesc:a95fb64f9f391c9bf2647b6884f370bf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">A vector of all the known internal Asset Groups.  <a href="#a95fb64f9f391c9bf2647b6884f370bf9">More...</a><br/></td></tr>
<tr class="separator:a95fb64f9f391c9bf2647b6884f370bf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classMezzanine_1_1ManagerBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classMezzanine_1_1ManagerBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml">Mezzanine::ManagerBase</a></td></tr>
<tr class="memitem:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ada3bad0fe77ff2fa7404eea7a5c16264">Initialized</a></td></tr>
<tr class="memdesc:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple bool indicating whether or not this manager has been initialized.  <a href="#ada3bad0fe77ff2fa7404eea7a5c16264">More...</a><br/></td></tr>
<tr class="separator:ada3bad0fe77ff2fa7404eea7a5c16264 inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMezzanine_1_1Entresol.xhtml">Entresol</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ae619b4bd732d7345e0ef59ecde6d03cc">TheEntresol</a></td></tr>
<tr class="memdesc:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="mdescLeft">&#160;</td><td class="mdescRight">The actual pointer to the <a class="el" href="classMezzanine_1_1Entresol.xhtml" title="This is the main entry point for the entire library.">Entresol</a> core class.  <a href="#ae619b4bd732d7345e0ef59ecde6d03cc">More...</a><br/></td></tr>
<tr class="separator:ae619b4bd732d7345e0ef59ecde6d03cc inherit pro_attribs_classMezzanine_1_1ManagerBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_static_attribs_classMezzanine_1_1Singleton"><td colspan="2" onclick="javascript:toggleInherit('pro_static_attribs_classMezzanine_1_1Singleton')"><img src="closed.png" alt="-"/>&#160;Static Protected Attributes inherited from <a class="el" href="classMezzanine_1_1Singleton.xhtml">Mezzanine::Singleton&lt; ResourceManager &gt;</a></td></tr>
<tr class="memitem:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0db9959ccd7daa1345f4567aa0b0655d"></a>
static <a class="el" href="classMezzanine_1_1ResourceManager.xhtml">ResourceManager</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>SingletonPtr</b></td></tr>
<tr class="separator:a0db9959ccd7daa1345f4567aa0b0655d inherit pro_static_attribs_classMezzanine_1_1Singleton"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is the manager responsible for the loading and unloading of files. </p>
<p>This class is responsible for the reading and writing of files of all kinds, be it graphical meshes, physics data, or XMl files. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00076">76</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af83fc9a32915564cb54d5aa41e8422b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ResourceManager::ResourceManager </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>EngineDataPath</em> = <code>&quot;.&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a>&#160;</td>
          <td class="paramname"><em>ArchType</em> = <code><a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538bae0f6ba7e60a408f888d1c616ca20e266">AT_FileSystem</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ArgCount</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>ArgVars</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Class constructor. </p>
<p>Standard manager constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">EngineDataPath</td><td>The directory for engine specific data. </td></tr>
    <tr><td class="paramname">ArchiveType</td><td>The name of the type of archive at this path. </td></tr>
    <tr><td class="paramname">ArgCount</td><td>How many arguments will be passed in ArgVars. Defaults to 0 </td></tr>
    <tr><td class="paramname">ArgVars</td><td>A pointer to an array, with ArgCount elements, of char* which point to null terminated c strings. Defaults to NULL. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00100">100</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a23c46c4660e85d0e38f8e61ed12fde3c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ResourceManager::ResourceManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">XML::Node</a> &amp;&#160;</td>
          <td class="paramname"><em>XMLNode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a> constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">XMLNode</td><td>The node of the xml document to construct from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000035">Todo:</a></b></dt><dd>This class currently doesn't initialize anything from <a class="el" href="namespaceMezzanine_1_1XML.xhtml" title="All tools for working with XML are located in this namespace.">XML</a>, if that changes this constructor needs to be expanded. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a10cfccc0ecb1322995c170f2756460ea"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Mezzanine::ResourceManager::~ResourceManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Class Destructor. </p>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00114">114</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a862bf0027a7f738070b31e22f24e0027"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::AddAssetGroupName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds an asset group name to the list of known AssetGroups. </p>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00577">577</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a84416259e8515e1686803705ff7554d4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::AddAssetLocation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Location</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a>&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>Recursive</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a location for graphical resources. </p>
<p>This function will add a location on the disk to find files needed to create and manipulate graphical objects. Once an asset is added it must be initalized using ResourceManager::InitResourceGroup(String Group). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Location</td><td>The location on the file system the asset can be found. </td></tr>
    <tr><td class="paramname">Type</td><td>The kind of file system the location can be found in. <br/>
 Options are: filesystem, zip. </td></tr>
    <tr><td class="paramname">Group</td><td>The name of the group the resources at this location belong to. If the group does not exist it will be created. </td></tr>
    <tr><td class="paramname">Recursive</td><td>Whether or not to search sub-directories. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00587">587</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9e23b6edc0e916ea24a4d7e7d08681cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::BaseName </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the filename portion of a string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FileName</td><td>A whole path and filename </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If passed "/a/b/c.txt" or "c:\windirs\crash.exe" this will return "c.txt" or "crash.exe" </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00205">205</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aee8b91c0fca9d26806bd679659f48367"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::ChangeDirectory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>ChangeTo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change directory, to the directory indicated. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ChangeTo</td><td>The new directory to work from. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00345">345</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aee353dc44370081eaabd70f233b9368b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::CreateAssetGroup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>GroupName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates an asset group. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">GroupName</td><td>The name to be given to the created asset group. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00593">593</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae9760765477c96037e4fbf0d459978a9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Mezzanine::ResourceManager::CreateDataStream </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>BufferSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a stream from a memory buffer. </p>
<dl class="section note"><dt>Note</dt><dd>The created stream will take ownership of the buffer you provide. If you want it to have a separate buffer then create a copy and pass that in. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>A pointer to the memory to stream from. </td></tr>
    <tr><td class="paramname">BufferSize</td><td>The size of the provided buffer in bytes. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1CountedPtr.xhtml">CountedPtr</a> to the stream to the provided buffer. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00550">550</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a1c94fe14dab84af929c29d1ee1bd0d67"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Mezzanine::ResourceManager::CreateDataStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>AssetName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>BufferSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a named stream from a memory buffer. </p>
<dl class="section note"><dt>Note</dt><dd>The created stream will take ownership of the buffer you provide. If you want it to have a separate buffer then create a copy and pass that in. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">AssetName</td><td>The name to be given to the created stream. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the memory to stream from. </td></tr>
    <tr><td class="paramname">BufferSize</td><td>The size of the provided buffer in bytes. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1CountedPtr.xhtml">CountedPtr</a> to the stream to the provided buffer. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00557">557</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7a4c08e364f0ea468c911d6228d8c08f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Mezzanine::ResourceManager::CreateDataStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>AssetName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>AssetGroup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#abea3b8e8e9b03d2547b2800284ba682d">UInt32</a>&#160;</td>
          <td class="paramname"><em>BufferSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a named stream from a memory buffer and adds it to the named AssetGroup. </p>
<dl class="section note"><dt>Note</dt><dd>The created stream will take ownership of the buffer you provide. If you want it to have a separate buffer then create a copy and pass that in. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">AssetName</td><td>The name to be given to the created stream. </td></tr>
    <tr><td class="paramname">AssetGroup</td><td>The name of the AssetGroup this stream will be added to. </td></tr>
    <tr><td class="paramname">Buffer</td><td>A pointer to the memory to stream from. </td></tr>
    <tr><td class="paramname">BufferSize</td><td>The size of the provided buffer in bytes. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="classMezzanine_1_1CountedPtr.xhtml">CountedPtr</a> to the stream to the provided buffer. </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000037">Todo:</a></b></dt><dd>Once we have our own AssetGroup implementation we need to implement this. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00564">564</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4dc9e428f8ac2bfc9a34625730ec625a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::ResourceManager::CreateDirectory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>DirectoryPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a single new directory. </p>
<dl class="section remark"><dt>Remarks</dt><dd>This function will only create the directory specified at the end of the path. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DirectoryPath</td><td>The path for the newly created directory. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if the directory was created, false in the case of a non-critical error. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00131">131</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a069aa5c4dbe6aa73ed31d2ee28d119f2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::ResourceManager::CreateDirectoryPath </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>DirectoryPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates all directories that do not exist in the provided path. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DirectoryPath</td><td>The path for the newly created directory or directories. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns true if all directories were created, false in the case of a non-critical error. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00359">359</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a65163e71f68b17107e92580f077a3176"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::DeclareAsset </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Prepares the asset for use. </p>
<p>This function can be thought of as a preloader. This will prepare the defined asset located on the disk for use. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>Name of the file/asset to be 'prepared'. </td></tr>
    <tr><td class="paramname">Type</td><td>The type of asset that the file is. <br/>
 Options are: Font, GpuProgram, HighLevelGpuProgram, Material, Mesh, Skeleton, Texture. </td></tr>
    <tr><td class="paramname">Group</td><td>Name of the group the asset belongs to. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00621">621</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6e5941ffd24d79c6f9e54ff535cc0f83"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::Deinitialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes this manager from any necessary configuration so it can be safely disposed of. </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ab13bf1e752c3b54c7c392ba9a869fb72">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00680">680</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aee575de144fe2ac87df4e06f54cb3b92"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::DestroyAssetGroup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>GroupName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destroys an asset group, unloading all of it's resources. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">GroupName</td><td>The name of the asset group to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000038">Todo:</a></b></dt><dd>This is a bit of a hack, but needs to be here until we can upgrade our resource system. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00599">599</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9c104b848b104eee44c566014e6a4000"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::DirName </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the directory portion of a string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FileName</td><td>A whole path and filename </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If passed "/a/b/c.txt" or "c:\windirs\crash.exe" this will return "/a/b/" or "c:\windirs\" </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00191">191</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a46682649160ebeebcebf1a09351c7beb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Mezzanine::ResourceManager::DoesDirectoryExist </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>DirectoryPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks to see if the given path exists and if it is a folder. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DirectoryPath</td><td>A String containing the path to test. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the item indicated by DirectoryPath exists and it is a directory, false if it does not exist or exists but is a file. </dd></dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">On</td><td>Error this might throw a <a class="el" href="classMezzanine_1_1IOException.xhtml" title="Thrown when there was an issue with IO but very little was known about it.">Mezzanine::IOException</a> with detail about why it failed </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00169">169</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af0a7181d816e7cc8b0ea14521d41857a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">Mezzanine::ArchiveType</a> Mezzanine::ResourceManager::GetArchiveTypeFromString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FromString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets an <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> from a string. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FromString</td><td>The string to be converted to an archive type. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> corresponding to the string provided, or AT_Invalid if it is invalid. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00699">699</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a53cc17afe902c15d261ba1297366370d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetAssetPath </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Group</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the actual path to an asset. </p>
<dl class="section note"><dt>Note</dt><dd>This function currently only returns the first match, and doesn't check for multiple matches. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FileName</td><td>The name of the file to search for. </td></tr>
    <tr><td class="paramname">Group</td><td>The asset group to search in for the file. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the path to the file. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00634">634</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a33d2d0ca80d2247f668b4a2416fd8a0b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetCommonUserDataDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the path to the directory intended for game saves and user profile data for all users. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the path to the Common User Data Directory. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00510">510</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af53b3f68a9b16a55c593cd5ed6a2eba0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetCurrentUserDataDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the path to the directory intended for game saves and user profile data for the current user. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the path to the Current User Data Directory. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00489">489</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7b763387dfd8a33c8723de51cf5b6c22"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a1055975ce37fe9d65089bb2db3d2952b">StringSet</a> Mezzanine::ResourceManager::GetDirContents </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Dir</em> = <code>&quot;.&quot;</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a Listing of the files and subdirectories in a directory. </p>
<p>This follows normal command line conventions, "." is the current directory, ".." is the parent directory. To access the file system root you will need to use a leading "c:/", "c:\\", or "/" as appropriate for the operating system the software will run on. </p>
<dl class="section return"><dt>Returns</dt><dd>This will return a pointer to a set of Strings the caller is responsible for deleting or a null pointer on an error. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Dir</td><td>The directory to check. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00387">387</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa5a521ec769c34e7ba498a11b55bcc21"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char Mezzanine::ResourceManager::GetDirectorySeparator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the character used to separate directories. </p>
<dl class="section return"><dt>Returns</dt><dd>Backslash '\' on windows and Forward slash '/' on other operating systems. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00219">219</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5b2bd318749c5d6e236680410c13f8bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetEngineDataDirectory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the pathname where engine data is stored. </p>
<dl class="section return"><dt>Returns</dt><dd>A String that contains the pathname </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00419">419</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="af7093b95640f87758650b8ee60b12e0a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetExecutableDir </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ArgCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>ArgVars</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the Path to the current executable, fast from Args if Possible or from a system call otherwise. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ArgCount</td><td>How many arguments will be passed in ArgVars. </td></tr>
    <tr><td class="paramname">ArgVars</td><td>A pointer to an array, with ArgCount elements, of char* which point to null terminated c strings. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>If you pass bogus arguments to this bad things can and will happen. Infinite loops, segfaults etc... Just pass what main gives you </dd>
<dd>
Not all system provide all the needed information to determine the executable directory </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>A String containing the path to the current executable. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00331">331</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a39c7fe8cd11a8883a66a10d6547d4187"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetExecutableDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the Path to the current executable, in a fast way if possible. </p>
<dl class="section return"><dt>Returns</dt><dd>A String containing the path to the current executable. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00342">342</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5e5ae5e47f06ddfbf61262379d1f8ba3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetExecutableDirFromArg </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ArgCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>ArgVars</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Attempt to get the executable directory from the a set of variables like those passed into Main. </p>
<p>This is the fastest way to get the Executable location, but might not work on all platforms. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ArgCount</td><td>How many arguments will be passed in ArgVars. </td></tr>
    <tr><td class="paramname">ArgVars</td><td>A pointer to an array, with ArgCount elements, of char* which point to null terminated c strings. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section warning"><dt>Warning</dt><dd>If you pass bogus arguments to this bad things can and will happen. Infinite loops, segfaults etc... Just pass what main gives you </dd>
<dd>
Not all system provide all the needed information to determine the executable directory </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>If a whole path is present in ArgVars[0] this returns the directory part of that path, if this uses the executable file this returns '.', otherwise this with return "" indicating it is not usable. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00273">273</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8fb0261ce5b242bdbee574471d1b96f0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetExecutableDirFromArg </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Uses the main parameters stored on an instance of <a class="el" href="classMezzanine_1_1ResourceManager.xhtml" title="This is the manager responsible for the loading and unloading of files.">Mezzanine::ResourceManager</a> to attempt determine executable directory. </p>
<dl class="section return"><dt>Returns</dt><dd>Either a valid Path, '.' if the working dir is likely correct or "" if nothing could be determined. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00299">299</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a8d5974c6154f26db6955d8c50a002377"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetExecutableDirFromSystem </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Used a system call to get the curent Directory the executable is in. This make an external system call and is likely slower than GetExecutableDirFromArg. </p>
<dl class="section return"><dt>Returns</dt><dd>This will return the current path this executable is stored in. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00302">302</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a59b6f7e33e89aface3733ad44ef9e57e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetImplementationTypeName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This Allows any manager name to be sent to a stream. Primarily used for logging. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a String that contains the name. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#ac41d60f674e75d3d16b5544f4feb199c">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00715">715</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9ae2b2182d03c3e21de785d79c357a7d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a9a6f3e238f66cbc68dfec11e4160aa6c">ManagerBase::ManagerType</a> Mezzanine::ResourceManager::GetInterfaceType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This returns the type of this manager. </p>
<p>This is intended to make using and casting from Manager base easier. With this is is possible to cast from <a class="el" href="classMezzanine_1_1ManagerBase.xhtml" title="This is the base class from which all the Entresol and World Managers inherit.">ManagerBase</a> to the correct Manager Type. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns a ManagerTypeName to identify what this can be safely cast to. </dd></dl>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a388aa37ed71b8667785b789c137aa8c6">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00712">712</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a488e3fd88f733177ac5603e52bce1c18"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetLocalAppDataDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the path to the directory intended for game and engine config data that is not meant to be shared. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the path to the Local Application Data Directory. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00438">438</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad81bd381e885c5e983d3ba33f8a4ba2a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char Mezzanine::ResourceManager::GetPathSeparator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the character used to separate entries in the system PATH. </p>
<dl class="section return"><dt>Returns</dt><dd>Semicolon ';' on windows and Forward slash ':' on other operating systems. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00228">228</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4899779f99bce0c62c31ecc38e7af633"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetPluginExtension </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the dot-and-extention of this platforms plugins. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns the platform appropriate extention for plugin files. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00650">650</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5d6f86f351c9ea275436f31cc792b02b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ResourceInputStream.xhtml">ResourceInputStream</a> * Mezzanine::ResourceManager::GetResourceStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>FileName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a stream to read from the specified file. </p>
<p>The returned <a class="el" href="classMezzanine_1_1ResourceInputStream.xhtml" title="A stream from a file, can read from zip files as well.">ResourceInputStream</a> is the Caller's responsibility to deal with. If it is not deleted it is a memory leak. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">FileName</td><td>The name of the File you want to stream data from. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An derivative of std::istream a <a class="el" href="classMezzanine_1_1ResourceInputStream.xhtml" title="A stream from a file, can read from zip files as well.">ResourceInputStream</a> that will pull it's data from the desired resource. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00661">661</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5579269be96a5b402f1caaa15a9f26af"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetShareableAppDataDir </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the path to the directory intended for game and engine config data that is allowed to be shared. </p>
<dl class="section return"><dt>Returns</dt><dd>Returns a string containing the path to the Shareable Application Data Directory. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00468">468</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2bbb34a68534b0e696100a1c49267b61"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetStringFromArchiveType </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">Mezzanine::ArchiveType</a>&#160;</td>
          <td class="paramname"><em>ArchType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets a string that describes an <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ArchType</td><td>A <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> That you want to log or pass to <a class="el" href="namespaceOgre.xhtml">Ogre</a>, or just need a <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> that represents it. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A String that represents the <a class="el" href="namespaceMezzanine.xhtml#a25d7f893350196fa99e164f78df3538b">ArchiveType</a> passed. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00685">685</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a64a61a97cf4504362e03b7843dd54408"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#a9b3665ebc21b3444e1d7858d460475f6">StringVector</a> Mezzanine::ResourceManager::GetSystemPATH </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>PATH</em> = <code><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>(getenv(&quot;PATH&quot;))</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the $PATH or PATH% split and order for easy checking of how the OS does it. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">PATH</td><td>Defaults to the PATH environment variable. But any value like a system path will be split the return of <a class="el" href="classMezzanine_1_1ResourceManager.xhtml#ad81bd381e885c5e983d3ba33f8a4ba2a" title="Get the character used to separate entries in the system PATH.">GetPathSeparator()</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A collection of directories that this system will for executables in the order they will be checked. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00237">237</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a62bb6307f022815fe443a99154cf277f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::GetWorkingDirectory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the working directory as a <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a>. </p>
<dl class="section return"><dt>Returns</dt><dd>The Directory the game was called from (not nescessarilly the location of the executable), as a <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86" title="A datatype used to a series of characters.">Mezzanine::String</a> </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00407">407</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a5c856abff10485077a85d4148bc50597"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::InitAssetGroup </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>Name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Makes a asset group ready to use. </p>
<p>After adding all of your assets and declaring them as nessessary, this function is the final step. After calling this function any and all assets within the defined group will be ready to use. Do not initialize any more groups then you need to however, as that will take up memory and drop performance. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Name</td><td>Name of the asset group. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00626">626</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4b4e77984e21e3eaa1c47772d2e9c6f4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::Initialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Configures this manager for use prior to entering the main loop. </p>

<p>Implements <a class="el" href="classMezzanine_1_1ManagerBase.xhtml#a864e3cac11928a602c1db28fa2d52ee2">Mezzanine::ManagerBase</a>.</p>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00675">675</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a0d02d9b4059ebd6987a1be5118b54efa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine_1_1Resource.xhtml#a62a315666b8e56a64640c813ac400b52">Resource::DataStreamPtr</a> Mezzanine::ResourceManager::OpenAssetStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>AssetName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>AssetGroup</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Opens a stream to an asset in an AssetGroup. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">AssetName</td><td>The identity of the asset to be opened (commonly a file name). </td></tr>
    <tr><td class="paramname">AssetGroup</td><td>The name of the AssetGroup where the Asset can be found. </td></tr>
  </table>
  </dd>
</dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000036">Todo:</a></b></dt><dd>This entire method is a bit of a hack. When the resource system gets refactored it should go through our archives or whatever equivalent. Since we currently have to put up with <a class="el" href="namespaceOgre.xhtml">Ogre</a>'s system, we'll use it for now as a hack. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00534">534</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9ff14c330394714615b869d884795625"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::RemoveDirectory </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>DirectoryPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove an empty directory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">DirectoryPath</td><td>Directory to remove. </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">On</td><td>Error this might throw a <a class="el" href="classMezzanine_1_1IOException.xhtml" title="Thrown when there was an issue with IO but very little was known about it.">Mezzanine::IOException</a> with details about why it failed. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00181">181</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a17b72af560fcf890ee2571dab2109a6d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::ResolveDataPathFromString </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> &amp;&#160;</td>
          <td class="paramname"><em>PathVar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resolves a string describing one of the platform data paths to the actual path it is. </p>
<dl class="section remark"><dt>Remarks</dt><dd>Currently there are only 4 preset path variables, and depending on platform they two or more may go to the same location. The valid variables are as follows: LocalAppData, ShareableAppData, CurrentUserData, and CommonUserData. These are not case sensative. </dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">PathVar</td><td>String containing the name of the path variable. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the actual path of the variable provided. </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00424">424</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a34c663ee3449f28aba3aca14fa5c22a6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void Mezzanine::ResourceManager::SetMainArgs </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>ArgCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>ArgVars</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Store the Main arguments for later use. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ArgCount</td><td>How many arguments will be passed in ArgVars. </td></tr>
    <tr><td class="paramname">ArgVars</td><td>A pointer to an array, with ArgCount elements, of char* which point to null terminated c strings. </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00122">122</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<a class="anchor" id="a7312c017bcb079f3e78400c27224370b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::Which </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&#160;</td>
          <td class="paramname"><em>ExecutableName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Search the system path the same way most systems do to find an executable. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ExecutableName</td><td>The executable to look for. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If the executable is not found "" is returned otherwise the first directory in the PATH containing it is returned. </dd></dl>
<dl class="section warning"><dt>Warning</dt><dd>This function is case sensitive and not all operating systems are. </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000041">Todo:</a></b></dt><dd>Add support for extension handling on windows. "cmd" should find "cmd.exe" in system32, but currently "cmd.exe" needs to be searched </dd></dl>

<p>Definition at line <a class="el" href="resourcemanager_8cpp_source.xhtml#l00258">258</a> of file <a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a0f107daa3b2e095f938b16da9da89d53"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Mezzanine::ResourceManager::ArgC</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>ArgC as it was passed into Main. </p>
<p>This cannot be set statically, it must wait for main(int, char**) to be initialized, then call the appropriate function to set this. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00116">116</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="a54840a405b0dc9ee3663873d4c9514fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char** Mezzanine::ResourceManager::ArgV</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>ArgC as it was passed into Main. </p>
<p>This cannot be set statically, it must wait for main(int, char**) to be initialized, then call the appropriate function to set this. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00120">120</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2ad8e810e3672f2460ec244c8d9b51da"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a00c89e4ec9f68f4bf42675c0aa106916">DataStreamContainer</a> Mezzanine::ResourceManager::DataStreams</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A container storing all un-named, un-grouped data streams known by the resource system. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00101">101</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="ab0aedd87abe53f208c21628fbc624bb0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="classMezzanine_1_1ResourceInputStream.xhtml">ResourceInputStream</a>*&gt; Mezzanine::ResourceManager::DeleteList</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A vector of Pointers to streams created to delete periodically. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00108">108</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="ae511b7a9295377cc54eb22463406dfe5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a> Mezzanine::ResourceManager::EngineDataDir</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The location of engine data. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00097">97</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="a2331a1381ab103523f8e4815d78f9192"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classMezzanine_1_1ResourceManager.xhtml#a191784416ff1caad4c7f5631fc7ec491">NamedDataStreamContainer</a> Mezzanine::ResourceManager::NamedDataStreams</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A container storing all named but un-grouped data streams known by the resource system. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00104">104</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="a3c1b8d26ef1e623a8f96ff5e0559a829"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Ogre::ResourceGroupManager* Mezzanine::ResourceManager::OgreResource</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Encapsulates the functionality of the ogre resource group manager. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00094">94</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>

</div>
</div>
<a class="anchor" id="a95fb64f9f391c9bf2647b6884f370bf9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="namespaceMezzanine.xhtml#acf9fcc130e6ebf08e3d8491aebcf1c86">String</a>&gt; Mezzanine::ResourceManager::ResourceGroups</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A vector of all the known internal Asset Groups. </p>

<p>Definition at line <a class="el" href="resourcemanager_8h_source.xhtml#l00111">111</a> of file <a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="resourcemanager_8h_source.xhtml">resourcemanager.h</a></li>
<li>/home/Code/Mezzanine/Mezzanine/src/<a class="el" href="resourcemanager_8cpp_source.xhtml">resourcemanager.cpp</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Sun Sep 15 2013 04:00:27 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
