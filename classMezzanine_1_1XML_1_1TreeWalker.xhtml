<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Mezzanine::XML::TreeWalker Class Reference</title>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="DoxyStyle.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script> 
</head>
<body onload='searchBox.OnSelectItem(0);'>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;" nowrap="nowrap">
   <div id="projectname"><a href="http://blacktoppstudios.com"><img src="logogreen100pxtall.png"/></a>MezzanineEngine&#160;<span id="projectnumber">September&nbsp;18,&nbsp;2013</span></div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespaceMezzanine.xhtml">Mezzanine</a></li><li class="navelem"><a class="el" href="namespaceMezzanine_1_1XML.xhtml">XML</a></li><li class="navelem"><a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml">TreeWalker</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classMezzanine_1_1XML_1_1TreeWalker-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Mezzanine::XML::TreeWalker Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Used to call a function OnEachNode member of the subtree of nodes descended from a specific node.  
 <a href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="treewalker_8h_source.xhtml">treewalker.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa8935af372b1e92b50ee2db15d0e2940"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa8935af372b1e92b50ee2db15d0e2940"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#aa8935af372b1e92b50ee2db15d0e2940">TreeWalker</a> ()</td></tr>
<tr class="memdesc:aa8935af372b1e92b50ee2db15d0e2940"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor, initializes depth, and can do little else without a fully implemented treewalker. <br/></td></tr>
<tr class="separator:aa8935af372b1e92b50ee2db15d0e2940"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0a8e7158a0576ee74c9857c507d80bd"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af0a8e7158a0576ee74c9857c507d80bd"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#af0a8e7158a0576ee74c9857c507d80bd">~TreeWalker</a> ()</td></tr>
<tr class="memdesc:af0a8e7158a0576ee74c9857c507d80bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual deconstructor. Tears down a <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml" title="Used to call a function OnEachNode member of the subtree of nodes descended from a specific node...">TreeWalker</a>. <br/></td></tr>
<tr class="separator:af0a8e7158a0576ee74c9857c507d80bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8334894ae603514701d5719fe44edb7"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#ae8334894ae603514701d5719fe44edb7">OnEachNode</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)=0</td></tr>
<tr class="memdesc:ae8334894ae603514701d5719fe44edb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">A Pure Virtual function that is expected to be implemented to create the desired behavior.  <a href="#ae8334894ae603514701d5719fe44edb7">More...</a><br/></td></tr>
<tr class="separator:ae8334894ae603514701d5719fe44edb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a889a8358606c610b736e31418fbe085e"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a889a8358606c610b736e31418fbe085e">OnTraversalBegin</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a889a8358606c610b736e31418fbe085e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by the root <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> of the xml subtree when traversal begins.  <a href="#a889a8358606c610b736e31418fbe085e">More...</a><br/></td></tr>
<tr class="separator:a889a8358606c610b736e31418fbe085e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d475a6b417f7427c74e0c4614acd1de"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a4d475a6b417f7427c74e0c4614acd1de">OnTraversalEnd</a> (<a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;node)</td></tr>
<tr class="memdesc:a4d475a6b417f7427c74e0c4614acd1de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called on the root <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> of the xml subtree when traversal ends.  <a href="#a4d475a6b417f7427c74e0c4614acd1de">More...</a><br/></td></tr>
<tr class="separator:a4d475a6b417f7427c74e0c4614acd1de"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a827e7aa4d768158cf615a6bf0586f33f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a827e7aa4d768158cf615a6bf0586f33f">Depth</a> () const </td></tr>
<tr class="memdesc:a827e7aa4d768158cf615a6bf0586f33f"><td class="mdescLeft">&#160;</td><td class="mdescRight">How many descendants deep are we during traversal.  <a href="#a827e7aa4d768158cf615a6bf0586f33f">More...</a><br/></td></tr>
<tr class="separator:a827e7aa4d768158cf615a6bf0586f33f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a6db9d28bd448a131448276ee03de1e6d"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6db9d28bd448a131448276ee03de1e6d"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>Node</b></td></tr>
<tr class="separator:a6db9d28bd448a131448276ee03de1e6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Used to call a function OnEachNode member of the subtree of nodes descended from a specific node. </p>
<p>If you want to do a deep tree traversal, you'll either have to do it via a recursive function or some equivalent method or use a <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml" title="Used to call a function OnEachNode member of the subtree of nodes descended from a specific node...">TreeWalker</a>. This provides a helper for depth-first traversal of a subtree. In order to use it, you have to implement <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml" title="Used to call a function OnEachNode member of the subtree of nodes descended from a specific node...">XML::TreeWalker</a> interface and call <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a60c011dca7c524ff915d1aa8a048a577" title="Perform sophisticated (or whatever) algorithms on this and all descendant Nodes in the XML tree...">XML::Node::Traverse()</a> function. <br/>
<br/>
</p>
<ul>
<li>First, <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a889a8358606c610b736e31418fbe085e" title="Called by the root Node of the xml subtree when traversal begins.">TreeWalker::OnTraversalBegin()</a> is called with traversal root as its argument.<br/>
</li>
<li>Then, <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#ae8334894ae603514701d5719fe44edb7" title="A Pure Virtual function that is expected to be implemented to create the desired behavior.">TreeWalker::OnEachNode()</a> function is called for all nodes in the traversal subtree in depth first order, excluding the traversal root. Each <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> is passed as an argument.<br/>
</li>
<li>Finally, <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a4d475a6b417f7427c74e0c4614acd1de" title="Called on the root Node of the xml subtree when traversal ends.">TreeWalker::OnTraversalEnd()</a> function is called with traversal root as its argument.<br/>
<br/>
 If <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a889a8358606c610b736e31418fbe085e" title="Called by the root Node of the xml subtree when traversal begins.">TreeWalker::OnTraversalBegin()</a>, <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a4d475a6b417f7427c74e0c4614acd1de" title="Called on the root Node of the xml subtree when traversal ends.">TreeWalker::OnTraversalEnd()</a> or any of the <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#ae8334894ae603514701d5719fe44edb7" title="A Pure Virtual function that is expected to be implemented to create the desired behavior.">TreeWalker::OnEachNode()</a> calls return false, the traversal is terminated and false is returned as the traversal result; otherwise, the traversal results in true. Note that you don't have to override begin or end functions; their default implementations return true.<br/>
<br/>
 You can get the node's depth relative to the traversal root at any point by calling <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a827e7aa4d768158cf615a6bf0586f33f" title="How many descendants deep are we during traversal.">TreeWalker::Depth()</a> function. </li>
</ul>

<p>Definition at line <a class="el" href="treewalker_8h_source.xhtml#l00083">83</a> of file <a class="el" href="treewalker_8h_source.xhtml">treewalker.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a827e7aa4d768158cf615a6bf0586f33f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int Mezzanine::XML::TreeWalker::Depth </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>How many descendants deep are we during traversal. </p>
<dl class="section return"><dt>Returns</dt><dd>This returns -1 if called from <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a889a8358606c610b736e31418fbe085e" title="Called by the root Node of the xml subtree when traversal begins.">TreeWalker::OnTraversalBegin()</a> or <a class="el" href="classMezzanine_1_1XML_1_1TreeWalker.xhtml#a4d475a6b417f7427c74e0c4614acd1de" title="Called on the root Node of the xml subtree when traversal ends.">TreeWalker::OnTraversalEnd()</a>, and returns 0-based depth if called from OnEachNode - depth is 0 for all children of the traversal root, 1 for all grandchildren, 2 for great-grandchildren and so on. </dd></dl>

</div>
</div>
<a class="anchor" id="ae8334894ae603514701d5719fe44edb7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::XML::TreeWalker::OnEachNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A Pure Virtual function that is expected to be implemented to create the desired behavior. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>The curren node being trraversed.</td></tr>
  </table>
  </dd>
</dl>
<p>This is called on every <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> that is traversed except the root node of the traversed subtree. Can be used to perform sophisticated searches of a portion of the xml document, alter the document on a large scale, gather statistics, or just about any other behavior that requires touching many nodes. </p>
<dl class="section return"><dt>Returns</dt><dd>if true Traversal is expected to continue, if false, then traversal ends and the <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a60c011dca7c524ff915d1aa8a048a577" title="Perform sophisticated (or whatever) algorithms on this and all descendant Nodes in the XML tree...">Node::Traverse()</a> that was called is expected to return false. </dd></dl>

</div>
</div>
<a class="anchor" id="a889a8358606c610b736e31418fbe085e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::XML::TreeWalker::OnTraversalBegin </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called by the root <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> of the xml subtree when traversal begins. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>The first node the Tree to traverse</td></tr>
  </table>
  </dd>
</dl>
<p>By default this simply returns true, but is expected to be overridden with any desired behavior </p>
<dl class="section return"><dt>Returns</dt><dd>True by default. If it returns false, then traversal ends and the <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a60c011dca7c524ff915d1aa8a048a577" title="Perform sophisticated (or whatever) algorithms on this and all descendant Nodes in the XML tree...">Node::Traverse()</a> that was called is expected to return false. </dd></dl>

</div>
</div>
<a class="anchor" id="a4d475a6b417f7427c74e0c4614acd1de"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool Mezzanine::XML::TreeWalker::OnTraversalEnd </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml">Node</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called on the root <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml" title="A light-weight handle for manipulating nodes in DOM tree.">Node</a> of the xml subtree when traversal ends. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>The last node the Tree to traverse</td></tr>
  </table>
  </dd>
</dl>
<p>By default this simply returns true, but is expected to be overridden with any desired behavior </p>
<dl class="section return"><dt>Returns</dt><dd>True by default. If it returns false, then traversal ends and the <a class="el" href="classMezzanine_1_1XML_1_1Node.xhtml#a60c011dca7c524ff915d1aa8a048a577" title="Perform sophisticated (or whatever) algorithms on this and all descendant Nodes in the XML tree...">Node::Traverse()</a> that was called is expected to return false. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/Code/Mezzanine/Mezzanine/src/XML/<a class="el" href="treewalker_8h_source.xhtml">treewalker.h</a></li>
</ul>
</div><!-- contents -->
<hr class="footer"/><address class="footer"><small>
Generated on Wed Sep 18 2013 00:03:03 for MezzanineEngine by&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1</small></address>
</body>
</html>
